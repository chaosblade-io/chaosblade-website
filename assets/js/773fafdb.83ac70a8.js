"use strict";(self.webpackChunkchaosblade=self.webpackChunkchaosblade||[]).push([[52433],{15680:(e,n,a)=>{a.d(n,{xA:()=>d,yg:()=>u});var l=a(96540);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,l)}return a}function p(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function r(e,n){if(null==e)return{};var a,l,t=function(e,n){if(null==e)return{};var a,l,t={},o=Object.keys(e);for(l=0;l<o.length;l++)a=o[l],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)a=o[l],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var s=l.createContext({}),g=function(e){var n=l.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):p(p({},n),e)),a},d=function(e){var n=g(e.components);return l.createElement(s.Provider,{value:n},e.children)},y="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},i=l.forwardRef((function(e,n){var a=e.components,t=e.mdxType,o=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),y=g(a),i=t,u=y["".concat(s,".").concat(i)]||y[i]||m[i]||o;return a?l.createElement(u,p(p({ref:n},d),{},{components:a})):l.createElement(u,p({ref:n},d))}));function u(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=a.length,p=new Array(o);p[0]=i;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r[y]="string"==typeof e?e:t,p[1]=r;for(var g=2;g<o;g++)p[g]=a[g];return l.createElement.apply(null,p)}return l.createElement.apply(null,a)}i.displayName="MDXCreateElement"},51365:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>p,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>g});var l=a(58168),t=(a(96540),a(15680));const o={authors:"guoxudong",title:"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u56db\uff09",tags:["chaosblade"],hide_table_of_contents:!1},p=void 0,r={permalink:"/blog/2020/07/22/chaosblade-start-4",editUrl:"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2020-07-22-chaosblade-start-4.md",source:"@site/blog/2020-07-22-chaosblade-start-4.md",title:"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u56db\uff09",description:"\u524d\u8a00",date:"2020-07-22T00:00:00.000Z",formattedDate:"2020\u5e747\u670822\u65e5",tags:[{label:"chaosblade",permalink:"/blog/tags/chaosblade"}],readingTime:10.685,hasTruncateMarker:!0,authors:[{name:"\u90ed\u65ed\u4e1c\uff08@sunny0826\uff09",title:"Maintainer of ChaosBlade",url:"https://github.com/sunny0826",imageURL:"https://avatars.githubusercontent.com/u/24563928?v=4",key:"guoxudong"}],frontMatter:{authors:"guoxudong",title:"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u56db\uff09",tags:["chaosblade"],hide_table_of_contents:!1},prevItem:{title:"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e94\uff09",permalink:"/blog/2020/08/06/chaosblade-start-5"},nextItem:{title:"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e09\uff09",permalink:"/blog/2020/06/15/chaosblade-start-3"}},s={authorsImageUrls:[void 0]},g=[{value:"\u524d\u8a00",id:"\u524d\u8a00",level:2},{value:"\u5b9e\u9a8c\u5bf9\u8c61\uff1aNode",id:"\u5b9e\u9a8c\u5bf9\u8c61node",level:2},{value:"Node \u5b9e\u9a8c\u573a\u666f",id:"node-\u5b9e\u9a8c\u573a\u666f",level:2},{value:"\u8282\u70b9\u8d44\u6e90\u76f8\u5173\u573a\u666f",id:"\u8282\u70b9\u8d44\u6e90\u76f8\u5173\u573a\u666f",level:3},{value:"\u8282\u70b9 CPU \u8d1f\u8f7d\u5b9e\u9a8c\u573a\u666f",id:"\u8282\u70b9-cpu-\u8d1f\u8f7d\u5b9e\u9a8c\u573a\u666f",level:4},{value:"\u8282\u70b9\u7f51\u7edc\u76f8\u5173\u573a\u666f",id:"\u8282\u70b9\u7f51\u7edc\u76f8\u5173\u573a\u666f",level:3},{value:"\u8282\u70b9\u7f51\u7edc\u5ef6\u8fdf\u573a\u666f",id:"\u8282\u70b9\u7f51\u7edc\u5ef6\u8fdf\u573a\u666f",level:4},{value:"\u8282\u70b9\u7f51\u7edc\u4e22\u5305\u573a\u666f",id:"\u8282\u70b9\u7f51\u7edc\u4e22\u5305\u573a\u666f",level:4},{value:"\u8282\u70b9\u57df\u540d\u8bbf\u95ee\u5f02\u5e38\u573a\u666f",id:"\u8282\u70b9\u57df\u540d\u8bbf\u95ee\u5f02\u5e38\u573a\u666f",level:4},{value:"\u8282\u70b9\u78c1\u76d8\u76f8\u5173\u573a\u666f",id:"\u8282\u70b9\u78c1\u76d8\u76f8\u5173\u573a\u666f",level:3},{value:"\u8282\u70b9\u78c1\u76d8\u586b\u5145\u573a\u666f",id:"\u8282\u70b9\u78c1\u76d8\u586b\u5145\u573a\u666f",level:4},{value:"\u8282\u70b9\u8fdb\u7a0b\u76f8\u5173\u573a\u666f",id:"\u8282\u70b9\u8fdb\u7a0b\u76f8\u5173\u573a\u666f",level:3},{value:"\u6740\u8282\u70b9\u4e0a\u6307\u5b9a\u8fdb\u7a0b",id:"\u6740\u8282\u70b9\u4e0a\u6307\u5b9a\u8fdb\u7a0b",level:4},{value:"\u6302\u8d77\u8282\u70b9\u4e0a\u6307\u5b9a\u8fdb\u7a0b",id:"\u6302\u8d77\u8282\u70b9\u4e0a\u6307\u5b9a\u8fdb\u7a0b",level:4},{value:"\u7ed3\u8bed",id:"\u7ed3\u8bed",level:2}],d={toc:g},y="wrapper";function m(e){let{components:n,...a}=e;return(0,t.yg)(y,(0,l.A)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h2",{id:"\u524d\u8a00"},"\u524d\u8a00"),(0,t.yg)("p",null,"\u5728\u4e0a\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528 ",(0,t.yg)("strong",{parentName:"p"},"ChaosBlade Operator")," \u5bf9 pod \u8d44\u6e90\u8fdb\u884c\u6df7\u6c8c\u5b9e\u9a8c\u3002\u4ece\u672c\u7ae0\u5c06\u7ee7\u7eed\u5bf9 Kubernetes Node \u8d44\u6e90\u7684\u6df7\u6c8c\u5b9e\u9a8c\u8fdb\u884c\u8bb2\u89e3\uff0c\u540c\u65f6\u4e5f\u914d\u5957\u4e86 ",(0,t.yg)("a",{parentName:"p",href:"https://katacoda.com/"},"katacode")," \u4ea4\u4e92\u5f0f\u6559\u7a0b\uff0c\u8bfb\u8005\u53ef\u7528\u901a\u8fc7 katacode\uff0c\u5728\u6d4f\u89c8\u5668\u4e0a\u64cd\u4f5c\u771f\u5b9e\u7684 Kubernetes \u548c ChaosBlade\u3002"),(0,t.yg)("p",null,(0,t.yg)("a",{parentName:"p",href:"https://chaosblade.io/"},"chaosblade.io")," \u5b98\u7f51\u5df2\u7ecf\u6b63\u5f0f\u4e0a\u7ebf\u3002"),(0,t.yg)("h2",{id:"\u5b9e\u9a8c\u5bf9\u8c61node"},"\u5b9e\u9a8c\u5bf9\u8c61\uff1aNode"),(0,t.yg)("p",null,"\u5728 Kubernetes \u4e2d\uff0c\u8282\u70b9\uff08Node\uff09\u662f\u6267\u884c\u5de5\u4f5c\u7684\u673a\u5668\uff0c\u4ee5\u524d\u53eb\u505a minion\u3002\u6839\u636e\u4f60\u7684\u96c6\u7fa4\u73af\u5883\uff0c\u8282\u70b9\u53ef\u4ee5\u662f\u4e00\u4e2a\u865a\u62df\u673a\u6216\u8005\u7269\u7406\u673a\u5668\u3002\u6bcf\u4e2a\u8282\u70b9\u90fd\u5305\u542b\u7528\u4e8e\u8fd0\u884c pods \u7684\u5fc5\u8981\u670d\u52a1\uff0c\u5e76\u7531\u4e3b\u63a7\u7ec4\u4ef6\u7ba1\u7406\u3002\u8282\u70b9\u4e0a\u7684\u670d\u52a1\u5305\u62ec \u5bb9\u5668\u8fd0\u884c\u65f6\u3001kubelet \u548c kube-proxy\u3002"),(0,t.yg)("h2",{id:"node-\u5b9e\u9a8c\u573a\u666f"},"Node \u5b9e\u9a8c\u573a\u666f"),(0,t.yg)("p",null,"\u540c\u4e0a\u7bc7\u6587\u7ae0\uff0c\u672c\u7bc7\u9ed8\u8ba4\u5df2\u5b89\u88c5 ",(0,t.yg)("a",{parentName:"p",href:"https://github.com/cloudnativeapp/guestbook?spm=5176.2020520152.0.0.7c5f16ddH8myx6"},"guestbook")," \u5e94\u7528\u548c ChaosBlade Operator\u3002"),(0,t.yg)("h3",{id:"\u8282\u70b9\u8d44\u6e90\u76f8\u5173\u573a\u666f"},"\u8282\u70b9\u8d44\u6e90\u76f8\u5173\u573a\u666f"),(0,t.yg)("h4",{id:"\u8282\u70b9-cpu-\u8d1f\u8f7d\u5b9e\u9a8c\u573a\u666f"},"\u8282\u70b9 CPU \u8d1f\u8f7d\u5b9e\u9a8c\u573a\u666f"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u5b9e\u9a8c\u76ee\u6807"),"\uff1a\u6307\u5b9a\u4e00\u4e2a\u8282\u70b9\uff0c\u505a CPU \u8d1f\u8f7d 80% \u5b9e\u9a8c\u3002"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u5f00\u59cb\u5b9e\u9a8c")),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"node_cpu_load.yaml")," \u5185\u5bb9\uff1a"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: chaosblade.io/v1alpha1\nkind: ChaosBlade\nmetadata:\n  name: cpu-load\nspec:\n  experiments:\n  - scope: node\n    target: cpu\n    action: fullload\n    desc: "increase node cpu load by names"\n    matchers:\n    - name: names\n      value:\n      - "docker20"\n    - name: cpu-percent\n      value:\n      - "80"\n')),(0,t.yg)("p",null,"\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\uff0c\u4fee\u6539 ",(0,t.yg)("inlineCode",{parentName:"p"},"node_cpu_load.yaml")," \u4e2d\u7684 ",(0,t.yg)("inlineCode",{parentName:"p"},"names")," \u503c\u3002"),(0,t.yg)("p",null,"\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ kubectl apply -f node_cpu_load.yaml\n")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001")),(0,t.yg)("p",null,"\u6267\u884c ",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl get blade cpu-load -o json")," \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u67e5\u770b\u5b9e\u9a8c\u7ed3\u679c")),(0,t.yg)("p",null,"\u8fdb\u5165\u8be5 Node \u8282\u70b9\uff0c\u53ef\u4ee5\u770b\u5230\u8be5\u8282\u70b9 CPU \u8fbe\u5230\u9884\u671f\u6548\u679c\uff1a"),(0,t.yg)("p",null,(0,t.yg)("img",{parentName:"p",src:"https://tvax4.sinaimg.cn/large/ad5fbf65ly1ggzw9xq77mg20qg06i4qp.gif",alt:"\u8282\u70b9 CPU \u8d1f\u8f7d\u5b9e\u9a8c"})),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u505c\u6b62\u5b9e\u9a8c")),(0,t.yg)("p",null,"\u6267\u884c\u547d\u4ee4\uff1a",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl delete -f node_cpu_load.yaml")),(0,t.yg)("p",null,"\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl delete blade cpu-load")),(0,t.yg)("h3",{id:"\u8282\u70b9\u7f51\u7edc\u76f8\u5173\u573a\u666f"},"\u8282\u70b9\u7f51\u7edc\u76f8\u5173\u573a\u666f"),(0,t.yg)("blockquote",null,(0,t.yg)("p",{parentName:"blockquote"},"\u5b9e\u9a8c\u524d\uff0c\u8bf7\u5148\u767b\u5f55 node \u8282\u70b9\uff0c\u4f7f\u7528 ",(0,t.yg)("inlineCode",{parentName:"p"},"ifconfig")," \u547d\u4ee4\u67e5\u770b\u7f51\u5361\u4fe1\u606f\uff0c\u4e0d\u662f\u6240\u6709\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7f51\u5361\u540d\u79f0\u90fd\u662f ",(0,t.yg)("inlineCode",{parentName:"p"},"eth0"),"\u3002")),(0,t.yg)("h4",{id:"\u8282\u70b9\u7f51\u7edc\u5ef6\u8fdf\u573a\u666f"},"\u8282\u70b9\u7f51\u7edc\u5ef6\u8fdf\u573a\u666f"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u5b9e\u9a8c\u76ee\u6807"),"\uff1a\u6307\u5b9a\u8282\u70b9\u7684\u672c\u5730 32436 \u7aef\u53e3\u6dfb\u52a0 3000 \u6beb\u79d2\u8bbf\u95ee\u5ef6\u8fdf\uff0c\u5ef6\u8fdf\u65f6\u95f4\u4e0a\u4e0b\u6d6e\u52a8 1000 \u6beb\u79d2\u3002"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u5f00\u59cb\u5b9e\u9a8c")),(0,t.yg)("p",null,"\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\uff0c\u4fee\u6539 ",(0,t.yg)("inlineCode",{parentName:"p"},"delay_node_network_by_names.yaml")," \u4e2d\u7684 ",(0,t.yg)("inlineCode",{parentName:"p"},"names")," \u503c\u3002"),(0,t.yg)("p",null,"\u5bf9 docker20 \u8282\u70b9\u672c\u5730\u7aef\u53e3 32436 \u8bbf\u95ee\u4e22\u5305\u7387 100%\u3002"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"delay_node_network_by_names.yaml")," \u5185\u5bb9\uff1a"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: chaosblade.io/v1alpha1\nkind: ChaosBlade\nmetadata:\n  name: delay-node-network-by-names\nspec:\n  experiments:\n  - scope: node\n    target: network\n    action: delay\n    desc: "delay node network loss"\n    matchers:\n    - name: names\n      value: ["docker20"]\n    - name: interface\n      value: ["ens33"]\n    - name: local-port\n      value: ["32436"]\n    - name: time\n      value: ["3000"]\n    - name: offset\n      value: ["1000"]\n')),(0,t.yg)("p",null,"\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ kubectl apply -f delay_node_network_by_names.yaml\n")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001")),(0,t.yg)("p",null,"\u6267\u884c ",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl get blade delay-node-network-by-names -o json")," \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u67e5\u770b\u5b9e\u9a8c\u7ed3\u679c")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},'# \u4ece\u5b9e\u9a8c\u8282\u70b9\u8bbf\u95ee Guestbook\n$ time echo "" | telnet 192.168.1.129 32436\nTrying 192.168.1.129...\nConnected to 192.168.1.129.\nEscape character is \'^]\'.\nConnection closed by foreign host.\necho ""  0.00s user 0.00s system 35% cpu 0.003 total\ntelnet 192.168.1.129 32436  0.01s user 0.00s system 0% cpu 3.248 total\n')),(0,t.yg)("p",null,(0,t.yg)("img",{parentName:"p",src:"https://tva4.sinaimg.cn/large/ad5fbf65ly1ggzwhc0n0yg20qg070dou.gif",alt:"\u8282\u70b9\u7f51\u7edc\u5ef6\u8fdf\u573a\u666f"})),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u505c\u6b62\u5b9e\u9a8c")),(0,t.yg)("p",null,"\u6267\u884c\u547d\u4ee4\uff1a",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl delete -f delay_node_network_by_names.yaml")),(0,t.yg)("p",null,"\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl delete blade delay-node-network-by-names")),(0,t.yg)("h4",{id:"\u8282\u70b9\u7f51\u7edc\u4e22\u5305\u573a\u666f"},"\u8282\u70b9\u7f51\u7edc\u4e22\u5305\u573a\u666f"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u5b9e\u9a8c\u76ee\u6807"),"\uff1a\u6307\u5b9a\u8282\u70b9\u7684 ",(0,t.yg)("inlineCode",{parentName:"p"},"32436")," \u7aef\u53e3\u6ce8\u5165\u4e22\u5305\u7387 100% \u7684\u6545\u969c\u3002"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u5f00\u59cb\u5b9e\u9a8c")),(0,t.yg)("p",null,"\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\uff0c\u4fee\u6539 ",(0,t.yg)("inlineCode",{parentName:"p"},"loss_node_network_by_names.yaml")," \u4e2d\u7684 ",(0,t.yg)("inlineCode",{parentName:"p"},"names")," \u503c\u3002"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"loss_node_network_by_names.yaml")," \u5185\u5bb9\uff1a"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: chaosblade.io/v1alpha1\nkind: ChaosBlade\nmetadata:\n  name: loss-node-network-by-names\nspec:\n  experiments:\n  - scope: node\n    target: network\n    action: loss\n    desc: "node network loss"\n    matchers:\n    - name: names\n      value: ["docker20"]\n    - name: percent\n      value: ["100"]\n    - name: interface\n      value: ["ens33"]\n    - name: local-port\n      value: ["32436"]\n')),(0,t.yg)("p",null,"\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ kubectl apply -f loss_node_network_by_names.yaml\n")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u67e5\u770b\u5b9e\u9a8c\u7ed3\u679c")),(0,t.yg)("p",null,"\u6267\u884c ",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl get blade loss-node-network-by-names -o json")," \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u89c2\u6d4b\u7ed3\u679c")),(0,t.yg)("p",null,"\u8be5\u7aef\u53e3\u4e3a ",(0,t.yg)("inlineCode",{parentName:"p"},"Guestbook")," nodeport \u7684\u7aef\u53e3\uff0c\u8bbf\u95ee\u5b9e\u9a8c\u7aef\u53e3\u65e0\u54cd\u5e94\uff0c\u4f46\u662f\u8bbf\u95ee\u672a\u5f00\u542f\u5b9e\u9a8c\u7684\u7aef\u53e3\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\uff1a"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"# \u83b7\u53d6\u8282\u70b9 IP\n$ kubectl get node -o wide\nNAME       STATUS   ROLES                      AGE     VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION       CONTAINER-RUNTIME\ndocker20   Ready    worker                     3d16h   v1.17.6   192.168.1.129   <none>        Ubuntu 18.04.4 LTS   4.15.0-101-generic   docker://19.3.11\nkk         Ready    controlplane,etcd,worker   4d16h   v1.17.6   192.168.4.210   <none>        Ubuntu 18.04.4 LTS   4.15.0-101-generic   docker://19.3.11\n# \u4ece\u5b9e\u9a8c\u8282\u70b9\u8bbf\u95ee Guestbook - \u65e0\u6cd5\u8bbf\u95ee\n$ telnet 192.168.1.129 32436\nTrying 192.168.1.129...\ntelnet: connect to address 192.168.1.129: Operation timed out\ntelnet: Unable to connect to remote host\n# \u4ece\u975e\u5b9e\u9a8c\u8282\u70b9\u8bbf\u95ee Guestbook - \u6b63\u5e38\u8bbf\u95ee\n$ telnet 192.168.4.210 32436\nTrying 192.168.4.210...\nConnected to 192.168.4.210.\nEscape character is '^]'.\n")),(0,t.yg)("p",null,(0,t.yg)("img",{parentName:"p",src:"https://tva2.sinaimg.cn/large/ad5fbf65ly1ggzwjjyj67g20qg07c4az.gif",alt:"\u8282\u70b9\u7f51\u7edc\u4e22\u5305\u573a\u666f"})),(0,t.yg)("p",null,"\u540c\u6837\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4ece\u6d4f\u89c8\u5668\u8bbf\u95ee\u5730\u5740\uff0c\u9a8c\u8bc1\u5b9e\u9a8c\u3002"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u505c\u6b62\u5b9e\u9a8c")),(0,t.yg)("p",null,"\u6267\u884c\u547d\u4ee4\uff1a",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl delete -f loss_node_network_by_names.yaml")),(0,t.yg)("p",null,"\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl delete blade loss-node-network-by-names")),(0,t.yg)("h4",{id:"\u8282\u70b9\u57df\u540d\u8bbf\u95ee\u5f02\u5e38\u573a\u666f"},"\u8282\u70b9\u57df\u540d\u8bbf\u95ee\u5f02\u5e38\u573a\u666f"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u5b9e\u9a8c\u76ee\u6807"),"\uff1a\u672c\u5b9e\u9a8c\u901a\u8fc7\u4fee\u6539 Node \u7684 hosts\uff0c\u7be1\u6539\u57df\u540d\u5730\u5740\u6620\u5c04\uff0c\u6a21\u62df Pod \u5185\u57df\u540d\u8bbf\u95ee\u5f02\u5e38\u573a\u666f\u3002"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u5f00\u59cb\u5b9e\u9a8c")),(0,t.yg)("p",null,"\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\uff0c\u4fee\u6539 ",(0,t.yg)("inlineCode",{parentName:"p"},"dns_node_network_by_names.yaml")," \u4e2d\u7684 ",(0,t.yg)("inlineCode",{parentName:"p"},"names")," \u503c\u3002"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"dns_node_network_by_names.yaml")," \u5185\u5bb9\uff1a"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: chaosblade.io/v1alpha1\nkind: ChaosBlade\nmetadata:\n  name: dns-node-network-by-names\nspec:\n  experiments:\n  - scope: node\n    target: network\n    action: dns\n    desc: "dns node network by names"\n    matchers:\n    - name: names\n      value:\n      - "docker20"\n    - name: domain\n      value: ["www.baidu.com"]\n    - name: ip\n      value: ["10.0.0.1"]\n')),(0,t.yg)("p",null,"\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ kubectl apply -f dns_node_network_by_names.yaml\n")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001")),(0,t.yg)("p",null,"\u6267\u884c ",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl get blade dns-node-network-by-names -o json")," \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u67e5\u770b\u5b9e\u9a8c\u7ed3\u679c")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"# \u8fdb\u5165\u5b9e\u9a8c node\n$ ssh kk@192.168.1.129\n# Ping www.baidu.com\n$ ping www.baidu.com\n# \u65e0\u54cd\u5e94\n")),(0,t.yg)("p",null,(0,t.yg)("img",{parentName:"p",src:"https://tvax4.sinaimg.cn/large/ad5fbf65ly1ggzwluapg5g20qg07011a.gif",alt:"\u8282\u70b9\u57df\u540d\u8bbf\u95ee\u5f02\u5e38\u573a\u666f"})),(0,t.yg)("p",null,"\u53ef\u4ee5\u770b\u5230 Node \u7684 ",(0,t.yg)("inlineCode",{parentName:"p"},"/etc/hosts")," \u6587\u4ef6\u88ab\u4fee\u6539\uff0c\u6a21\u62df\u4e86 dns \u89e3\u6790\u5f02\u5e38\u7684\u573a\u666f\u3002"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u505c\u6b62\u5b9e\u9a8c")),(0,t.yg)("p",null,"\u6267\u884c\u547d\u4ee4\uff1a",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl delete -f dns_node_network_by_names.yaml")),(0,t.yg)("p",null,"\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl delete blade dns-node-network-by-names")),(0,t.yg)("h3",{id:"\u8282\u70b9\u78c1\u76d8\u76f8\u5173\u573a\u666f"},"\u8282\u70b9\u78c1\u76d8\u76f8\u5173\u573a\u666f"),(0,t.yg)("p",null,"kubernetes \u8282\u70b9\u78c1\u76d8\u573a\u666f\u3002"),(0,t.yg)("h4",{id:"\u8282\u70b9\u78c1\u76d8\u586b\u5145\u573a\u666f"},"\u8282\u70b9\u78c1\u76d8\u586b\u5145\u573a\u666f"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u5b9e\u9a8c\u76ee\u6807"),"\uff1a\u6307\u5b9a\u8282\u70b9\u78c1\u76d8\u5360\u7528 80%"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u5f00\u59cb\u5b9e\u9a8c")),(0,t.yg)("p",null,"\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\uff0c\u4fee\u6539 ",(0,t.yg)("inlineCode",{parentName:"p"},"fill_node_disk_by_names.yaml")," \u4e2d\u7684 ",(0,t.yg)("inlineCode",{parentName:"p"},"names")," \u503c\u3002"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"fill_node_disk_by_names.yaml")," \u5185\u5bb9\uff1a"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: chaosblade.io/v1alpha1\nkind: ChaosBlade\nmetadata:\n  name: fill-node-disk-by-names\nspec:\n  experiments:\n  - scope: node\n    target: disk\n    action: fill\n    desc: "node disk fill"\n    matchers:\n    - name: names\n      value: ["docker20"]\n    - name: percent\n      value: ["80"]\n')),(0,t.yg)("p",null,"\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ kubectl apply -f fill_node_disk_by_names.yaml\n")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001")),(0,t.yg)("p",null,"\u6267\u884c ",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl get blade fill-node-disk-by-names -o json")," \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u67e5\u770b\u5b9e\u9a8c\u7ed3\u679c")),(0,t.yg)("p",null,"\u53ef\u4ee5\u770b\u5230\u78c1\u76d8\u5360\u7528 80%\u3002"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"# \u8fdb\u5165\u5b9e\u9a8c node\n$ ssh kk@192.168.1.129\n# \u67e5\u770b\u78c1\u76d8\u4f7f\u7528\u7387\n$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\nudev            7.9G     0  7.9G   0% /dev\ntmpfs           1.6G  2.2M  1.6G   1% /run\n/dev/sda2        98G   73G   20G  79% /\ntmpfs           7.9G     0  7.9G   0% /dev/shm\ntmpfs           5.0M     0  5.0M   0% /run/lock\ntmpfs           7.9G     0  7.9G   0% /sys/fs/cgroup\n/dev/loop1       90M   90M     0 100% /snap/core/8268\ntmpfs           1.6G     0  1.6G   0% /run/user/1000\n/dev/loop0       98M   98M     0 100% /snap/core/9289\n")),(0,t.yg)("p",null,(0,t.yg)("img",{parentName:"p",src:"https://tva4.sinaimg.cn/large/ad5fbf65ly1ggzwq8gdtrg20t406k7fr.gif",alt:"\u8282\u70b9\u78c1\u76d8\u586b\u5145\u573a\u666f"})),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u505c\u6b62\u5b9e\u9a8c")),(0,t.yg)("p",null,"\u6267\u884c\u547d\u4ee4\uff1a",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl delete -f fill_node_disk_by_names.yaml")),(0,t.yg)("p",null,"\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl delete blade fill-node-disk-by-names")),(0,t.yg)("h3",{id:"\u8282\u70b9\u8fdb\u7a0b\u76f8\u5173\u573a\u666f"},"\u8282\u70b9\u8fdb\u7a0b\u76f8\u5173\u573a\u666f"),(0,t.yg)("p",null,"kubernetes \u8282\u70b9\u8fdb\u7a0b\u76f8\u5173\u573a\u666f\u3002"),(0,t.yg)("h4",{id:"\u6740\u8282\u70b9\u4e0a\u6307\u5b9a\u8fdb\u7a0b"},"\u6740\u8282\u70b9\u4e0a\u6307\u5b9a\u8fdb\u7a0b"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u5b9e\u9a8c\u76ee\u6807"),"\uff1a\u6b64\u5b9e\u9a8c\u4f1a\u5220\u9664\u6307\u5b9a\u8282\u70b9\u4e0a\u7684 ",(0,t.yg)("inlineCode",{parentName:"p"},"redis-server")," \u8fdb\u7a0b\u3002"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u5f00\u59cb\u5b9e\u9a8c")),(0,t.yg)("p",null,"\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\uff0c\u4fee\u6539 ",(0,t.yg)("inlineCode",{parentName:"p"},"kill_node_process_by_names.yaml")," \u4e2d\u7684 ",(0,t.yg)("inlineCode",{parentName:"p"},"names")," \u503c\u3002"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"kill_node_process_by_names.yaml")," \u5185\u5bb9\uff1a"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: chaosblade.io/v1alpha1\nkind: ChaosBlade\nmetadata:\n  name: kill-node-process-by-names\nspec:\n  experiments:\n  - scope: node\n    target: process\n    action: kill\n    desc: "kill node process by names"\n    matchers:\n    - name: names\n      value: ["docker20"]\n    - name: process\n      value: ["redis-server"]\n')),(0,t.yg)("p",null,"\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ kubectl apply -f kill_node_process_by_names.yaml\n")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001")),(0,t.yg)("p",null,"\u6267\u884c ",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl get blade kill-node-process-by-names -o json")," \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u67e5\u770b\u5b9e\u9a8c\u7ed3\u679c")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"# \u8fdb\u5165\u5b9e\u9a8c node\n$ ssh kk@192.168.1.129\n# \u67e5\u770b redis-server \u8fdb\u7a0b\u53f7\n$ ps -ef | grep redis-server\nroot     31327 31326  0 06:15 ?        00:00:00 redis-server *:6379\n# \u53ef\u4ee5\u770b\u5230\u8fdb\u7a0b\u53f7\u53d1\u751f\u4e86\u53d8\u5316\n$ ps -ef | grep redis-server\nroot      2873  2872  0 06:23 ?        00:00:00 redis-server *:6379\n")),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"redis-server")," \u7684\u8fdb\u7a0b\u53f7\u53d1\u751f\u6539\u53d8\uff0c\u8bf4\u660e\u88ab\u6740\u6389\u540e\uff0c\u53c8\u88ab\u91cd\u65b0\u62c9\u8d77\u3002"),(0,t.yg)("p",null,(0,t.yg)("img",{parentName:"p",src:"https://tva1.sinaimg.cn/large/ad5fbf65ly1ggzwsx3sbig20t407a4d6.gif",alt:"\u6740\u8282\u70b9\u4e0a\u6307\u5b9a\u8fdb\u7a0b"})),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u505c\u6b62\u5b9e\u9a8c")),(0,t.yg)("p",null,"\u6267\u884c\u547d\u4ee4\uff1a",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl delete -f kill_node_process_by_names.yaml")),(0,t.yg)("p",null,"\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl delete blade kill-node-process-by-names")),(0,t.yg)("h4",{id:"\u6302\u8d77\u8282\u70b9\u4e0a\u6307\u5b9a\u8fdb\u7a0b"},"\u6302\u8d77\u8282\u70b9\u4e0a\u6307\u5b9a\u8fdb\u7a0b"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u5b9e\u9a8c\u76ee\u6807"),"\uff1a\u6b64\u5b9e\u9a8c\u4f1a\u6302\u8d77\u6307\u5b9a\u8282\u70b9\u4e0a\u7684 ",(0,t.yg)("inlineCode",{parentName:"p"},"redis-server")," \u8fdb\u7a0b\u3002"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u5f00\u59cb\u5b9e\u9a8c")),(0,t.yg)("p",null,"\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\uff0c\u4fee\u6539 ",(0,t.yg)("inlineCode",{parentName:"p"},"stop_node_process_by_names.yaml")," \u4e2d\u7684 ",(0,t.yg)("inlineCode",{parentName:"p"},"names")," \u503c\u3002"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"stop_node_process_by_names.yaml")," \u5185\u5bb9\uff1a"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: chaosblade.io/v1alpha1\nkind: ChaosBlade\nmetadata:\n  name: stop-node-process-by-names\nspec:\n  experiments:\n  - scope: node\n    target: process\n    action: stop\n    desc: "kill node process by names"\n    matchers:\n    - name: names\n      value: ["docker20"]\n    - name: process\n      value: ["redis-server"]\n')),(0,t.yg)("p",null,"\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ kubectl apply -f stop_node_process_by_names.yaml\n")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001")),(0,t.yg)("p",null,"\u6267\u884c ",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl get blade stop-node-process-by-names -o json")," \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u67e5\u770b\u5b9e\u9a8c\u7ed3\u679c")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"# \u8fdb\u5165\u5b9e\u9a8c node\n$ ssh kk@192.168.1.129\n# \u67e5\u770b redis-server \u8fdb\u7a0b\u53f7\n$ ps aux| grep redis-server\nroot      5632  0.0  0.0  41520  4168 ?        Tl   06:28   0:06 redis-server *:6379\n")),(0,t.yg)("p",null,"\u53ef\u4ee5\u770b\u5230 ",(0,t.yg)("inlineCode",{parentName:"p"},"redis-server")," \u6b64\u523b\u8fdb\u7a0b\u5904\u4e8e\u6682\u505c\u72b6\u6001\u4e86\uff08T\uff09\u3002"),(0,t.yg)("p",null,(0,t.yg)("img",{parentName:"p",src:"https://tvax4.sinaimg.cn/large/ad5fbf65ly1ggzwuoz52eg20t407w7m0.gif",alt:"\u6302\u8d77\u8282\u70b9\u4e0a\u6307\u5b9a\u8fdb\u7a0b"})),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"\u505c\u6b62\u5b9e\u9a8c")),(0,t.yg)("p",null,"\u6267\u884c\u547d\u4ee4\uff1a",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl delete -f stop_node_process_by_names.yaml")),(0,t.yg)("p",null,"\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a",(0,t.yg)("inlineCode",{parentName:"p"},"kubectl delete blade stop-node-process-by-names")),(0,t.yg)("h2",{id:"\u7ed3\u8bed"},"\u7ed3\u8bed"),(0,t.yg)("p",null,"\u672c\u7bc7\u6211\u4eec\u4f7f\u7528 ChaosBlade Operator \u5bf9 Kubernetes Node \u8d44\u6e90\u8fdb\u884c\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\uff0c\u53ef\u4ee5\u770b\u5230\u5bf9\u4e8e Node \u8282\u70b9\uff0cChaosBlade \u4f9d\u65e7\u6709\u7b80\u5355\u7684\u914d\u7f6e\u53ca\u64cd\u4f5c\u6765\u5b8c\u6210\u590d\u6742\u7684\u5b9e\u9a8c\uff0c\u53ef\u4ee5\u901a\u8fc7\u81ea\u7531\u7ec4\u5408\uff0c\u5b9e\u73b0\u5404\u79cd Node \u8282\u70b9\u7ea7\u522b\u7684\u590d\u6742\u6545\u969c\uff0c\u9a8c\u8bc1 Kubernetes \u96c6\u7fa4\u7684\u7a33\u5b9a\u6027\u53ca\u53ef\u7528\u6027\u3002\u540c\u65f6\u5f53\u771f\u6b63\u7684\u6545\u969c\u6765\u4e34\u65f6\uff0c\u7531\u4e8e\u65e9\u5df2\u6a21\u62df\u4e86\u5404\u79cd\u6545\u969c\u60c5\u51b5\uff0c\u53ef\u4ee5\u5feb\u901f\u5b9a\u4f4d\u6545\u969c\u6e90\uff0c\u505a\u5230\u5904\u53d8\u4e0d\u60ca\uff0c\u8f7b\u677e\u5904\u7406\u6545\u969c\u3002"))}m.isMDXComponent=!0}}]);