"use strict";(self.webpackChunkchaosblade=self.webpackChunkchaosblade||[]).push([[20296],{31830:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2023/08/17/chaosblade-first","metadata":{"permalink":"/en/blog/2023/08/17/chaosblade-first","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2023-08-17-chaosblade-first.md","source":"@site/blog/2023-08-17-chaosblade-first.md","title":"\u6df7\u6c8c\u5de5\u7a0b\u4e4bChaosBlade\u5229\u5203\u51fa\u9798","description":"\u672c\u6587\u91cd\u70b9\u4ecb\u7ecd\u6df7\u6c8c\u5de5\u7a0b\u5f00\u6e90\u5de5\u5177ChaosBlade.","date":"2023-08-17T00:00:00.000Z","formattedDate":"August 17, 2023","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":10.88,"hasTruncateMarker":false,"authors":[{"name":"\u5f20\u658c\u658c\uff08@binbin0325\uff09","title":"Committer of ChaosBlade","url":"https://github.com/binbin0325","imageURL":"https://avatars.githubusercontent.com/u/28588342?v=4","key":"binbin"}],"frontMatter":{"title":"\u6df7\u6c8c\u5de5\u7a0b\u4e4bChaosBlade\u5229\u5203\u51fa\u9798","authors":"binbin","tags":["chaosblade"],"description":"\u672c\u6587\u91cd\u70b9\u4ecb\u7ecd\u6df7\u6c8c\u5de5\u7a0b\u5f00\u6e90\u5de5\u5177ChaosBlade.","hide_table_of_contents":false},"nextItem":{"title":"ChaosBlade Maintainer Promotion Notice -- CHAO YUANNING","permalink":"/en/blog/2023/07/20/maintainer-yuanning-en"}},"content":"> \u8f6c\u81ea\uff1ahttps://mp.weixin.qq.com/s?__biz=Mzg3MzgxMjc3NA==&amp;mid=2247484031&amp;idx=1&amp;sn=4bfc81c1ee268dc0c8d529a4b5fc9949&amp;chksm=cedb0436f9ac8d202f021e6b3e635e08573ce29d14591c9376f7594a623983ebd87103d915f6&token=1141223089&lang=zh_CN#rd\\n> \u6765\u6e90\uff1a\u5fae\u4fe1\u516c\u4f17\u53f7(\u67e0\u6aac\u6c41Code)\\n\\n# 1\\\\. \u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\\n\\n> _Chaos Engineering is the discipline of experimenting on a system in order to build confidence in the system\u2019s capability to withstand turbulent conditions in production._\\n>\\n> _-\u300a\u6df7\u6c8c\u5de5\u7a0b\u539f\u7406\u300b_[http://principlesofchaos.org/](http://principlesofchaos.org/)\\n\\n\u6df7\u6c8c\u5de5\u7a0b\u662f\u4e00\u95e8\u5728\u7cfb\u7edf\u4e0a\u8fdb\u884c\u5b9e\u9a8c\u7684\u5b66\u79d1\uff0c\u76ee\u7684\u662f\u5efa\u7acb\u5bf9\u7cfb\u7edf\u62b5\u5fa1\u751f\u4ea7\u73af\u5883\u4e2d\u5931\u63a7\u6761\u4ef6\u7684\u80fd\u529b\u4ee5\u53ca\u4fe1\u5fc3\u3002\\n\\n\u57282010 \u5e74 Netflix \u4ece\u7269\u7406\u673a\u57fa\u7840\u8bbe\u65bd\u8fc1\u79fb\u5230 AWS \u8fc7\u7a0b\u4e2d\uff0c\u4e3a\u4fdd\u8bc1 EC2 \u5b9e\u4f8b\u6545\u969c\u4e0d\u4f1a\u5bf9\u4e1a\u52a1\u9020\u6210\u5f71\u54cd\uff0c\u5176\u56e2\u961f\u5f00\u53d1\u51fa\u4e86\u6740 EC2 \u5b9e\u4f8b\u7684\u5de5\u5177\uff0c\u8fd9\u4e5f\u662f\u6df7\u6c8c\u5de5\u7a0b\u7684\u96cf\u5f62\u3002\\n\\n**\u6df7\u6c8c\u5de5\u7a0b\u7684\u884c\u4e3a**\uff1a\u901a\u5e38\u662f\u901a\u8fc7\u4e3b\u52a8\u5236\u9020\u6545\u969c\u7684\u65b9\u5f0f\u6765\u89c2\u5bdf\u76ee\u6807\u670d\u52a1\u7684\u7a33\u5b9a\u6027\uff0c\u4ece\u800c\u4e0d\u65ad\u7684\u53d1\u73b0\u670d\u52a1\u7684\u6f5c\u5728\u6027\u98ce\u9669\\n\\n**\u6df7\u6c8c\u5de5\u7a0b\u7684\u76ee\u6807**\uff1a\u6839\u636e\u5df2\u53d1\u73b0\u7684\u7a33\u5b9a\u6027\u98ce\u9669\uff0c\u5efa\u8bbe\u4f18\u5316\u7b56\u7565\uff0c\u4e0d\u65ad\u7684\u63d0\u9ad8\u670d\u52a1\u7684\u7a33\u5b9a\u6027\u3002\\n\\n![](/img/2023-08-17-chaosblade-first/first-1.png)\\n\\n# 2\\\\. \u4e3a\u4ec0\u4e48\u9700\u8981\u6df7\u6c8c\u5de5\u7a0b\\n\\n\u968f\u7740\u4e1a\u52a1\u7684\u53d1\u5c55\uff0c\u7cfb\u7edf\u7684\u67b6\u6784\u4e5f\u4f1a\u968f\u4e4b\u66f4\u65b0\u8fed\u4ee3\uff0c\u7279\u522b\u662f\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u67b6\u6784\u4e0b\u670d\u52a1\u6570\u91cf\u53d8\u591a\uff0c\u8c03\u7528\u94fe\u8def\u53d8\u957f\uff0c\u670d\u52a1\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u65e5\u6e10\u590d\u6742\u3002\u5bf9\u4e8e\u5355\u4e2a\u670d\u52a1\u7684\u6545\u969c\u5f88\u96be\u8bc4\u4f30\u51fa\u5bf9\u6574\u4e2a\u7cfb\u7edf\u7684\u5f71\u54cd\uff0c\u5728\u7cfb\u7edf\u9ad8\u901f\u8fed\u4ee3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u4f55\u6301\u7eed\u6027\u7684\u4fdd\u8bc1\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u4e00\u76f4\u53d7\u5230\u5f88\u5927\u7684\u6311\u6218\u3002\\n\\n\u6df7\u6c8c\u5de5\u7a0b\u7684\u601d\u60f3\u662f\u901a\u8fc7\u4e3b\u52a8\u7684\u6ce8\u5165\u6545\u969c\uff0c\u63d0\u524d\u53d1\u73b0\u7cfb\u7edf\u4e2d\u7684\u5f02\u5e38\u70b9\uff0c\u5f53\u53d1\u73b0\u5f02\u5e38\u70b9\u540e\u5373\u53ef\u5bf9\u5176\u8fdb\u884c\u6539\u8fdb\uff0c\u4ece\u800c\u4e0d\u65ad\u7684\u589e\u5f3a\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u3002\\n\\n\u8fd9\u91cc\u4ece\u56db\u4e2a\u89d2\u8272\u6765\u8bf4\u660e\u6df7\u6c8c\u5de5\u7a0b\u7684\u91cd\u8981\u6027\uff1a\\n\\n![](/img/2023-08-17-chaosblade-first/first-2.png)\\n\\n\u5b9e\u65bd\u6df7\u6c8c\u5de5\u7a0b\u53ef\u4ee5\u63d0\u65e9\u53d1\u73b0\u751f\u4ea7\u73af\u5883\u4e0a\u7684\u95ee\u9898\uff0c\u63d0\u5347\u6545\u969c\u5e94\u6025\u5904\u7406\u6548\u7387\u3001\u68b3\u7406\u670d\u52a1\u95f4\u7684\u5f3a\u5f31\u4f9d\u8d56\u5173\u7cfb\u3001\u9a8c\u8bc1\u9884\u6848\u6709\u6548\u6027\u7b49\u7b49\uff0c\u9010\u6e10\u5efa\u8bbe\u5177\u6709\u97e7\u6027\u7684\u9ad8\u53ef\u7528\u7cfb\u7edf\u3002\\n\\n# 3\\\\. \u6df7\u6c8c\u5de5\u7a0b\u4ea7\u54c1\\n\\n\u76ee\u524d\u6536\u96c6\u5728CNCF\u5168\u666f\u89c6\u56fe\u6df7\u6c8c\u5de5\u7a0b\u5206\u7c7b\u4e0b\u7684\u5f00\u6e90\u4ea7\u54c1:\\n\\n![](/img/2023-08-17-chaosblade-first/first-3.png)\\n\\n-   \u5176\u4e2d[Chaos Mesh](https://chaos-mesh.org/zh/)\u662f\u7531PingCAP\u56e2\u961f\u5f00\u6e90\u7684\u4e00\u6b3e\u4e91\u539f\u751f\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0\uff0cChaos Mesh \u8d77\u6e90\u4e8e\xa0[TiDB](https://github.com/pingcap/tidb)\xa0\u7684\u6838\u5fc3\u6d4b\u8bd5\u5e73\u53f0\\n\\n-   \u53e6\u4e00\u6b3e[ChaosBlade](https://github.com/chaosblade-io/chaosblade)\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0\u672c\u6587\u5c06\u91cd\u70b9\u4ecb\u7ecd\\n\\n\\n# 4\\\\. ChaosBlade-\u6df7\u6c8c\u4e4b\u5203\\n\\n## 4.1 \u4ecb\u7ecd\\n\\n![](/img/2023-08-17-chaosblade-first/first-4.png)\\n\\n[ChaosBlade](https://github.com/chaosblade-io/chaosblade) \u4e2d\u6587\u540d\u6df7\u6c8c\u4e4b\u5203\uff0c\u8d77\u521d\u662f\u7531\u963f\u91cc\u5df4\u5df4\u5f00\u6e90\u7684\u4e00\u6b3e\u9075\u5faa\u6df7\u6c8c\u5de5\u7a0b\u539f\u7406\u548c\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u7684\u5b9e\u9a8c\u6ce8\u5165\u5de5\u5177\uff0c\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u6545\u969c\u6ce8\u5165\u573a\u666f\u3002\\n\\n\u540e\u6765\u57282021\u5e74\u91cd\u78c5\u5f00\u6e90\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0[ChaosBlade Box](https://github.com/chaosblade-io/chaosblade-box)\uff0cChaosBlade-Box\u662f\u4e00\u6b3e\u9762\u5411\u591a\u96c6\u7fa4\u3001\u591a\u8bed\u8a00\u3001\u591a\u73af\u5883\uff0c\u963f\u91cc\u5f00\u6e90\u7684\u4e91\u539f\u751f\u6df7\u6c8c\u5de5\u7a0b\u63a7\u5236\u53f0\u3002\u4e3b\u8981\u529f\u80fd\u6709\uff1a\u63d0\u4f9b\u6df7\u6c8c\u5b9e\u9a8c\u7528\u6237\u754c\u9762\u3001\u6df7\u6c8c\u5de5\u7a0b\u5de5\u5177\u90e8\u7f72\uff08ChaosBlade\u3001LitmusChaos...\uff09\u3001\u652f\u6301\u5b9e\u9a8c\u573a\u666f\u7ba1\u7406\u548c\u591a\u7ef4\u5ea6\u5b9e\u9a8c\u7b49\\n\\n[ChaosBlade](https://github.com/chaosblade-io/chaosblade)\u662f\u6545\u969c\u6ce8\u5165\u5de5\u5177\u96c6\uff0c\u57fa\u4e8e\u7edf\u4e00\u7684\u6545\u969c\u6a21\u578b\uff0c\u5bf9\u76ee\u6807\u53d1\u8d77\u653b\u51fb\uff0c\u76ee\u524d\u652f\u6301\u7684\u5b9e\u9a8c\u573a\u666f\u5982\u4e0b\uff1a\\n\\n![](/img/2023-08-17-chaosblade-first/first-5.png)\\n\\nChaosBlade\u6309\u7167\u4e0d\u540c\u7684\u6545\u969c\u573a\u666f\u6309\u7167\u9886\u57df\u5c01\u88c5\u6210\u4e0d\u540c\u7684\u9879\u76ee\uff0c\u76ee\u524d\u5305\u542b\u7684\u9879\u76ee\uff1a\\n\\n-   [chaosblade](https://github.com/chaosblade-io/chaosblade)\uff1a\u6df7\u6c8c\u5b9e\u9a8c\u7ba1\u7406\u5de5\u5177\uff0c\u5305\u542b\u521b\u5efa\u5b9e\u9a8c\u3001\u9500\u6bc1\u5b9e\u9a8c\u3001\u67e5\u8be2\u5b9e\u9a8c\u3001\u5b9e\u9a8c\u73af\u5883\u51c6\u5907\u3001\u5b9e\u9a8c\u73af\u5883\u64a4\u9500\u7b49\u547d\u4ee4\uff0c\u662f\u6df7\u6c8c\u5b9e\u9a8c\u7684\u6267\u884c\u5de5\u5177\uff0c\u6267\u884c\u65b9\u5f0f\u5305\u542b CLI \u548c HTTP \u4e24\u79cd\u3002\u63d0\u4f9b\u5b8c\u5584\u7684\u547d\u4ee4\u3001\u5b9e\u9a8c\u573a\u666f\u3001\u573a\u666f\u53c2\u6570\u8bf4\u660e\uff0c\u64cd\u4f5c\u7b80\u6d01\u6e05\u6670\u3002\\n\\n-   [chaosblade-spec-go](https://github.com/chaosblade-io/chaosblade-spec-go): \u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b Golang \u8bed\u8a00\u5b9a\u4e49\uff0c\u4fbf\u4e8e\u4f7f\u7528 Golang \u8bed\u8a00\u5b9e\u73b0\u7684\u573a\u666f\u90fd\u57fa\u4e8e\u6b64\u89c4\u8303\u4fbf\u6377\u5b9e\u73b0\u3002\\n\\n-   [chaosblade-exec-os](https://github.com/chaosblade-io/chaosblade-exec-os): \u57fa\u7840\u8d44\u6e90\u5b9e\u9a8c\u573a\u666f\u5b9e\u73b0\u3002\\n\\n-   [chaosblade-exec-docker](https://github.com/chaosblade-io/chaosblade-exec-docker): Docker \u5bb9\u5668\u5b9e\u9a8c\u573a\u666f\u5b9e\u73b0\uff0c\u901a\u8fc7\u8c03\u7528 Docker API \u6807\u51c6\u5316\u5b9e\u73b0\u3002\\n\\n-   [chaosblade-exec-cri](https://github.com/chaosblade-io/chaosblade-exec-cri): \u5bb9\u5668\u5b9e\u9a8c\u573a\u666f\u5b9e\u73b0\uff0c\u901a\u8fc7\u8c03\u7528 CRI \u6807\u51c6\u5316\u5b9e\u73b0\u3002\\n\\n-   [chaosblade-operator](https://github.com/chaosblade-io/chaosblade-operator): Kubernetes \u5e73\u53f0\u5b9e\u9a8c\u573a\u666f\u5b9e\u73b0\uff0c\u5c06\u6df7\u6c8c\u5b9e\u9a8c\u901a\u8fc7 Kubernetes \u6807\u51c6\u7684 CRD \u65b9\u5f0f\u5b9a\u4e49\uff0c\u5f88\u65b9\u4fbf\u7684\u4f7f\u7528 Kubernetes \u8d44\u6e90\u64cd\u4f5c\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u3001\u66f4\u65b0\u3001\u5220\u9664\u5b9e\u9a8c\u573a\u666f\uff0c\u5305\u62ec\u4f7f\u7528 kubectl\u3001client-go \u7b49\u65b9\u5f0f\u6267\u884c\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e0a\u8ff0\u7684 chaosblade cli \u5de5\u5177\u6267\u884c\u3002\\n\\n-   [chaosblade-exec-jvm](https://github.com/chaosblade-io/chaosblade-exec-jvm): Java \u5e94\u7528\u5b9e\u9a8c\u573a\u666f\u5b9e\u73b0\uff0c\u4f7f\u7528 Java Agent \u6280\u672f\u52a8\u6001\u6302\u8f7d\uff0c\u65e0\u9700\u4efb\u4f55\u63a5\u5165\uff0c\u96f6\u6210\u672c\u4f7f\u7528\uff0c\u800c\u4e14\u652f\u6301\u5378\u8f7d\uff0c\u5b8c\u5168\u56de\u6536 Agent \u521b\u5efa\u7684\u5404\u79cd\u8d44\u6e90\u3002\\n\\n-   [chaosblade-exec-cplus](https://github.com/chaosblade-io/chaosblade-exec-cplus): C++ \u5e94\u7528\u5b9e\u9a8c\u573a\u666f\u5b9e\u73b0\uff0c\u4f7f\u7528 GDB \u6280\u672f\u5b9e\u73b0\u65b9\u6cd5\u3001\u4ee3\u7801\u884c\u7ea7\u522b\u7684\u5b9e\u9a8c\u573a\u666f\u6ce8\u5165\u3002\\n\\n\\n## 4.2 \u4f7f\u7528\u65b9\u5f0f\\n\\nChaosblade \u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7684\u5de5\u5177\u5305\uff0c\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u76f4\u63a5\u6267\u884cblade\u547d\u4ee4\u6765\u521b\u5efa\u6545\u969c\uff0c\u4ee5CPU\u6545\u969c\u4e3e\u4f8b\uff1a\\n\\n``` shell\\n# \u5df2\u521b\u5efa CPU \u6ee1\u8f7d\u5b9e\u9a8c\u4e3e\u4f8b\\nblade create cpu load\\n\u200b\\n# \u8fd4\u56de\u7ed3\u679c\u5982\u4e0b\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"beeaaf3a7007031d\\"}\\n\u200b\\n# code \u7684\u503c\u7b49\u4e8e 200 \u8bf4\u660e\u6267\u884c\u6210\u529f\uff0c\u5176\u4e2d result \u7684\u503c\u5c31\u662f uid\u3002\u4f7f\u7528 top \u547d\u4ee4\u9a8c\u8bc1\u5b9e\u9a8c\u6548\u679c\\nTasks: 100 total,   2 running,  98 sleeping,   0 stopped,   0 zombie\\n%Cpu0  : 21.3 us, 78.7 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\\n%Cpu1  : 20.9 us, 79.1 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\\n%Cpu2  : 20.5 us, 79.5 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\\n%Cpu3  : 20.9 us, 79.1 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\\n```\\n\\n> \u5176\u4ed6\u6545\u969c\u573a\u666f\u5728\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\uff0c\u60f3\u4e86\u89e3\u66f4\u591a\u6545\u969c\u573a\u666f\u4f7f\u7528\u65b9\u6cd5\u53ef\u53c2\u8003\uff1a[https://chaosblade-io.gitbook.io/chaosblade-help-zh-cn/](https://chaosblade-io.gitbook.io/chaosblade-help-zh-cn/)\\n\\n## 4.3 \u5c0f\u7ed3\\n\\nChaosBlade \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u6545\u969c\u6ce8\u5165\u7684\u5de5\u5177\u96c6\uff0c\u5b83\u63d0\u4f9b\u4e86\u6545\u969c\u6ce8\u5165\uff0c\u6545\u969c\u9500\u6bc1\uff0c\u72b6\u6001\u67e5\u8be2\u7b49\u591a\u79cd\u80fd\u529b\uff0c\u4e5f\u652f\u6301\u591a\u79cd\u6545\u969c\u573a\u666f\u4f8b\u5982:\u57fa\u7840\u8d44\u6e90\u3001java\u3001docker\u3001k8s\u7b49\u3002\\n\\n\u4f46\u662f\u7f3a\u70b9\u4e5f\u6bd4\u8f83\u660e\u663e\uff0c\u5b83\u6ca1\u6709\u53ef\u89c6\u5316\u7684\u754c\u9762\uff0c\u4e5f\u4e0d\u80fd\u5bf9\u6545\u969c\u573a\u666f\u8fdb\u884c\u7ba1\u7406\uff0c\u591a\u4e2a\u6545\u969c\u6ce8\u5165\u4e5f\u6ca1\u6709\u7f16\u6392\u80fd\u529b\uff0c\u6bcf\u4e00\u6b21\u6545\u969c\u6ce8\u5165\u90fd\u9700\u8981\u5148\u5230\u76ee\u6807\u673a\u5668\u4e0a\u5b89\u88c5ChaosBlade\u7b49\u7b49\uff0c\u8fd9\u5bf9\u4e8e\u771f\u6b63\u7684\u843d\u5730\u4f7f\u7528\u6df7\u6c8c\u5de5\u7a0b\u6765\u8bf4\u8fd8\u662f\u6709\u5f88\u591a\u6311\u6218\u7684\u3002\\n\\n# 5\\\\. ChaosBlade Box\\n\\n## 5.1 \u4ecb\u7ecd\\n\\n\u4e3a\u4e86\u89e3\u51b3\u4e0a\u9762\u63d0\u5230\u7684\u95ee\u9898\uff0c\u57282021\u5e74\u91cd\u78c5\u5f00\u6e90\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0[ChaosBlade-Box](https://github.com/chaosblade-io/chaosblade-box)\uff0c\u63d0\u4f9b\u7edf\u4e00\u7684\u53ef\u89c6\u5316\u754c\u9762\uff0c\u5e76\u63d0\u4f9b\u6f14\u7ec3\u573a\u666f\uff0c\u7ecf\u9a8c\u5e93\uff0c\u5e94\u7528\u7ba1\u7406\uff0c\u63a2\u9488\u7ba1\u7406\uff0c\u6f14\u7ec3\u7f16\u6392\u7b49\u529f\u80fd\u3002\\n\\n## 5.2 UI\\n\\n![](/img/2023-08-17-chaosblade-first/first-6.png)\\n\\n![](/img/2023-08-17-chaosblade-first/first-7.png)\\n\\n\u4ee5\u4e0b\u662f\u5728ChaosBlade-Box\u5e73\u53f0\u4e0a\u8fdb\u884c\u4e00\u6b21\u6f14\u7ec3\u7684\u5168\u8fc7\u7a0b\uff0c\u652f\u6301\u4e32\u884c\u3001\u5e76\u884c\u4e24\u79cd\u6d41\u7a0b\u7f16\u6392\uff0c\u901a\u8fc7\u591a\u79cd\u5b89\u5168\u7b56\u7565\u4fdd\u8bc1\u6f14\u7ec3\u5f97\u5230\u6062\u590d\uff0c\u5982\u624b\u52a8\u89e6\u53d1\u548c\u81ea\u52a8\u505c\u6b62\uff0c\u81ea\u52a8\u505c\u6b62\u901a\u8fc7\u5728\u6f14\u7ec3\u914d\u7f6e\u7684\u65f6\u5019\u8bbe\u7f6e\u8d85\u65f6\u53c2\u6570\u6765\u8fdb\u884c\u914d\u7f6e\uff0c\u8fd9\u6837\u5373\u4fbf\u5e73\u53f0\u548c\u63a2\u9488\uff08Agent\uff09\u5931\u8054\uff0c\u65e0\u6cd5\u8fdb\u884c\u624b\u52a8\u505c\u6b62\u65f6\uff0c\u4e5f\u80fd\u5728\u8d85\u65f6\u65f6\u95f4\u5230\u8fbe\u7684\u65f6\u5019\uff0c\u81ea\u52a8\u6062\u590d\u6545\u969c\u3002\\n\\n![](/img/2023-08-17-chaosblade-first/first-8.png)\\n\\n![](/img/2023-08-17-chaosblade-first/first-9.png)\\n\\n## 5.3 \u5c0f\u7ed3\\n\\nChaosBlade Box\u662f\u6df7\u6c8c\u5de5\u7a0b\u6f14\u7ec3\u5e73\u53f0\uff0c\u4e3b\u8981\u89e3\u51b3\u4e86ChoasBlade\u5de5\u5177\u96c6\u7684\u75db\u70b9\uff0c\u63d0\u4f9b\u53ef\u89c6\u5316\u7ba1\u7406\u6545\u969c\u3001\u7f16\u6392\u6267\u884c\u6545\u969c\u7684\u80fd\u529b\uff0c\u5e76\u652f\u6301\u63a2\u9488\u7ba1\u7406\u4ece\u6b64\u4e0d\u518d\u9700\u8981\u5230\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0a\u5b89\u88c5ChoasBlade\uff0c\u5927\u5927\u63d0\u5347\u6545\u969c\u6ce8\u5165\u7684\u6548\u7387\u4ee5\u53ca\u6613\u7528\u6027\u3002\\n\\n# 6\\\\. ChaosBlade-\u67b6\u6784\\n\\n![](/img/2023-08-17-chaosblade-first/first-10.png)\\n\\n\u5728ChasoBlade Box\u5f00\u6e90\u540e\uff0cChaosBlade\u7684\u6574\u4f53\u67b6\u6784\u4e2d\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u7ec4\u4ef6\uff1a\\n\\n-   **ChaosBlade-Box Console**\uff1aChaosBlade\u53ef\u89c6\u5316\u7ec4\u4ef6\uff0c\u4e3b\u8981\u63d0\u4f9b\u4e00\u5957\u7528\u6237\u53cb\u597d\u7684Web\u754c\u9762\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u8be5\u754c\u9762\u8fdb\u884c\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\u7684\u7f16\u6392\u4e0e\u64cd\u4f5c\u7ba1\u7406\u3002\\n\\n-   **ChaosBlade-Box Server**\uff1a\u6838\u5fc3\u903b\u8f91\u7ec4\u4ef6\uff0c\u4e3b\u8981\u8d1f\u8d23\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\u7684\u7ba1\u7406\u4e0e\u7f16\u6392\uff0c\u63a2\u9488\u4e0e\u5e94\u7528\u7ba1\u7406\u3002\u5305\u62ec\u7ec4\u4ef6\uff0cChaos Engine\uff1a\u6f14\u7ec3\u5f15\u64ce\uff0c\u5305\u62ec\u6d41\u7a0b\u7f16\u6392\u3001\u5b89\u5168\u7ba1\u63a7\u3001\u6f14\u7ec3\u62a5\u544a\u7b49\u529f\u80fd\uff1bChaos Runner\uff1a\u6f14\u7ec3\u6267\u884c\u5668\uff0c\u517c\u5bb9\u591a\u79cd\u6267\u884c\u5de5\u5177\uff1bChaos Experinece\uff1a\u6f14\u7ec3\u7ecf\u9a8c\u5e93\u7b49\u3002\\n\\n-   **Agent**\uff1a\u6838\u5fc3\u903b\u8f91\u7ec4\u4ef6\uff0c\u90e8\u7f72\u5728\u7528\u6237\u7ec8\u7aef\u7684\u4e3b\u673a\u6216Kubernetes\u96c6\u7fa4\u5185\uff0c\u4e3b\u8981\u8d1f\u8d23\u548cChaosBlade-Box Server\u5efa\u8054\u4e0a\u62a5\u5fc3\u8df3\u5e76\u4f5c\u4e3a\u547d\u4ee4\u4e0b\u53d1\u901a\u9053\u3002\\n\\n-   **ChaosBlade**\uff1a\u4e3b\u8981\u6267\u884c\u5de5\u5177\uff0c\u80fd\u5728\u4e3b\u673a\u548cKubernetes\u7b49\u4e0d\u540c\u73af\u5883\u4e0a\u6267\u884c\u6545\u969c\u6ce8\u5165\uff0c\u80fd\u5bf9\u7cfb\u7edf\u7f51\u7edc\u8bbe\u5907\u3001\u6587\u4ef6\u7cfb\u7edf\u3001\u5185\u6838\u53ca\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u5e94\u7528\u7b49\u8fdb\u884c\u6545\u969c\u5e72\u6270\u3002\\n\\n\\n# 7\\\\. \u603b\u7ed3\\n\\n\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u53ef\u4ee5\u4e3b\u52a8\u53d1\u73b0\u7cfb\u7edf\u7684\u4e2d\u7684\u6f5c\u5728\u95ee\u9898\uff0c\u4ece\u800c\u5bf9\u5176\u8fdb\u884c\u4f18\u5316\uff0c\u4e0d\u65ad\u7684\u63d0\u5347\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u3002ChaosBlade\u662f\u4e00\u6b3e\u9075\u5faa\u6df7\u6c8c\u5de5\u7a0b\u7406\u5ff5\u7684\u5f00\u6e90\u4ea7\u54c1\uff0c\u5176\u4e2d\u4e3b\u8981\u5305\u542b[ChaosBlade](https://github.com/chaosblade-io/chaosblade) Tool\uff08\u63d0\u4f9b\u4e30\u5bcc\u7684\u6545\u969c\u573a\u666f\u6ce8\u5165\u80fd\u529b\uff09\u4ee5\u53ca[ChaosBlade Box](https://github.com/chaosblade-io/chaosblade-box)\u63d0\u4f9b\u53ef\u89c6\u5316\u7684\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u65bd\u5e73\u53f0\u3002\\n\\n# 8\\\\. \u4f5c\u8005\u4ecb\u7ecd\\n\\n\u5f20\u658c\u658c\uff08Github \u8d26\u53f7\uff1a[binbin0325](https://github.com/binbin0325)\uff0c\u516c\u4f17\u53f7:[\u67e0\u6aac\u6c41Code](https://binbin0325.github.io/)\uff09Sentinel-Golang Committer \u3001ChaosBlade Committer \u3001 Nacos PMC \u3001Apache Dubbo-Go Committer\u3002\u76ee\u524d\u4e3b\u8981\u5173\u6ce8\u4e8e\u6df7\u6c8c\u5de5\u7a0b\u3001\u4e2d\u95f4\u4ef6\u4ee5\u53ca\u4e91\u539f\u751f\u65b9\u5411\u3002"},{"id":"/2023/07/20/maintainer-yuanning-en","metadata":{"permalink":"/en/blog/2023/07/20/maintainer-yuanning-en","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2023-07-20-maintainer-yuanning-en.md","source":"@site/blog/2023-07-20-maintainer-yuanning-en.md","title":"ChaosBlade Maintainer Promotion Notice -- CHAO YUANNING","description":"ChaosBlade Maintainer Promotion Notice","date":"2023-07-20T00:00:00.000Z","formattedDate":"July 20, 2023","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"},{"label":"Maintainer","permalink":"/en/blog/tags/maintainer"}],"readingTime":2.035,"hasTruncateMarker":false,"authors":[{"name":"\u8521\u94ed\u971e\uff08\u94ed\u5c11\uff0c@MandssS\uff09","title":"Maintainer of ChaosBlade","url":"https://github.com/MandssS","imageURL":"https://avatars.githubusercontent.com/u/13030286?v=4","key":"camix"}],"frontMatter":{"title":"ChaosBlade Maintainer Promotion Notice -- CHAO YUANNING","authors":"camix","tags":["chaosblade","Maintainer"],"description":"ChaosBlade Maintainer Promotion Notice","hide_table_of_contents":false},"prevItem":{"title":"\u6df7\u6c8c\u5de5\u7a0b\u4e4bChaosBlade\u5229\u5203\u51fa\u9798","permalink":"/en/blog/2023/08/17/chaosblade-first"},"nextItem":{"title":"ChaosBlade Maintainer \u664b\u5347\u901a\u544a -- \u6641\u5143\u5b81","permalink":"/en/blog/2023/07/20/maintainer-yuanning"}},"content":"ChaosBlade is an open source chaos engineering project of Alibaba in 2019. It includes chaos engineering experimental tool chaosblade and chaos engineering platform chaosblade-box. It aims to help enterprises solve high-availability problems in the cloud-native process through chaos engineering. The experimental tool chaosblade supports 3 large system platforms, 4 programming language applications, involving more than 200 experimental scenarios and more than 3000 experimental parameters, which can finely control the scope of the experiment. The chaos engineering platform chaosblade-box supports the hosting of experimental tools. In addition to the hosted chaosblade, it also supports the Litmuschaos experimental tools. There are more than 40 registered companies, of which the ICBC, China Mobile, Xiaomi, JD.com and other companies have landed and used it.![image.png](/img/logo.png)\\n\\nAfter nomination and discussion of all Maintainers, the community is pleased to announce, **CHAO YUANNING\uff08GitHub ID: @ID\uff1aYuaninga \uff0cCMCC \xb7 CMChaos Chaos Engineering Platform \uff09Officially promoted to ChaosBlade Community Maintainer**. In the past period of time, student Chao Yuanning actively and actively participated in the discussions and contributions of the ChaosBlade community. He not only participated in the improvement of the official website document construction, but also actively participated in the contribution of bug fixes and features of multiple modules, and submitted as many as 25 PRs involving chaosblade-operator, chaosblade-exec-os, and chaosblade-website. Meet the community\'s expectations for continued contributions to Reviewer. Congratulations Yuan Ning!\\nFor details, see [promotion Maintainer pr](https://github.com/chaosblade-io/community/pull/12)\\nMaintainer Certificate\uff1a\\n\\n![](/img/blog/chaosblade-maintainer-en-certificate-yuanning.png)\\nMessage from the new Maintainer:\\n\\n_I am honored to be promoted to ChaosBlade Community Maintainer. In the future, I will try my best to fulfill the responsibility of Maintainer and work together to build ChaosBlade. I firmly believe  that  ChaosBlade will be stronger with the joint efforts of everyone. Here you can exchange questions and answers, improve your skills and challenge technical difficulties. Whether you are a novice or a Daniel, as long as you have time, enthusiasm and willingness, you are welcome to join the community, participate in contributions and embrace ChaosBlade.\\n\\n---\\n\\nChaosBlade has been adhering to the idea of open source since the project was launched. The current community development and ecological construction are inseparable from the joint construction of various enterprises and community students. At present, we are in a critical stage of development. The open source contribution team is actively recruiting contributors. We hope that more students will participate in our open source construction and participate in community construction and code contribution:\\n- Contributor Ladder\uff1a[https://github.com/chaosblade-io/community/blob/main/Contributor_Ladder_CN.md](https://github.com/chaosblade-io/community/blob/main/Contributor_Ladder_CN.md)\\n- Website\uff1a[https://chaosblade.io/](https://chaosblade.io/)\\n- DingDing group\uff1a23177705"},{"id":"/2023/07/20/maintainer-yuanning","metadata":{"permalink":"/en/blog/2023/07/20/maintainer-yuanning","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2023-07-20-maintainer-yuanning.md","source":"@site/blog/2023-07-20-maintainer-yuanning.md","title":"ChaosBlade Maintainer \u664b\u5347\u901a\u544a -- \u6641\u5143\u5b81","description":"ChaosBlade Maintainer \u664b\u5347\u901a\u544a","date":"2023-07-20T00:00:00.000Z","formattedDate":"July 20, 2023","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"},{"label":"Maintainer","permalink":"/en/blog/tags/maintainer"}],"readingTime":2.89,"hasTruncateMarker":false,"authors":[{"name":"\u8521\u94ed\u971e\uff08\u94ed\u5c11\uff0c@MandssS\uff09","title":"Maintainer of ChaosBlade","url":"https://github.com/MandssS","imageURL":"https://avatars.githubusercontent.com/u/13030286?v=4","key":"camix"}],"frontMatter":{"title":"ChaosBlade Maintainer \u664b\u5347\u901a\u544a -- \u6641\u5143\u5b81","authors":"camix","tags":["chaosblade","Maintainer"],"description":"ChaosBlade Maintainer \u664b\u5347\u901a\u544a","hide_table_of_contents":false},"prevItem":{"title":"ChaosBlade Maintainer Promotion Notice -- CHAO YUANNING","permalink":"/en/blog/2023/07/20/maintainer-yuanning-en"},"nextItem":{"title":"\u7531Redis\u6545\u969c\u573a\u666f\uff0c\u8bf4\u8bf4ChaosBlade\u8d21\u732e\u7684\u4e8c\u4e09\u4e8b","permalink":"/en/blog/2023/07/10/chaosblade-contribution-by-redis"}},"content":"ChaosBlade \u662f\u963f\u91cc\u5df4\u5df4 2019 \u5e74\u5f00\u6e90\u7684\u6df7\u6c8c\u5de5\u7a0b\u9879\u76ee\uff0c\u5305\u542b\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\u5de5\u5177 ChaosBlade \u548c\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0 ChaosBlade-box\uff0c\u65e8\u5728\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u5e2e\u52a9\u4f01\u4e1a\u89e3\u51b3\u4e91\u539f\u751f\u8fc7\u7a0b\u4e2d\u9ad8\u53ef\u7528\u95ee\u9898\u3002\u5b9e\u9a8c\u5de5\u5177 ChaosBlade \u652f\u6301 3 \u5927\u7cfb\u7edf\u5e73\u53f0\uff0c4 \u79cd\u7f16\u7a0b\u8bed\u8a00\u5e94\u7528\uff0c\u5171\u6d89\u53ca 200 \u591a\u7684\u5b9e\u9a8c\u573a\u666f\uff0c3000 \u591a\u4e2a\u5b9e\u9a8c\u53c2\u6570\uff0c\u53ef\u4ee5\u7cbe\u7ec6\u5316\u7684\u63a7\u5236\u5b9e\u9a8c\u8303\u56f4\u3002 \u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0 ChaosBlade-Box \u652f\u6301\u5b9e\u9a8c\u5de5\u5177\u6258\u7ba1\uff0c\u9664\u5df2\u6258\u7ba1 ChaosBlade \u5916\uff0c\u8fd8\u652f\u6301 Litmuschaos \u5b9e\u9a8c\u5de5\u5177\u3002\u5df2\u767b\u8bb0\u4f7f\u7528\u4f01\u4e1a 40 \u591a\u5bb6\uff0c\u5176\u4e2d\u5df2\u5728\u5de5\u5546\u94f6\u884c\u3001\u4e2d\u56fd\u79fb\u52a8\u3001\u5c0f\u7c73\u3001\u4eac\u4e1c\u7b49\u4f01\u4e1a\u4e2d\u843d\u5730\u4f7f\u7528\u3002\\n![image.png](/img/logo.png)\\n\\n\u7ecf\u8fc7\u5168\u4f53 Maintainer \u63d0\u540d\u4e0e\u8ba8\u8bba\uff0c\u793e\u533a\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\uff0c**\u6641\u5143\u5b81\uff08GitHub ID: @ID\uff1aYuaninga \uff0c\u4e2d\u56fd\u79fb\u52a8\u78d0\u57faPaaS\u5e73\u53f0\uff09\u6b63\u5f0f\u664b\u5347\u4e3a ChaosBlade \u793e\u533a Maintainer** \u3002\u6641\u5143\u5b81\u540c\u5b66\u5728\u8fc7\u53bb\u7684\u4e00\u6bb5\u65f6\u95f4\uff0c\u79ef\u6781\u3001\u6d3b\u8dc3\u5730\u53c2\u4e0e\u5230 ChaosBlade \u793e\u533a\u8ba8\u8bba\u4e0e\u8d21\u732e\uff0c\u4e0d\u4ec5\u53d1\u8868\u591a\u7bc7\u6587\u7ae0\uff0c\u66f4\u662f\u79ef\u6781\u53c2\u4e0e\u5230\u591a\u4e2a module \u7684 bug fix \u548c feature \u7684\u8d21\u732e\u4e2d\u6765\uff0c\u63d0\u4ea4\u4e86\u591a\u8fbe 25 \u4e2a PR\uff0c\u6d89\u53ca chaosblade-operator\u3001chaosblade-exec-os \u548c chaosblade-website \u7b49\u591a\u4e2a\u9879\u76ee\u4e2d\u3002\u6ee1\u8db3\u793e\u533a\u5bf9 Reviewer \u6301\u7eed\u8d21\u732e\u7684\u671f\u671b\u3002\u606d\u559c\u5143\u5b81\uff01\\n\u5177\u4f53\u53ef\u89c1\u5176 Maintainer \u7684 [promotion Maintainer pr](https://github.com/chaosblade-io/community/pull/12)\\nMaintainer \u8bc1\u4e66\uff1a\\n\\n![](/img/blog/chaosblade-maintainer-ch-certificate-yuanning.png)\\n\u65b0\u664b Maintainer \u5bc4\u8bed\uff1a\\n\\n_\u5f88\u8363\u5e78\u664b\u5347\u4e3aChaosBlade\u793e\u533aMaintainer\uff0c\u5728\u4ee5\u540e\u6211\u5c06\u52aa\u529b\u8df5\u884cMaintainer\u8d21\u732e\u8005\u804c\u8d23\uff0c\u548c\u5927\u5bb6\u4e00\u8d77\u5171\u540c\u5efa\u8bbeChaosBlade\u3002\u6211\u575a\u4fe1\u5728\u5927\u5bb6\u7684\u5171\u540c\u52aa\u529b\u4e0b ChaosBlade \u4e00\u5b9a\u4f1a\u66f4\u52a0\u5f3a\u5927\u3002\u8fd9\u91cc\u53ef\u4ee5\u4ea4\u6d41\u7b54\u7591\u3001\u53ef\u4ee5\u63d0\u5347\u6280\u672f\u3001\u53ef\u4ee5\u6311\u6218\u6280\u672f\u96be\u70b9\uff0c\u65e0\u8bba\u4f60\u662f\u65b0\u624b\u8fd8\u662f\u5927\u725b\uff0c\u53ea\u8981\u4f60\u6709\u65f6\u95f4\uff0c\u6709\u70ed\u60c5\uff0c\u6709\u610f\u613f\uff0c\u6b22\u8fce\u52a0\u5165\u793e\u533a\u3001\u53c2\u4e0e\u8d21\u732e\u3001\u62e5\u62b1 ChaosBlade ~~~\\n\\n---\\n\\nChaosBlade\u81ea\u9879\u76ee\u53d1\u8d77\u4ee5\u6765\uff0c\u5c31\u79c9\u6301\u7740\u5f00\u653e\u7684\u5f00\u6e90\u601d\u60f3\uff0c\u76ee\u524d\u7684\u793e\u533a\u53d1\u5c55\u4e8e\u751f\u6001\u5efa\u8bbe\u66f4\u662f\u79bb\u4e0d\u5f00\u5404\u4e2a\u4f01\u4e1a\u793e\u533a\u540c\u5b66\u7684\u5171\u5efa\u3002\u76ee\u524d\u6211\u4eec\u66f4\u662f\u5728\u53d1\u5c55\u7684\u5173\u952e\u9636\u6bb5\uff0c\u5f00\u6e90\u8d21\u732e\u5c0f\u7ec4\u6b63\u5728\u706b\u70ed\u62db\u52df\u8d21\u732e\u8005\uff0c\u5e0c\u671b\u66f4\u591a\u7684\u540c\u5b66\u53c2\u4e0e\u5230\u6211\u4eec\u7684\u5f00\u6e90\u5efa\u8bbe\u5f53\u4e2d\u6765\uff0c\u4e00\u8d77\u53c2\u4e0e\u5230\u793e\u533a\u7684\u5efa\u8bbe\u548c\u4ee3\u7801\u8d21\u732e\u4e2d\u6765\uff1a\\n\\n- \u793e\u533a\u540c\u5b66\u53d1\u5c55\u9636\u68af\u53ef\u89c1\uff1a[https://github.com/chaosblade-io/community/blob/main/Contributor_Ladder_CN.md](https://github.com/chaosblade-io/community/blob/main/Contributor_Ladder_CN.md)\\n- \u5b98\u7f51\uff1a[https://chaosblade.io/](https://chaosblade.io/)\\n- \u9489\u9489\u7fa4\uff1a23177705"},{"id":"/2023/07/10/chaosblade-contribution-by-redis","metadata":{"permalink":"/en/blog/2023/07/10/chaosblade-contribution-by-redis","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2023-07-10-chaosblade-contribution-by-redis.md","source":"@site/blog/2023-07-10-chaosblade-contribution-by-redis.md","title":"\u7531Redis\u6545\u969c\u573a\u666f\uff0c\u8bf4\u8bf4ChaosBlade\u8d21\u732e\u7684\u4e8c\u4e09\u4e8b","description":"\u7531Redis\u6545\u969c\u573a\u666f\u8d21\u732e\u793a\u4f8b\uff0c\u4ecb\u7ecdChaosBlade\u8d21\u732e\u5165\u95e8\u3002","date":"2023-07-10T00:00:00.000Z","formattedDate":"July 10, 2023","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":5.91,"hasTruncateMarker":true,"authors":[{"name":"\u6641\u5143\u5b81\uff08@Yuaninga\uff09","title":"Reviewer of ChaosBlade","url":"https://github.com/Yuaninga","imageURL":"https://avatars.githubusercontent.com/u/64267484?v=4","key":"Yuaninga"}],"frontMatter":{"title":"\u7531Redis\u6545\u969c\u573a\u666f\uff0c\u8bf4\u8bf4ChaosBlade\u8d21\u732e\u7684\u4e8c\u4e09\u4e8b","authors":"Yuaninga","tags":["chaosblade"],"description":"\u7531Redis\u6545\u969c\u573a\u666f\u8d21\u732e\u793a\u4f8b\uff0c\u4ecb\u7ecdChaosBlade\u8d21\u732e\u5165\u95e8\u3002","hide_table_of_contents":false},"prevItem":{"title":"ChaosBlade Maintainer \u664b\u5347\u901a\u544a -- \u6641\u5143\u5b81","permalink":"/en/blog/2023/07/20/maintainer-yuanning"},"nextItem":{"title":"ChaosBlade Reviewer \u664b\u5347\u901a\u544a -- \u6641\u5143\u5b81","permalink":"/en/blog/2023/01/09/reviewer-yuanning"}},"content":"## \u6982\u8ff0\\n\\n\u672c\u6587\u4ee52\u4e2a\u65b0\u589eRedis\u539f\u5b50\u4e8b\u4ef6\u4e3a\u4f8b\uff0c\u5e2e\u52a9\u521a\u63a5\u89e6ChaosBlade\u7684\u793e\u533a\u540c\u5b66\u5feb\u901f\u5165\u95e8\u5f00\u6e90\u8d21\u732e\u3002\\n\\n\u5f00\u6e90\u8d21\u732e\u524d\u63d0\uff1a\u4e86\u89e3\u6df7\u6c8c\u5de5\u7a0b\u548c\u638c\u63e1Golang\u5f00\u53d1\u3002\\n\\n#### \u539f\u5b50\u4e8b\u4ef6\u8d21\u732e\u6d41\u7a0b\u56fe\u5982\u4e0b\uff1a\\n\\n![contribution_process.png](/img/2023-07-10-chaosblade-contribution-by-redis/contribution_process.png)\\n\\n\\n\\n\x3c!--truncate--\x3e\\n## \u7b2c\u4e00\u6b65\uff1a\u5206\u6790\u6545\u969c\u6f14\u7ec3\u9700\u6c42\uff0c\u786e\u8ba4\u65b0\u589e\u539f\u5b50\u4e8b\u4ef6\\n\\nRedis\u5b9e\u9645\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u4f1a\u5b58\u5728\u6545\u969c\u6f14\u7ec3\u9700\u6c42\u3002\\n\\n\u4f8b\u5982\uff1a\\n- \u6a21\u62dfKey\u8fc7\u671f\u6545\u969c\uff1a\u53ef\u4ee5\u89e6\u53d1\u6240\u6709key\u8fc7\u671f\u7684\u6781\u7aef\u6545\u969c\u573a\u666f\u3002\\n- \u6a21\u62df\u7f13\u5b58\u5185\u5b58\u9650\u5236\u6545\u969c\uff1a\u53ef\u4ee5\u4e3b\u52a8\u89e6\u53d1Redis \u5185\u5b58\u6dd8\u6c70\u7b56\u7565\u91ca\u653e\u5185\u5b58\u573a\u666f\u3002\\n\\n\u6839\u636e\u6545\u969c\u6f14\u7ec3\u9700\u6c42\u4ef7\u503c\uff0c\u51b3\u5b9a\u662f\u5426\u6709\u5fc5\u8981\u65b0\u589e\u76f8\u5173\u6df7\u6c8c\u5de5\u7a0b\u539f\u5b50\u4e8b\u4ef6\u3002\\n\\n\\n\\n## \u7b2c\u4e8c\u6b65\uff1aFork\u9879\u76ee&\u672c\u5730\u62c9\u53d6\u4ee3\u7801\u5e76\u521b\u5efadev\u5206\u652f\\n\\n![fork_and_branch.png](/img/2023-07-10-chaosblade-contribution-by-redis/fork_and_branch.png)\\n\\n\\n\\n## \u7b2c\u4e09\u6b65\uff1a\u6b63\u5f0f\u5f00\u59cb\u65b0\u539f\u5b50\u4e8b\u4ef6\u5f00\u53d1\\n\\n### 3.1 \u62c9\u53d6chaosblade-exec-middleware\u9879\u76ee\u4ee3\u7801\\n\\nmiddleware\u9879\u76ee\uff1a\u5305\u542bNginx\u3001Redis\u7b49\u4e2d\u95f4\u4ef6\u76f8\u5173\u5b9e\u9a8c\u6838\u5fc3\u4ee3\u7801\u3002\\n\\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/chaosblade-io/chaosblade-exec-middleware\\n\\n### 3.2 \u65b0\u5efaredis\u76ee\u5f55\\n\\n\u8be5\u76ee\u5f55\u653e\u7f6eRedis\u539f\u5b50\u4e8b\u4ef6\u6838\u5fc3\u4ee3\u7801\\n```shell\\nmkdir chaosblade-exec-middleware/exec/redis\\n```\\n\\n### 3.3 \u65b0\u5efa redis.go \u6587\u4ef6\\n\\n```go\\npackage redis\\n\\nimport (\\n\\t\\"github.com/chaosblade-io/chaosblade-spec-go/spec\\"\\n)\\n\\ntype RedisCommandSpec struct {\\n\\tspec.BaseExpModelCommandSpec\\n}\\n\\nfunc (*RedisCommandSpec) Name() string {\\n\\treturn \\"redis\\"\\n}\\n\\nfunc (*RedisCommandSpec) ShortDesc() string {\\n\\treturn \\"Redis experiment\\"\\n}\\n\\nfunc (*RedisCommandSpec) LongDesc() string {\\n\\treturn \\"Redis experiment\\"\\n}\\n\\nfunc NewRedisCommandSpec() spec.ExpModelCommandSpec {\\n\\treturn &RedisCommandSpec{\\n\\t\\tspec.BaseExpModelCommandSpec{\\n\\t\\t\\tExpActions: []spec.ExpActionCommandSpec{\\n\\t\\t\\t\\tNewCacheExpireActionSpec(),\\n\\t\\t\\t\\tNewCacheLimitActionSpec(),\\n\\t\\t\\t},\\n\\t\\t\\tExpFlags: []spec.ExpFlagSpec{},\\n\\t\\t},\\n\\t}\\n}\\n```\\n\\n\\n### 3.4 Redis\u539f\u5b50\u4e8b\u4ef6\u5305\u542b\u5230Model\\nmodel\u76ee\u5f55\u4f4d\u7f6e\uff1achaosblade-exec-middleware/exec/model/\u76ee\u5f55\\n\\nmodel\u76ee\u5f55\u4e0d\u540c\u6587\u4ef6\u5bf9\u5e94\u4e0d\u540c\u7cfb\u7edf\u652f\u6301\uff1a\\n- model_darwin.go \u652f\u6301Mac\u7cfb\u7edf\\n- model_linux.go \u652f\u6301linux\u7cfb\u7edf\\n- model_windows.go \u652f\u6301windows\u7cfb\u7edf\\n\\nmodel\u5177\u4f53\u4ee3\u7801\uff1a\\n\\n[chaosblade-exec-middleware/exec/model/](https://github.com/chaosblade-io/chaosblade-exec-middleware/tree/main/exec/model)\\n\\n```go\\n\\npackage model\\n\\nimport (\\n\\t\\"github.com/chaosblade-io/chaosblade-exec-middleware/exec/nginx\\"\\n\\t\\"github.com/chaosblade-io/chaosblade-exec-middleware/exec/redis\\"\\n\\t\\"github.com/chaosblade-io/chaosblade-spec-go/spec\\"\\n)\\n\\n// GetAllExpModels returns the experiment model specs in the project.\\n// Support for other project about chaosblade\\nfunc GetAllExpModels() []spec.ExpModelCommandSpec {\\n\\treturn []spec.ExpModelCommandSpec{\\n\\t\\tnginx.NewNginxCommandSpec(),\\n\\t\\tredis.NewRedisCommandSpec(),\\n\\t}\\n\\n```\\n\\n### 3.5 Redis\u539f\u5b50\u4e8b\u4ef6\u5305\u542b\u5230\u7f16\u8bd1\u6587\u4ef6\\n\\n\u5177\u4f53\u6587\u4ef6\uff1a\u6dfb\u52a0Redis\u5230chaosblade-exec-middleware/build/spec.go\\n\\n\u5177\u4f53\u4ee3\u7801\uff1a\\n\\n[chaosblade-exec-middleware/build/spec.go](https://github.com/chaosblade-io/chaosblade-exec-middleware/blob/main/build/spec.go)\\n\\n```go\\n...\\n// getModels returns experiment models in the project\\nfunc getModels() *spec.Models {\\n\\tmodelCommandSpecs := []spec.ExpModelCommandSpec{\\n\\t\\tnginx.NewNginxCommandSpec(),\\n\\t\\tredis.NewRedisCommandSpec(), // <== Redis\u76f8\u5173 \\n\\t}\\n\\tspecModels := make([]*spec.Models, 0)\\n\\tfor _, modeSpec := range modelCommandSpecs {\\n\\t\\tflagSpecs := append(modeSpec.Flags(), model.GetSSHExpFlags()...)\\n\\t\\tmodeSpec.SetFlags(flagSpecs)\\n\\t\\tspecModel := util.ConvertSpecToModels(modeSpec, spec.ExpPrepareModel{}, \\"host\\")\\n\\t\\tspecModels = append(specModels, specModel)\\n\\t}\\n\\treturn util.MergeModels(specModels...)\\n}\\n...\\n\\n```\\n\\n### 3.6 \u5f00\u53d1\u5177\u4f53\u539f\u5b50\u4e8b\u4ef6\\n1. \u7f13\u5b58\u8fc7\u671f\u5b9e\u9a8c\uff1a\\n\\n[chaosblade-exec-middleware/exec/redis/redis_cache_expire.go](https://github.com/chaosblade-io/chaosblade-exec-middleware/blob/main/exec/redis/redis_cache_expire.go)\\n\\n2. \u7f13\u5b58\u5185\u5b58\u9650\u5236\u5b9e\u9a8c\\n\\n[chaosblade-exec-middleware/exec/redis/redis_cache_limit.go](https://github.com/chaosblade-io/chaosblade-exec-middleware/blob/main/exec/redis/redis_cache_limit.go)\\n\\n\\n\\n## \u7b2c\u56db\u6b65\uff1a\u4f7f\u7528Goland\u672c\u5730\u8c03\u8bd5\uff0c\u6709bug\u6216\u4f18\u5316\u518d\u6b21\u5f00\u53d1\u8c03\u8bd5\u3002\\n\\n### 4.1 \u642d\u5efa\u51c6\u5907Redis\u670d\u52a1\\n\u53c2\u8003\u76f8\u5173\u6587\u6863\\n\\n### 4.2 \u4fee\u6539Goland Debug\u914d\u7f6e\\n#### 1.\u6253\u5f00main.go \u70b9\u51fb\u4e09\u89d2\u6309\u94ae\uff0c\u9009\u62e9Modify Run  Configuration...\\n\\n![debug_01.png](/img/2023-07-10-chaosblade-contribution-by-redis/debug_01.png)\\n\\n#### 2.\u4fee\u6539debug\u914d\u7f6e\uff1a\u8be6\u7ec6\u4f7f\u7528\u53ef\u4ee5\u67e5\u770bGoland\u5b98\u65b9\u6587\u6863\\n\\n![debug_02.png](/img/2023-07-10-chaosblade-contribution-by-redis/debug_02.png)\\n\\n#### 3.\u6267\u884cDebug\u64cd\u4f5c\uff1a\u8be6\u7ec6\u4f7f\u7528\u53ef\u4ee5\u67e5\u770bGoland\u5b98\u65b9\u6587\u6863\\n\\n![debug_03.png](/img/2023-07-10-chaosblade-contribution-by-redis/debug_03.png)\\n\\n\\n\\n## \u7b2c\u4e94\u6b65\uff1a\u672c\u5730\u7f16\u8bd1\u5e76\u66ff\u6362\u6d4b\u8bd5\u73af\u5883\u65e7\u7f16\u8bd1\u6587\u4ef6\\n\\n### 5.1 \u53c2\u8003\u5b98\u65b9\u6587\u6863\u6267\u884c\u7f16\u8bd1\\n#### \u5982\u679c\u5728 mac \u7cfb\u7edf\u4e0a\uff0c\u7f16\u8bd1\u5f53\u524d\u7cfb\u7edf\u7684\u7248\u672c\uff0c\u8bf7\u6267\u884c\uff1a\\n`make build_darwin`\\n\\n#### \u5982\u679c\u60f3\u5728 mac \u7cfb\u7edf\u4e0a\uff0c\u7f16\u8bd1 linux \u7cfb\u7edfx86\u67b6\u6784\u7248\u672c\uff0c\u8bf7\u6267\u884c\uff1a\\n`make build_linux`\\n\\n#### \u5982\u679c\u60f3\u5728 mac \u7cfb\u7edf\u4e0a\uff0c\u7f16\u8bd1linux \u7cfb\u7edfarm \u67b6\u6784\u7248\u672c\uff0c\u8bf7\u6267\u884c\uff1a\\n`make build_linux_arm`\\n\\n\u8bf4\u660e\uff1a\u5176\u4ed6\u7cfb\u7edf\u7f16\u8bd1\u8bf4\u660e\u53c2\u8003 [\u5b98\u65b9\u6587\u6863](https://github.com/chaosblade-io/chaosblade/blob/master/README_CN.md)\\n\\n### 5.2 \u7f16\u8bd1\u540e\u6587\u4ef6\u5b58\u653e\u5728target\u76ee\u5f55\u4e2d\\n\\n![build_01.png](/img/2023-07-10-chaosblade-contribution-by-redis/build_01.png)\\n\\n### 5.3 \u6d4b\u8bd5\u73af\u5883\u66ff\u6362\u4e3a\u65b0\u7f16\u8bd1\u6587\u4ef6\\n\u5c06\u6d4b\u8bd5\u670d\u52a1\u5668chaosblade\u76ee\u5f55\u4ee5\u4e0b\u6587\u4ef6\u66ff\u6362\u4e3a\u65b0\u7248\u672c\\n- chaosblade-1.7.2/bin/chaos_middleware\\n- chaosblade-1.7.2/yaml/chaosblade-middleware-spec-1.7.2.yaml\\n\\n\\n![build_02.png](/img/2023-07-10-chaosblade-contribution-by-redis/build_02.png)\\n\\n\\n## \u7b2c\u516d\u6b65\uff1a\u6d4b\u8bd5\u73af\u5883\u6d4b\u8bd5\u76f4\u81f3\u901a\u8fc7\\n\\n### 6.1 \u6d4b\u8bd5\u6a21\u62df\u7f13\u5b58\u8fc7\u671f\u5b9e\u9a8c\\n\\n#### \u6267\u884c\u5b9e\u9a8c\uff1a\\n```shell\\n#\u793a\u4f8b1\uff1aexpire a key\\nblade create redis cache-expire --addr 192.168.56.101:6379 --password 123456 --key test1 --expiry 1m\\n#\u793a\u4f8b2\uff1aexpire all keys only when the new expiry is greater than current one\\nblade create redis cache-expire --addr 192.168.56.101:6379 --password 123456 --option GT --expiry 1m\\n```\\n#### \u9a8c\u8bc1\u5b9e\u9a8c\u7ed3\u679c\uff1a\\n```shell\\n# \u5b9e\u9a8c\u524d\\n192.168.56.101:6379> set  test1 test2\\nOK\\n192.168.56.101:6379> get test1\\n\\"test2\\"\\n192.168.56.101:6379> expire test1 3000\\n(integer) 1\\n192.168.56.101:6379> ttl test1\\n(integer) 2924\\n# \u5b9e\u9a8c\u540e\\n# blade create redis cache-expire --addr 192.168.56.101:6379 --password 123456 --option GT --expiry 1m\\n192.168.56.101:6379> ttl test1\\n(integer) 58\\n```\\n\\n### 6.2 \u6d4b\u8bd5\u6a21\u62df\u7f13\u5b58\u5185\u5b58\u9650\u5236\u5b9e\u9a8c\\n#### \u6267\u884c\u5b9e\u9a8c\uff1a\\n```shell\\n# \u793a\u4f8b\uff1a set maxmemory to 256M\\nblade create redis cache-limit --addr 192.168.56.101:6379 --password 123456  --size 256M\\n```\\n#### \u9a8c\u8bc1\u5b9e\u9a8c\u7ed3\u679c\uff1a\\n```shell\\n# \u5b9e\u9a8c\u524d\\n192.168.56.101:6379> config get maxmemory\\n1) \\"maxmemory\\"\\n2) \\"0\\"\\n# \u5b9e\u9a8c\u540e\\n# blade create redis cache-limit --addr 192.168.56.101:6379 --password 123456  --size 256M\\n192.168.56.101:6379> config get maxmemory\\n1) \\"maxmemory\\"\\n2) \\"256000000\\"\\n```\\n\u8bf4\u660e\uff1a\u6d4b\u8bd5\u6709bug\u6216\u5f85\u4f18\u5316\uff0c\u91cd\u590d\u5f00\u53d1\u3001\u8c03\u8bd5\u548c\u7f16\u8bd1\u6b65\u9aa4\\n\\n\\n\\n## \u7b2c\u4e03\u6b65\uff1a\u4f7f\u7528dev\u5206\u652f\u521b\u5efa\u548c\u63d0\u4ea4PR\\n\\n### 7.1 \u63a8\u9001\u672c\u5730dev\u5206\u652fGitHub\u8fdc\u7a0b\\n```shell\\n# commit\\ngit commit -s  -m \\"add 2 redis experiments\\"\\n# push\\ngit push origin dev\\n```\\n\\n### 7.2 \u767b\u5f55GitHub \u4f7f\u7528dev\u5206\u652f\u521b\u5efa\u548c\u63d0\u4ea4PR\\n\\n![pr_01.png](/img/2023-07-10-chaosblade-contribution-by-redis/pr_01.png)\\n\\n\\n### 7.3 \u63d0\u4ea4PR\u540e\u51c6\u5907\u5b98\u7f51ChaosBlade\u6587\u6863\u8d21\u732e\\n\\n\\n\\n## \u7b2c\u516b\u6b65\uff1aPR\u5ba1\u67e5\u76f4\u81f3\u5ba1\u67e5\u901a\u8fc7\\n\\n![pr_02.png](/img/2023-07-10-chaosblade-contribution-by-redis/pr_02.png)\\n\\n\\n\\n## \u7b2c\u4e5d\u6b65\uff1aPR\u5408\u5e76\u81f3main\uff0c\u65b0\u589e\u539f\u5b50\u4e8b\u4ef6\u8d21\u732e\u6210\u529f\u3002\\n\\n![pr_03.png](/img/2023-07-10-chaosblade-contribution-by-redis/pr_03.png)\\n\\n\\n\\n\\n>\\n> ChaosBlade \u5b98\u65b9\u7f51\u5740\uff1a[https://chaosblade.io/](https://chaosblade.io/)\\n>\\n> ChaosBlade Github : [https://github.com/chaosblade-io/chaosblade](https://github.com/chaosblade-io/chaosblade)\\n>\\n> ChaosBlade \u9489\u9489\u793e\u533a\u4ea4\u6d41\u7fa4:23177705"},{"id":"/2023/01/09/reviewer-yuanning","metadata":{"permalink":"/en/blog/2023/01/09/reviewer-yuanning","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2023-01-09-reviewer-yuanning.md","source":"@site/blog/2023-01-09-reviewer-yuanning.md","title":"ChaosBlade Reviewer \u664b\u5347\u901a\u544a -- \u6641\u5143\u5b81","description":"ChaosBlade Reviewer \u664b\u5347\u901a\u544a","date":"2023-01-09T00:00:00.000Z","formattedDate":"January 9, 2023","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"},{"label":"Reviewer","permalink":"/en/blog/tags/reviewer"}],"readingTime":2.95,"hasTruncateMarker":false,"authors":[{"name":"\u8521\u94ed\u971e\uff08\u94ed\u5c11\uff0c@MandssS\uff09","title":"Maintainer of ChaosBlade","url":"https://github.com/MandssS","imageURL":"https://avatars.githubusercontent.com/u/13030286?v=4","key":"camix"}],"frontMatter":{"title":"ChaosBlade Reviewer \u664b\u5347\u901a\u544a -- \u6641\u5143\u5b81","authors":"camix","tags":["chaosblade","Reviewer"],"description":"ChaosBlade Reviewer \u664b\u5347\u901a\u544a","hide_table_of_contents":false},"prevItem":{"title":"\u7531Redis\u6545\u969c\u573a\u666f\uff0c\u8bf4\u8bf4ChaosBlade\u8d21\u732e\u7684\u4e8c\u4e09\u4e8b","permalink":"/en/blog/2023/07/10/chaosblade-contribution-by-redis"},"nextItem":{"title":"\u5927\u89c4\u6a21 Kubernetes \u96c6\u7fa4\u6545\u969c\u6ce8\u5165\u7684\u5229\u5668-ChaosBlade","permalink":"/en/blog/2022/11/01/chaosblade-operator"}},"content":"ChaosBlade \u662f\u963f\u91cc\u5df4\u5df4 2019 \u5e74\u5f00\u6e90\u7684\u6df7\u6c8c\u5de5\u7a0b\u9879\u76ee\uff0c\u5305\u542b\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\u5de5\u5177 ChaosBlade \u548c\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0 ChaosBlade-box\uff0c\u65e8\u5728\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u5e2e\u52a9\u4f01\u4e1a\u89e3\u51b3\u4e91\u539f\u751f\u8fc7\u7a0b\u4e2d\u9ad8\u53ef\u7528\u95ee\u9898\u3002\u5b9e\u9a8c\u5de5\u5177 ChaosBlade \u652f\u6301 3 \u5927\u7cfb\u7edf\u5e73\u53f0\uff0c4 \u79cd\u7f16\u7a0b\u8bed\u8a00\u5e94\u7528\uff0c\u5171\u6d89\u53ca 200 \u591a\u7684\u5b9e\u9a8c\u573a\u666f\uff0c3000 \u591a\u4e2a\u5b9e\u9a8c\u53c2\u6570\uff0c\u53ef\u4ee5\u7cbe\u7ec6\u5316\u7684\u63a7\u5236\u5b9e\u9a8c\u8303\u56f4\u3002 \u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0 ChaosBlade-Box \u652f\u6301\u5b9e\u9a8c\u5de5\u5177\u6258\u7ba1\uff0c\u9664\u5df2\u6258\u7ba1 ChaosBlade \u5916\uff0c\u8fd8\u652f\u6301 Litmuschaos \u5b9e\u9a8c\u5de5\u5177\u3002\u5df2\u767b\u8bb0\u4f7f\u7528\u4f01\u4e1a 40 \u591a\u5bb6\uff0c\u5176\u4e2d\u5df2\u5728\u5de5\u5546\u94f6\u884c\u3001\u4e2d\u56fd\u79fb\u52a8\u3001\u5c0f\u7c73\u3001\u4eac\u4e1c\u7b49\u4f01\u4e1a\u4e2d\u843d\u5730\u4f7f\u7528\u3002\\n![image.png](/img/logo.png)\\n\\n\u7ecf\u8fc7\u5168\u4f53 Reviewer \u63d0\u540d\u4e0e\u8ba8\u8bba\uff0c\u793e\u533a\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\uff0c**\u6641\u5143\u5b81\uff08GitHub ID: @ID\uff1aYuaninga \uff0c\u4e2d\u56fd\u79fb\u52a8\u78d0\u57faPaaS\u5e73\u53f0\uff09\u6b63\u5f0f\u664b\u5347\u4e3a ChaosBlade \u793e\u533a Reviewer** \u3002\u6641\u5143\u5b81\u540c\u5b66\u5728\u8fc7\u53bb\u7684\u4e00\u6bb5\u65f6\u95f4\uff0c\u79ef\u6781\u3001\u6d3b\u8dc3\u5730\u53c2\u4e0e\u5230 ChaosBlade \u793e\u533a\u8ba8\u8bba\u4e0e\u8d21\u732e\uff0c\u4e0d\u4ec5\u53c2\u4e0e\u5b8c\u5584\u4e86\u5b98\u7f51\u6587\u6863\u5efa\u8bbe\uff0c\u66f4\u662f\u79ef\u6781\u53c2\u4e0e\u5230\u591a\u4e2a module \u7684 bug fix \u548c feature \u7684\u8d21\u732e\u4e2d\u6765\uff0c\u63d0\u4ea4\u4e86\u591a\u8fbe 11 \u4e2a PR\uff0c\u6d89\u53ca chaosblade-operator\u3001chaosblade-exec-os \u548c chaosblade-website \u7b49\u4e09\u4e2a\u9879\u76ee\u4e2d\u3002\u6ee1\u8db3\u793e\u533a\u5bf9 Reviewer \u6301\u7eed\u8d21\u732e\u7684\u671f\u671b\u3002\u606d\u559c\u5143\u5b81\uff01\\n\u5177\u4f53\u53ef\u89c1\u5176 Reviewer \u7684 [promotion Reviewer pr](https://github.com/chaosblade-io/community/pull/10)\\nCommitter \u8bc1\u4e66\uff1a\\n\\n![](/img/blog/chaosblade-certificate-yuanning.jpg)\\n\u65b0\u664b Committer \u5bc4\u8bed\uff1a\\n\\n_\u5f88\u8363\u5e78\u52a0\u5165\u5230 ChaosBlade \u793e\u533a\u7684 Reviewer \u961f\u4f0d\uff0c\u5728\u4ee5\u540e\u6211\u5c06\u548c\u5927\u5bb6\u4e00\u8d77\u5171\u540c\u5efa\u8bbe ChaosBlade \uff0c\u505a\u66f4\u591a\u7684 PR \u8d21\u732e\u548c\u5ba1\u67e5\u5de5\u4f5c\u3002\u6211\u575a\u4fe1\u5728\u5927\u5bb6\u7684\u5171\u540c\u52aa\u529b\u4e0b ChaosBlade \u4e00\u5b9a\u4f1a\u66f4\u52a0\u5f3a\u5927\u3002\u8fd9\u91cc\u53ef\u4ee5\u4ea4\u6d41\u7b54\u7591\u3001\u53ef\u4ee5\u63d0\u5347\u6280\u672f\u3001\u53ef\u4ee5\u6311\u6218\u6280\u672f\u96be\u70b9\uff0c\u65e0\u8bba\u4f60\u662f\u65b0\u624b\u8fd8\u662f\u5927\u725b\uff0c\u53ea\u8981\u4f60\u6709\u65f6\u95f4\uff0c\u6709\u70ed\u60c5\uff0c\u6709\u610f\u613f\uff0c\u6b22\u8fce\u52a0\u5165\u793e\u533a\u3001\u53c2\u4e0e\u8d21\u732e\u3001\u62e5\u62b1 ChaosBlade ~_~~\\n\\n---\\n\\nChaosBlade\u81ea\u9879\u76ee\u53d1\u8d77\u4ee5\u6765\uff0c\u5c31\u79c9\u6301\u7740\u5f00\u653e\u7684\u5f00\u6e90\u601d\u60f3\uff0c\u76ee\u524d\u7684\u793e\u533a\u53d1\u5c55\u4e8e\u751f\u6001\u5efa\u8bbe\u66f4\u662f\u79bb\u4e0d\u5f00\u5404\u4e2a\u4f01\u4e1a\u4e8e\u793e\u533a\u540c\u5b66\u7684\u5171\u5efa\u3002\u76ee\u524d\u6211\u4eec\u66f4\u662f\u5728\u53d1\u5c55\u7684\u5173\u952e\u9636\u6bb5\uff0c\u5f00\u6e90\u8d21\u732e\u5c0f\u7ec4\u6b63\u5728\u706b\u70ed\u62db\u52df\u8d21\u732e\u8005\uff0c\u5e0c\u671b\u66f4\u591a\u7684\u540c\u5b66\u53c2\u4e0e\u5230\u6211\u4eec\u7684\u5f00\u6e90\u5efa\u8bbe\u5f53\u4e2d\u6765\uff0c\u4e00\u8d77\u53c2\u4e0e\u5230\u793e\u533a\u7684\u5efa\u8bbe\u548c\u4ee3\u7801\u8d21\u732e\u4e2d\u6765\uff1a\\n\\n- \u793e\u533a\u540c\u5b66\u53d1\u5c55\u9636\u68af\u53ef\u89c1\uff1a[https://github.com/chaosblade-io/community/blob/main/Contributor_Ladder_CN.md](https://github.com/chaosblade-io/community/blob/main/Contributor_Ladder_CN.md)\\n- \u5b98\u7f51\uff1a[https://chaosblade.io/](https://chaosblade.io/)\\n- \u9489\u9489\u7fa4\uff1a23177705"},{"id":"/2022/11/01/chaosblade-operator","metadata":{"permalink":"/en/blog/2022/11/01/chaosblade-operator","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2022-11-01-chaosblade-operator.md","source":"@site/blog/2022-11-01-chaosblade-operator.md","title":"\u5927\u89c4\u6a21 Kubernetes \u96c6\u7fa4\u6545\u969c\u6ce8\u5165\u7684\u5229\u5668-ChaosBlade","description":"\u672c\u6587\u5c06\u4e3b\u8981\u4ecb\u7ecd ChaosBlade \u5728 Kubernetes \u4e2d\u6545\u969c\u6ce8\u5165\u7684\u5e95\u5c42\u5b9e\u73b0\u539f\u7406\u3001\u7248\u672c\u4f18\u5316\u8fc7\u7a0b\u4ee5\u53ca\u5927\u89c4\u6a21\u5e94\u7528\u6f14\u7ec3\u6d4b\u8bd5\u3002\u3002","date":"2022-11-01T00:00:00.000Z","formattedDate":"November 1, 2022","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":31.03,"hasTruncateMarker":true,"authors":[{"name":"\u53f6\u98de\uff08@tiny-x\uff09","title":"Maintainer of ChaosBlade","url":"https://github.com/tiny-x","imageURL":"https://avatars.githubusercontent.com/u/29175949?v=4","key":"tiny-x"}],"frontMatter":{"title":"\u5927\u89c4\u6a21 Kubernetes \u96c6\u7fa4\u6545\u969c\u6ce8\u5165\u7684\u5229\u5668-ChaosBlade","authors":"tiny-x","tags":["chaosblade"],"description":"\u672c\u6587\u5c06\u4e3b\u8981\u4ecb\u7ecd ChaosBlade \u5728 Kubernetes \u4e2d\u6545\u969c\u6ce8\u5165\u7684\u5e95\u5c42\u5b9e\u73b0\u539f\u7406\u3001\u7248\u672c\u4f18\u5316\u8fc7\u7a0b\u4ee5\u53ca\u5927\u89c4\u6a21\u5e94\u7528\u6f14\u7ec3\u6d4b\u8bd5\u3002\u3002","hide_table_of_contents":false},"prevItem":{"title":"ChaosBlade Reviewer \u664b\u5347\u901a\u544a -- \u6641\u5143\u5b81","permalink":"/en/blog/2023/01/09/reviewer-yuanning"},"nextItem":{"title":"ChaosBlade Java \u573a\u666f\u6027\u80fd\u4f18\u5316\uff0c\u90a3\u4e9b\u4f60\u4e0d\u77e5\u9053\u7684\u4e8b","permalink":"/en/blog/2022/09/09/chaosblade-java"}},"content":"## ChaosBlade\\n\u968f\u7740\u4e91\u539f\u751f\u7684\u53d1\u5c55\uff0c\u4e91\u539f\u751f\u5e94\u7528\u4e00\u81f4\u6027\u3001\u53ef\u9760\u6027\u3001\u7075\u6d3b\u7f16\u6392\u7684\u80fd\u529b\u8ba9\u5927\u90e8\u5206\u4f01\u4e1a\u9009\u62e9\u5c06\u5e94\u7528\u5f80\u4e91\u4e0a\u8fc1\u79fb\uff0c\u4f46\u540c\u65f6\u4e91\u57fa\u7840\u8bbe\u65bd\u5728\u7a33\u5b9a\u6027\u3001\u9ad8\u53ef\u7528\u3001\u53ef\u89c2\u6d4b\u65b9\u9762\u4e5f\u63a5\u53d7\u7740\u5f3a\u5927\u7684\u8003\u9a8c\u3002\\nChaosBlade \u662f\u963f\u91cc\u5df4\u5df4\u5f00\u6e90\u7684\u4e00\u6b3e\u9075\u5faa\u6df7\u6c8c\u5de5\u7a0b\u539f\u7406\u548c\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u7684\u5b9e\u9a8c\u6ce8\u5165\u5de5\u5177\uff0c\u5e2e\u52a9\u4f01\u4e1a\u63d0\u5347\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u5bb9\u9519\u80fd\u529b\uff0c\u5e76\u4e14\u5728\u4f01\u4e1a\u4e0a\u4e91\u6216\u5f80\u4e91\u539f\u751f\u7cfb\u7edf\u8fc1\u79fb\u8fc7\u7a0b\u4e2d\u63d0\u4f9b\u4e1a\u52a1\u8fde\u7eed\u6027\u4fdd\u969c\u3002\\nChaosBlade Operator \u662f Kubernetes \u5e73\u53f0\u5b9e\u9a8c\u573a\u666f\u7684\u5b9e\u73b0\uff0c\u5c06\u6df7\u6c8c\u5b9e\u9a8c\u901a\u8fc7 Kubernetes \u6807\u51c6\u7684 CRD \u65b9\u5f0f\u5b9a\u4e49\uff0c\u5f88\u65b9\u4fbf\u5730\u4f7f\u7528 Kubernetes \u8d44\u6e90\u64cd\u4f5c\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u3001\u66f4\u65b0\u3001\u5220\u9664\u5b9e\u9a8c\u573a\u666f\uff0c\u5305\u62ec\u4f7f\u7528 kubectl\u3001client-go \u7b49\u65b9\u5f0f\u6267\u884c\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u4f7f\u7528 chaosblade cli \u5de5\u5177\u6267\u884c\u3002\\n\x3c!--truncate--\x3e\\n**\u672c\u6587\u5c06\u4e3b\u8981\u4ecb\u7ecd ChaosBlade \u5728 Kubernetes \u4e2d\u6545\u969c\u6ce8\u5165\u7684\u5e95\u5c42\u5b9e\u73b0\u539f\u7406\u3001\u7248\u672c\u4f18\u5316\u8fc7\u7a0b\u4ee5\u53ca\u5927\u89c4\u6a21\u5e94\u7528\u6f14\u7ec3\u6d4b\u8bd5\u3002**\\n\\n### \u8d44\u6e90\u6a21\u578b\\n\u5728 Kubernetes \u4e2d\u90e8\u7f72\u5e94\u7528\uff0c\u901a\u5e38\u6211\u4eec\u4f1a\u9009\u62e9\u5c06\u5e94\u7528\u5b9a\u4e49\u4e3a pod\u3001Deployment\u3001Statefulset \u7b49\u8d44\u6e90\u7c7b\u578b\uff0c\u8fd9\u4e9b\u90fd\u662f Kubernetes \u5df2\u7ecf\u5185\u7f6e\u7684\uff1b\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u9762\u5bf9\u590d\u6742\u7684\u5e94\u7528\u573a\u666f\uff0c\u5185\u7f6e\u7684\u8d44\u6e90\u7c7b\u578b\u662f\u65e0\u6cd5\u6ee1\u8db3\u6211\u4eec\u9700\u6c42\u7684\uff0cOperator \u662f\u4e00\u79cd\u89e3\u51b3\u590d\u6742\u5e94\u7528\u5bb9\u5668\u5316\u7684\u4e00\u79cd\u65b9\u6848\uff0c\u901a\u8fc7\u81ea\u5b9a\u4e49\u8d44\u6e90\u548c\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\u6765\u5b9e\u73b0\u590d\u6742\u5e94\u7528\u5bb9\u5668\u5316\uff0cchaosblade-operator \u6b63\u662f\u5c31\u662f\u57fa\u4e8e Operator \u5b9e\u73b0\u7684\u3002\\n\u5728 Kubernetes \u4e2d\u5b89\u88c5\u5b8c chaosblade-operator \u540e\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a deployment \u8d44\u6e90\u7c7b\u578b\u7684  chaosblade-operator \u5b9e\u4f8b\u3001\u4e00\u4e2a daemonset \u8d44\u6e90\u7c7b\u578b\u7684  chaosblade-tool \u5b9e\u4f8b\u3001\u4e00\u4e2a\u81ea\u5b9a\u4e49\u8d44\u6e90\u5b9a\u4e49\uff0c\u5f53\u7136\u8fd8\u5305\u542b RABC\u3001SA \u7b49\u7b49\u5176\u4ed6\u8d44\u6e90\uff1b\\n![image.png](/img/2022-11-01-chaosblade-operator/chaosblade_operator_resource_mode.png)\\nchaosblade \u5c06\u81ea\u5b9a\u4e49\u8d44\u6e90\u7c7b\u578b\u5b9a\u4e49\u4e3a  chaosblade \uff0c\u7b80\u79f0 blade \uff1b\u6bcf\u6b21\u65b0\u5efa\u6f14\u7ec3\u5c31\u53ef\u4ee5\u901a\u8fc7 kubectl \u6216\u8005 chaosblade cli \u521b\u5efa blade \u5b9e\u4f8b\u8d44\u6e90\uff0cblade \u8d44\u6e90\u672c\u8eab\u4e5f\u5305\u542b\u4e86 chaosblade \u6df7\u6c8c\u5b9e\u9a8c\u5b9a\u4e49\uff1b\\nchaosblade-operator \u4f1a\u76d1\u542c blade \u8d44\u6e90\u7684\u751f\u547d\u5468\u671f\uff0c\u5f53\u53d1\u73b0\u6709 blade \u8d44\u6e90\u5b9e\u4f8b\u88ab\u521b\u5efa\u65f6\uff0c\u540c\u65f6\u5c31\u80fd\u62ff\u5230\u6df7\u6c8c\u5b9e\u9a8c\u5b9a\u4e49\uff0c\u7136\u540e\u89e3\u6790\u5b9e\u9a8c\u5b9a\u4e49\uff0c\u53bb\u8c03\u7528 chaosblade-tool \u771f\u6b63\u5730\u6ce8\u5165\u6545\u969c\uff1b\\nchaosblade-tool \u662f daemonset \u8d44\u6e90\u7c7b\u578b\uff0c\u4e00\u4e2a Node \u8282\u70b9\u5fc5\u5b9a\u4f1a\u90e8\u7f72\u4e00\u4e2a pod\uff0c\u4ece Linux Namespace \u7684\u7ef4\u5ea6\u51fa\u53d1\uff0c\u8be5 pod \u7f51\u7edc\u3001PID \u547d\u540d\u7a7a\u95f4\u4e0e Node \u8282\u70b9\u5904\u5728\u540c\u4e00\u547d\u540d\u7a7a\u95f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u505a\u5230\u90e8\u5206 Node \u7ea7\u522b\u7684\u6f14\u7ec3\u3002\\n### \u751f\u547d\u5468\u671f\\n\u5728\u8d44\u6e90\u6a21\u578b\u4e2d\uff0c\u7b80\u5355\u63d0\u5230\u4e86 chaosblade-operator \u4f1a\u76d1\u542c blade \u8d44\u6e90\u7684\u521b\u5efa\uff1b chaosblade-operator \u5b9e\u5219\u4f1a\u76d1\u542c\u6574\u4e2a blade \u8d44\u6e90\u7684\u751f\u547d\u5468\u671f\uff0cblade \u8d44\u6e90\u7684\u751f\u547d\u5468\u671f\u7b49\u540c\u6f14\u7ec3\u5b9e\u9a8c\u751f\u547d\u5468\u671f\uff1bchaosblade-operator \u4f1a\u6839\u636e blade \u8d44\u6e90\u72b6\u6001\u53bb\u66f4\u65b0\u5b9e\u9a8c\u7684\u72b6\u6001\u3002\\n\\n| blade \u8d44\u6e90\u72b6\u6001 | \u5b9e\u9a8c\u8fc7\u7a0b | CPU \u8d1f\u8f7d\u6848\u4f8b |\\n| --- | --- | --- |\\n| apply(\u65b0\u5efa) | \u65b0\u5efa\u6f14\u7ec3 | \u65b0\u5efa CPU \u8d1f\u8f7d\u6f14\u7ec3 |\\n| running(\u8fd0\u884c\u4e2d) | \u6f14\u7ec3\u8fd0\u884c\u4e2d | CPU \u8d1f\u8f7d\u4e2d |\\n| deleted(\u88ab\u5220\u9664) | \u6062\u590d\u6f14\u7ec3 | \u6062\u590d\u6f14\u7ec3 |\\n\\n### \u6545\u969c\u6ce8\u5165\\n\u5728\u8d44\u6e90\u6a21\u578b\u4e2d\u63d0\u5230\u4e86 chaosblade-operator \u53d1\u73b0\u6709 blade \u8d44\u6e90\u5b9e\u4f8b\u88ab\u521b\u5efa\u65f6\uff0c\u540c\u65f6\u5c31\u80fd\u62ff\u5230\u6df7\u6c8c\u5b9e\u9a8c\u5b9a\u4e49\uff0c\u7136\u540e\u89e3\u6790\u5b9e\u9a8c\u5b9a\u4e49\uff0c\u53bb\u771f\u6b63\u5730\u6ce8\u5165\u6545\u969c\uff1b\u90a3\u4e48 chaosblade-operator \u662f\u5982\u4f55\u53bb\u771f\u6b63\u5730\u6ce8\u5165\u6545\u969c\u5462\uff1f\\n\u5176\u5b9e\u5728\u65e9\u671f\u7684 chaosblade-operator \u7248\u672c\u4e2d\uff0c\u5927\u90e8\u5206\u573a\u666f\u662f\u901a\u8fc7\u5c06 chaosblade cli \u5de5\u5177\u901a\u8fc7 kubenetes API \u901a\u9053\u590d\u5236\u5230\u5bb9\u5668\u5185\u90e8\uff0c\u7136\u540e\u518d\u53bb\u5bb9\u5668\u5185\u90e8\u6267\u884c\u547d\u4ee4\u6765\u5b9e\u73b0\u6545\u969c\u6ce8\u5165\uff0c\u6574\u4f53\u5b9e\u73b0\u65b9\u6848\u5165\u4e0b\u56fe\uff1b\\n![1.5.x.png](/img/2022-11-01-chaosblade-operator/early_stage_chaosblade_operator.png)\\n\u53ef\u4ee5\u770b\u5230\u5de6\u8fb9\u7684 yaml \u5b9a\u4e49\u5c31\u662f Chaosblade \u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u5b9a\u4e49\uff0c\u4e5f\u662f blade \u8d44\u6e90\u5b9e\u4f8b\u7684\u4e00\u90e8\u5206\u4fe1\u606f\uff0c\u5f53 blade \u8d44\u6e90\u901a\u8fc7 kubectl apply \u4ee5\u540e\uff0cchaosblade-operator \u4f1a\u76d1\u542c\u5230\u8d44\u6e90\u7684\u521b\u5efa\uff0c\u540c\u65f6\u89e3\u6790\u5230\u5b9e\u9a8c\u5b9a\u4e49\uff1b\\n\u5f53\u89e3\u6790\u5230 scope = node \u7684\u65f6\u5019\uff0c\u4f1a\u627e\u5230 node \u8282\u70b9\u6240\u5728 chaosblade-tool pod \u4e2d\u6267\u884c\u547d\u4ee4\uff0c\u8fd9\u4e9b\u52a8\u4f5c\u51e0\u4e4e\u5bf9\u6574\u4e2a\u96c6\u7fa4\u6765\u8bf4\u8d44\u6e90\u6d88\u8017\u4e5f\u662f\u6781\u5c11\u7684\uff1b\\n\u4f46\u662f\u5f53\u89e3\u6790\u5230 scope = pod \u6216\u8005  scope = container  \u7684\u65f6\u5019\uff0c\u5927\u90e8\u5206\u573a\u666f chaosblade-operator \u4f1a\u628a chaosblade cli \u5de5\u5177\u672c\u8eab\u590d\u5236\u5230\u4e1a\u52a1\u5bb9\u5668\u5185\u90e8\uff0c\u7136\u540e\u518d\u53bb\u4e1a\u52a1\u5bb9\u5668\u6267\u884c\u547d\u4ee4\uff0c\u5de5\u5177\u5305\u7684\u5927\u5c0f\u3001\u5b9e\u9a8c\u9009\u62e9\u7684\u5bb9\u5668\u6570\u91cf\u3001\u51b3\u5b9a\u4e86\u8d44\u6e90\u7684\u6d88\u8017\u5927\u5c0f\uff0c\u5f80\u5f80\u517c\u5bb9\u6027\u3001\u7248\u672c\u66f4\u65b0\u7b49\u7b49\u90fd\u5f97\u4e0d\u5230\u5f88\u597d\u7684\u4fdd\u969c\uff1b\\n**\u5728\u65b0\u7248\u672c\u7684 chaosblade-operator \u7248\u672c\u4e2d\uff0c\u5c06\u5728\u4e0b\u9762\u6700\u521d\u7684\u95ee\u9898\u3001\u4f18\u5316\u8fc7\u7a0b\u3001\u5b9e\u73b0\u539f\u7406\u7b49\u5c0f\u8282\u8be6\u7ec6\u4ecb\u7ecd\u3002**\\n## \u6700\u521d\u7684\u75db\u70b9\\n\u5f53\u4e00\u4e2a\u4e91\u539f\u751f\u5e94\u7528\u8fbe\u5230\u4e00\u5b9a\u89c4\u6a21\u65f6\uff0c\u53bb\u8fdb\u884c\u6f14\u7ec3\uff1b\\n\\n- \u96c6\u7fa4\u73af\u5883\uff1a1000 \u4e2a node \u8282\u70b9\\n- \u76ee\u6807\u5e94\u7528\uff1adeployment \u6709 5000 \u4e2a\u526f\u672c\u6570\\n- \u6f14\u7ec3\u573a\u666f\uff1a\u5bf9\u8be5\u5e94\u7528\u5bf9\u5916\u63d0\u4f9b\u7684\u63a5\u53e3\u8fd4\u56de\u5ef6\u8fdf 1000 \u6beb\u79d2\\n### \u6ce8\u5165\u6162\\n\u9996\u5148\u9700\u8981\u627e\u5230 5000 \u4e2a\u526f\u672c\uff0c\u5c06\u5de5\u5177\u590d\u5236\u5230\u5bb9\u5668\uff0c\u5728\u8fdb\u5165\u5bb9\u5668\u6267\u884c\u547d\u4ee4\uff0c\u5047\u8bbe\u4e00\u4e2a\u590d\u5236\u5de5\u5177\u8017\u8d39 100 \u6beb\u79d2\uff0c\u90a3\u4e48\u6574\u4e2a\u8fc7\u7a0b\u8017\u8d39\u65f6\u95f4 500000 \u6beb\u79d2\uff0c\u8fd9\u5bf9\u7528\u6237\u6765\u8bf4\u7b80\u76f4\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002\\n### \u7f51\u7edc\u5e26\u5bbd\u5360\u7528\\n\u5c06\u5de5\u5177\u590d\u5236\u5230\u5bb9\u5668\uff0c\u81f3\u5c11\u9700\u8981\u8c03\u7528 kubernetes api 5000\u6b21\uff0c\u5047\u8bbe\u4e00\u4e2a\u53ef\u6267\u6587\u4ef6\u5927\u5c0f 5MB , 5000 \u6b21\u9700\u8981\u5360\u7528\u603b\u5e26\u5bbd\u6d41\u91cf 5000x5=25000MB \uff0c\u5bf9 IO \u5f71\u54cd\u7b80\u76f4\u5c31\u662f\u707e\u96be\u7ea7\u522b\u7684\uff1b\\n### \u517c\u5bb9\u6027\u95ee\u9898\\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u901a\u8fc7\u5c42\u5c42\u8003\u9a8c\uff0c\u5df2\u7ecf\u5de5\u5177\u5c06\u5de5\u5177\u590d\u5236\u8fdb\u53bb\uff0c\u5f53\u5de5\u5177\u672c\u8eab\u4f9d\u8d56\u4e86\u4f9d\u8d56\u4e00\u4e9b\u547d\u4ee4\uff0c\u6bd4\u5982\u7f51\u7edc\uff08tc\uff09\u3001\u78c1\u76d8\uff08dd\uff09\u7b49\u5bb9\u5668\u4e2d\u53c8\u6ca1\u6709\u8fd9\u4e9b\u547d\u4ee4\uff0c\u6216\u8005\u7248\u672c\u4e0d\u517c\u5bb9\u8be5\u5982\u4f55\u5904\u7406\uff1f\\n### \u53ea\u8bfb pod\\n\u5bf9\u4e8e\u914d\u7f6e\u4e86\u53ea\u8bfb\u6587\u4ef6\u7cfb\u7edf\u7684 pod\uff0c\u6587\u4ef6\u662f\u4e0d\u53ef\u5199\u5165\u7684\uff0c\u56e0\u6b64\u538b\u6839\u5c31\u6ca1\u53d1\u5c06\u5de5\u5177\u590d\u5236\u8fdb\u53bb\\n### \u4fb5\u5165\u578b\\n\u5c06\u5de5\u5177\u7559\u5728\u4e1a\u52a1\u5bb9\u5668\u5185\u90e8\uff0c\u7b49\u540c\u4e8e\u5c06\u5de5\u5177\u751f\u547d\u5468\u671f\u4e0e\u5bb9\u5668\u7ed1\u5b9a\u5728\u4e00\u8d77\uff1b\\n## \u4f18\u5316\u8fc7\u7a0b\\n\u5728\u6700\u521d\u7248\u672c\u7684\u8fed\u4ee3\u8fc7\u7a0b\u6211\u4eec\u505a\u8fc7\u5f88\u591a\u4f18\u5316\uff0c\u540c\u6b65\u8f6c\u5f02\u6b65\u3001\u5305\u7626\u8eab\u3001\u6309\u9700\u590d\u5236\u7b49\u7b49\u4f18\u5316\u65b9\u6848\uff0c\u867d\u7136\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u63d0\u9ad8\u4e86\u6ce8\u5165\u7684\u6548\u7387\uff0c\u4f46\u662f\u6ca1\u6709\u89e3\u51b3\u95ee\u9898\u7684\u672c\u8d28\uff0c\u8fd8\u662f\u53d7\u9650\u4e8e\u4e3b\u673a\u7684 IO \u6027\u80fd\uff1b\\n\u65e0\u8bba\u662f\u540c\u6b65\u8f6c\u5f02\u6b65\u3001\u5305\u7626\u8eab\u3001\u6309\u9700\u590d\u5236\u7b49\u4f18\u5316\u65b9\u6848\uff0c\u672c\u8d28\u6ca1\u6cd5\u89e3\u51b3\u5de5\u5177\u590d\u5236\u5e26\u6765\u7684\u4e00\u4e9b\u95ee\u9898\uff1b\u7f8a\u6bdb\u51fa\u5728\u7f8a\u8eab\u4e0a\uff0c\u89e3\u51b3\u95ee\u9898\u5c31\u5f97\u89e3\u51b3\u95ee\u9898\u7684\u672c\u8d28\uff0c\u4ece Linux \u865a\u62df\u5316\u6280\u672f\u7684\u89d2\u5ea6\u601d\u8003\uff0c\u5982\u4f55\u4e0d\u590d\u5236\u5de5\u5177\u5c31\u5728\u80fd\u5bb9\u5668\u4e2d\u6ce8\u5165\u6545\u969c\u5462\uff1f\\n### Linux \u865a\u62df\u5316\\n\u5bf9\u4e8e Linux \u865a\u62df\u5316\u6280\u672f\u800c\u8a00\uff0c\u6838\u5fc3\u5b9e\u73b0\u539f\u7406\u5c31\u662f Linux Namespace \u7684\u9694\u79bb\u80fd\u529b\u3001Linux Cgroups \u7684\u9650\u5236\u80fd\u529b\uff0c\u4ee5\u53ca\u57fa\u4e8e rootfs \u7684\u6587\u4ef6\u7cfb\u7edf\uff1b\\nLinux Namespace \u53ef\u4ee5\u8ba9\u8fdb\u7a0b\uff08\u5bb9\u5668\uff09\u5904\u5728\u4e00\u4e2a\u72ec\u7acb\u7684\u6c99\u7bb1\u73af\u5883\uff0cLinux Cgroups \u53ef\u4ee5\u9650\u5236\u8be5\u6c99\u7bb1\u5185\u8fdb\u7a0b\u7684\u8d44\u6e90\u4f7f\u7528\uff0c\u6bd4\u5982\u9650\u5236 CPU\u3001\u5185\u5b58\u7684\u4f7f\u7528\u7387\u7b49\u7b49\uff1b\\n#### Linux Cgroups\\nLinux Cgroups  \u53ef\u4ee5\u9650\u5236\u6c99\u7bb1\u5185\u8fdb\u7a0b\u7684\u8d44\u6e90\u4f7f\u7528\uff0c\u5e76\u4e14\u4e5f\u53ef\u4ee5\u4eba\u4e3a\u5c06\u67d0\u4e2a\u8fdb\u7a0b\u7684\u8d44\u6e90\u4f7f\u7528\u4ea4\u7ed9\u5df2\u7ecf\u5b58\u5728\u7684\u67d0\u4e2a\u7684 Linux Cgroups \u63a7\u5236\uff0c\u800c\u901a\u5e38\u5bb9\u5668\u7684\u8d44\u6e90\u4f7f\u7528\u7387\u7edf\u8ba1\u4e5f\u662f Linux Cgroups \u63a7\u5236\u7ec4\u4e0b\u9762\u8fdb\u7a0b\u7684\u4f7f\u7528\u60c5\u51b5\u8ba1\u7b97\u51fa\u6765\u7684\uff1b\u6b64\u65f6\u5728\u5bbf\u4e3b\u673a\u542f\u52a8\u7684\u4e00\u4e2a CPU \u8d1f\u8f7d\u7684\u8fdb\u7a0b\uff0c\u5e76\u4e14\u5c06\u8be5\u8fdb\u7a0b\u4ea4\u7ed9\u67d0\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bb9\u5668\u7684\u63a7\u5236\u7ec4\u63a7\u5236\uff0c\u5c31\u76f8\u5f53\u4e8e\u7ed9\u8be5\u5bb9\u5668\u6ce8\u5165\u4e86 CPU \u8d1f\u8f7d\u573a\u666f\u3002\\n\u5728  docker \u4e0a\u9762\u5c1d\u8bd5\u5728\u4e0d\u4fb5\u5165\u8be5\u5bb9\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u7ed9\u5bb9\u5668 nginx \u6ce8\u5165 CPU \u8d1f\u8f7d\u7684\u573a\u666f\u3002\u9996\u5148\u542f\u52a8\u4e00\u4e2a nginx \u5bb9\u5668 `docker run -it -d -p 8087:80 --cpus 0 --name nginx nginx`\uff0c\u5bb9\u5668\u542f\u52a8\u540e docker \u4f1a\u7ed9\u8be5\u5bb9\u5668\u65b0\u5efa\u4e00\u4e2a Cgroups  \u63a7\u5236\u7ec4\uff0c\u5728\u8be5\u547d\u4ee4\u4e2d\u4f1a\u9650\u5236\u8be5\u5bb9\u5668\u53ea\u80fd\u4f7f\u7528\u4e00\u4e2a\u6838\u5fc3\u7684 CPU \u3002\\n\\n1. \u627e\u5230\u5bb9\u5668\u7684\u8fdb\u7a0b PID\uff0c\u8be5\u8fdb\u7a0b\u662f\u5bb9\u5668\u542f\u52a8\u65f6\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\\n```bash\\ndocker inspect --format \\"{{.State.Pid}}\\" nginx\\n```\\n\\n2. \u67e5\u770b\u8fdb\u7a0b\u7684 Cgroups \u63a7\u5236\u7ec4\uff0c\u53ef\u4ee5\u770b\u5230\u6709 CPU\u3001\u5185\u5b58\u3001blkio \u7b49\u7b49\u5f88\u591a Cgroup \u5b50\u7cfb\u7edf\\n```bash\\ncat /proc/$(docker inspect --format \\"{{.State.Pid}}\\" nginx)/cgroup\\n\\n11:devices:/docker/4bcf3de8de2904b3308d8fc8dbdf6155cad7763fa108a32e538402156b6eacaa\\n10:blkio:/docker/4bcf3de8de2904b3308d8fc8dbdf6155cad7763fa108a32e538402156b6eacaa\\n9:pids:/docker/4bcf3de8de2904b3308d8fc8dbdf6155cad7763fa108a32e538402156b6eacaa\\n8:memory:/docker/4bcf3de8de2904b3308d8fc8dbdf6155cad7763fa108a32e538402156b6eacaa\\n7:freezer:/docker/4bcf3de8de2904b3308d8fc8dbdf6155cad7763fa108a32e538402156b6eacaa\\n6:perf_event:/docker/4bcf3de8de2904b3308d8fc8dbdf6155cad7763fa108a32e538402156b6eacaa\\n5:cpuset:/docker/4bcf3de8de2904b3308d8fc8dbdf6155cad7763fa108a32e538402156b6eacaa\\n4:hugetlb:/docker/4bcf3de8de2904b3308d8fc8dbdf6155cad7763fa108a32e538402156b6eacaa\\n3:cpuacct,cpu:/docker/4bcf3de8de2904b3308d8fc8dbdf6155cad7763fa108a32e538402156b6eacaa\\n2:net_prio,net_cls:/docker/4bcf3de8de2904b3308d8fc8dbdf6155cad7763fa108a32e538402156b6eacaa\\n1:name=systemd:/docker/4bcf3de8de2904b3308d8fc8dbdf6155cad7763fa108a32e538402156b6eacaa\\n```\\n\\n3. \u67e5\u770b CPU \u63a7\u5236\u7ec4\u8fdb\u7a0b\u5217\u8868\uff0c\u53ef\u4ee5\u6709\u5f88\u591a\u8fdb\u7a0b\u53d7\u8be5\u5bb9\u5668 Cgroup CPU \u5b50\u7cfb\u7edf\u63a7\u5236\uff1b\u6309\u7167\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u53ea\u9700\u8981\u542f\u52a8\u4e00\u4e2a CPU \u8d1f\u8f7d\u8fdb\u7a0b\uff0c\u5e76\u4e14\u5c06\u8fdb\u7a0b PID \u5199\u5165\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5c31\u53ef\u4ee5\u505a\u5230\u5bb9\u5668 CPU \u6ce8\u5165\uff1b\\n```bash\\ncat /sys/fs/cgroup/cpu$(cat /proc/$(docker inspect --format \\"{{.State.Pid}}\\" nginx)/cgroup | head -n 1 | awk -F \':\' \'{print $3}\')/tas\\nks\\n\\n7921\\n7980\\n7981\\n7982\\n7983\\n```\\n\\n3. CPU \u8d1f\u8f7d\u811a\u672c\\n```bash\\n#! /bin/bash\\n\\nwhile [ 1 ]\\ndo\\n        echo \\"\\" > /dev/null\\ndone\\n```\\n\\n4. \u6267\u884c CPU \u8d1f\u8f7d\u811a\u672c\u540e\u627e\u5230 PID \uff0c\u5c06\u8fdb\u7a0b\u5199\u5165\u5bb9\u5668\u8fdb\u7a0b\u5217\u8868\u6587\u4ef6\\n```bash\\necho PID >> /sys/fs/cgroup/cpu$(cat /proc/$(docker inspect --format \\"{{.State.Pid}}\\" nginx)/cgroup | head -n 1 | awk -F \':\' \'{print $3}\')/tas\\nks\\n```\\n\\n5. \u6b64\u65f6\u53ef\u4ee5\u89c2\u5bdf\u5230\u5bb9\u5668 CPU \u8fbe\u5230 100%\uff0c\u800c\u5bbf\u4e3b\u673a\u672a\u8fbe\u5230\uff0c\u8bf4\u660e CPU \u8d1f\u8f7d\u53ea\u5bf9\u5bb9\u5668\u4ea7\u751f\u4e86\u6548\u679c\uff0c\u8fd0\u7528\u540c\u6837\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u505a\u5230\u8d44\u6e90\u5360\u7528\u578b\u7684\u4efb\u4f55\u6545\u969c\u573a\u666f\uff0c\u6bd4\u5982\u5185\u5b58\u3001IO \u7b49\\n\\n\u6700\u7ec8\u6210\u529f\u5728\u4e0d\u4fb5\u5165\u8be5\u5bb9\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u7ed9\u8be5\u5bb9\u5668\u6ce8\u5165 CPU \u8d1f\u8f7d\u7684\u573a\u666f\u3002\u901a\u8fc7 Cgroups \u63a7\u5236\u7ec4\uff0c\u8fd8\u80fd\u505a\u5230\u5176\u4ed6 Cgroups \u652f\u6301\u7684\u5b50\u7cfb\u7edf\u7684\u573a\u666f\u6ce8\u5165\uff0c\u6bd4\u5982 CPU \u9ad8\u8d1f\u8f7d\u3001\u5185\u5b58\u5360\u7528\u9ad8\u3001IO \u9ad8\u8d1f\u8f7d\u7b49\u7b49\uff1b\\n#### Linux Namespace\\n\u901a\u8fc7 Linux Cgroups \u505a\u5230\u4e86\u4e0d\u4fb5\u5165\u8be5\u5bb9\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u7ed9\u8be5\u5bb9\u5668\u6ce8\u5165 CPU \u8d1f\u8f7d\u7684\u573a\u666f\uff0c\u540c\u65f6\u4e5f\u80fd\u652f\u6301 CPU \u9ad8\u8d1f\u8f7d\u3001\u5185\u5b58\u5360\u7528\u9ad8\u3001IO \u9ad8\u8d1f\u8f7d\u7b49\u7b49\uff1b \u5bf9\u4e8e\u5176\u4ed6\u7c7b\u578b\u7684\u6545\u969c\uff0c\u6bd4\u5982\u7f51\u7edc\u5ef6\u65f6\u3001\u6587\u4ef6\u5220\u9664\u7b49\u7b49\uff0c\u5219\u9700\u8981\u901a\u8fc7\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0 \uff0c \u5c31\u662f Linux Namespace \u7684\u9694\u79bb\u80fd\u529b\u3002\\nLinux Namespace \u63d0\u4f9b\u4e86\u7f51\u7edc\u3001IPC\u3001MNT \u7b49\u547d\u540d\u7a7a\u95f4\u9694\u79bb\u7684\u80fd\u529b\uff0c\u5728\u5bb9\u5668\u72ec\u7acb\u7684 Namespace \u4e0b\uff0c\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u65b0\u542f\u52a8\u4e00\u4e2a\u8fdb\u7a0b\u7b49\u7b49\u64cd\u4f5c\u4e5f\u662f\u5176\u4ed6\u5bb9\u5668\u4e0d\u53ef\u611f\u77e5\u548c\u89c2\u6d4b\u5230\u7684\uff1b\\n\u5728  docker \u4e0a\u9762\u5c1d\u8bd5\u5728\u4e0d\u4fb5\u5165\u8be5\u5bb9\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u7ed9 nginx \u5bb9\u5668\u6ce8\u5165\u7f51\u7edc\u5ef6\u65f6\u7684\u573a\u666f\u3002\u9996\u5148\u542f\u52a8\u4e00\u4e2a nginx \u5bb9\u5668 `docker run -it -d -p 8087:80 --cpus 0 --name nginx nginx`\uff0c\u5728\u5bbf\u4e3b\u673a\u5f00\u653e\u7aef\u53e3 8080 \u4ee3\u7406\u5230\u5bb9\u5668\u5185 80  \u7aef\u53e3\uff0c \u5bb9\u5668\u542f\u52a8\u540e\u4f1a\u6709\u72ec\u7acb\u7684\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\uff0c\u76d1\u542c 80 \u7aef\u53e3\u3002\\n##### \u5bbf\u4e3b\u673a\u7f51\u7edc\u5ef6\u65f6\\nTC (TrafficControl) \u7528\u4e8eLinux\u5185\u6838\u7684\u6d41\u91cf\u63a7\u5236\uff0c\u53ef\u4ee5\u505a\u5230\u7f51\u7edc\u5ef6\u65f6\u3001\u4e22\u5305\u7b49\u7b49\uff0c\u5148\u5c1d\u8bd5\u5229\u7528 TC \u5728\u5bbf\u4e3b\u673a\u4e0a\u6ce8\u5165\u7f51\u7edc\u5ef6\u65f6\uff0c\u6bd4\u5982\u9700\u8981\u6ce8\u5165\u4e00\u4e2a\u7f51\u7edc\u5ef6\u65f6 100ms \u7684\u573a\u666f\uff0c\u5728\u5bbf\u4e3b\u673a\u4e0a\u6267\u884c\u5982\u4e0b\u547d\u4ee4\\n```bash\\n#\u5ef6\u65f6\\ntc qdisc add dev eth0 root netem delay 100ms\\n```\\n\u6b64\u65f6\u5728\u5ba2\u6237\u7aef\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee `http://IP:8087` \u4f1a\u67e5\u770b\u5230\u6709\u7a33\u5b9a 100ms \u7684\u5ef6\u65f6\uff0c\u800c\u4ed4\u7ec6\u89c2\u6d4b\u540e\u4f1a\u53d1\u73b0\u5176\u4ed6\u7aef\u53e3\u4e5f\u4f1a\u6709\u5ef6\u65f6\uff0c\u6bd4\u5982 22\u30013306 \u7b49\u7b49\uff1b\uff08\u6ce8\u610f\uff0c\u53ea\u80fd\u5728\u522b\u7684\u5ba2\u6237\u7aef\u673a\u5668\u8bbf\u95ee\uff0c\u4e0d\u80fd\u5728\u76f4\u63a5\u5728\u5f53\u524d\u673a\u5668\u901a\u8fc7 `curl http://127.0.0.1:8087` \u9a8c\u8bc1\uff09\\n```bash\\n#\\t\u6062\u590d\\ntc qdisc del dev eth0 root\\n```\\n##### \u5bb9\u5668\u5185\u7f51\u7edc\u5ef6\u65f6\\n\u5982\u4f55\u5728\u5bb9\u5668\u4e2d\u6ce8\u5165\u4e00\u4e2a\u7f51\u7edc\u5ef6\u65f6\u5462\uff1f\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff0cLinux \u63d0\u4f9b\u4e86 setns() \u51fd\u6570\uff0c\u53ef\u4ee5\u65b9\u4fbf\u8fdb\u5165\u6307\u5b9a\u8fdb\u7a0b\u6240\u5728\u547d\u540d\u7a7a\u95f4\uff1b\u5982\u679c\u6ce8\u5165\u7f51\u7edc\u5ef6\u65f6\uff0c\u53ea\u9700\u8981\u8fdb\u5165\u76ee\u6807\u5bb9\u5668\u7684\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\u5373\u53ef\uff1b\\n\\n1. \u627e\u5230\u5bb9\u5668\u7684\u8fdb\u7a0b\\n```bash\\ndocker inspect --format \\"{{.State.Pid}}\\" nginx\\n```\\n\\n2. \u8fdb\u5165\u5bb9\u5668\u6240\u5728\u547d\u540d\u7a7a\u95f4\uff0cnsenter \u547d\u4ee4\u6700\u7ec8\u4f1a\u8c03\u7528 setns() \u51fd\u6570\uff0c\u5982\u679c\u6ca1\u6709\u6b64\u547d\u4ee4\uff0c\u9700\u8981\u5b89\u88c5 util-linux \u5305\\n```bash\\nnsenter -t 7921 -n\\n```\\n\\n3. \u6b64\u65f6\u67e5\u770b IP \u76f8\u5173\u4fe1\u606f\uff0c\u8fd4\u56de\u7684\u5219\u662f\u5bb9\u5668\u5185 IP \u76f8\u5173\u4fe1\u606f\\n```bash\\n$ ip addr\\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\\n    inet 127.0.0.1/8 scope host lo\\n       valid_lft forever preferred_lft forever\\n124: eth0@if125: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default\\n    link/ether 02:42:ac:11:00:13 brd ff:ff:ff:ff:ff:ff link-netnsid 0\\n    inet 172.17.0.19/16 brd 172.17.255.255 scope global eth0\\n       valid_lft forever preferred_lft forever\\n```\\n\\n4. \u6ce8\u5165\u7f51\u7edc\u5ef6\u65f6\u4e5f\u53ea\u4f1a\u5bf9\u5bb9\u5668\u751f\u6548\\n```bash\\ntc qdisc add dev eth0 root netem delay 100ms\\n```\\n\u6b64\u65f6\u5728\u5ba2\u6237\u7aef\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee `http://IP:8087` \u4f1a\u67e5\u770b\u5230\u6709\u7a33\u5b9a 100ms \u7684\u5ef6\u65f6\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u5bf9\u5176\u4ed6\u7aef\u53e3\u751f\u6548\uff0c\u6bd4\u5982 22\u30013306 \u7b49\u7b49\uff1b\u56e0\u4e3a\u5b9e\u9645\u5ef6\u65f6\u672c\u8eab\u662f\u4f5c\u7528\u5728\u5bb9\u5668\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\u5185\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5bf9\u5bbf\u4e3b\u673a\u751f\u6548\u3002\\n\u6700\u7ec8\u6210\u529f\u5728\u4e0d\u4fb5\u5165\u8be5\u5bb9\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u7ed9\u8be5\u5bb9\u5668\u6ce8\u5165\u7f51\u7edc\u5ef6\u65f6\u7684\u6545\u969c\u573a\u666f\u3002Linux \u63d0\u4f9b\u4e86\u5f88\u591a\u7ef4\u5ea6\u7684\u547d\u540d\u7a7a\u95f4\u9694\u79bb\uff0c\u5e76\u4e14\u5141\u8bb8\u52a0\u5165\u4efb\u4f55\u7c7b\u578b\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u901a\u8fc7 Linux Namespace \uff0c\u8fd8\u80fd\u505a\u5230\u6587\u4ef6\u5220\u9664\u3001\u6740\u8fdb\u7a0b\u7b49\u7b49\u573a\u666f\\n### chaosblade \u5b9e\u73b0\\n\u5728  Chaosblade 1.6.x \u7248\u672c\u5df2\u7ecf\u901a\u8fc7 Linux Namespace \u7684\u9694\u79bb\u80fd\u529b\u3001Linux Cgroups \u7684\u9650\u5236\u80fd\u529b\u5b9e\u73b0\u5bb9\u5668\u5316\u6545\u969c\u6ce8\u5165\uff0cchaosblade-operator \u4e3b\u8981\u8d1f\u8d23\u76d1\u542c crd \u8d44\u6e90\u72b6\u6001\u53d8\u66f4\uff0cchaosblade-operator  \u4e0d\u518d\u53bb\u6267\u884c\u6545\u969c\u6ce8\u5165\u7684\u64cd\u4f5c\uff0c\u800c\u662f\u7531\u4f5c\u4e3a dasemonset \u7c7b\u578b\u8d44\u6e90\u7684 chaosblade-tool \u4e3b\u8981\u8d1f\u8d23\u771f\u6b63\u5730\u6ce8\u5165\u6545\u969c\uff0c\u6574\u4f53\u5b9e\u73b0\u65b9\u6848\u5165\u4e0b\u56fe\uff1a\\n\\n![image.png](/img/2022-11-01-chaosblade-operator/current_chaosblade_operator.png)\\n\\n\u540c\u7406\u53ef\u4ee5\u770b\u5230\u5de6\u8fb9\u7684 yaml \u5b9a\u4e49\u5c31\u662f Chaosblade \u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u5b9a\u4e49\uff0c\u4e5f\u662f blade \u8d44\u6e90\u5b9e\u4f8b\u7684\u4e00\u90e8\u5206\u4fe1\u606f\uff0c\u5f53 blade \u8d44\u6e90\u901a\u8fc7 kubectl apply \u4ee5\u540e\uff0cchaosblade-operator \u4f1a\u76d1\u542c\u5230\u8d44\u6e90\u7684\u521b\u5efa\uff0c\u540c\u65f6\u89e3\u6790\u5230\u5b9e\u9a8c\u5b9a\u4e49\uff1b\\n\u5f53\u89e3\u6790\u5230 scope = node \u7684\u65f6\u5019\uff0c\u4f1a\u627e\u5230 node \u8282\u70b9\u6240\u5728 chaosblade-tool pod \u4e2d\u6267\u884c\u547d\u4ee4\uff0c\u8fd9\u4e9b\u52a8\u4f5c\u51e0\u4e4e\u5bf9\u6574\u4e2a\u96c6\u7fa4\u6765\u8bf4\u8d44\u6e90\u6d88\u8017\u4e5f\u662f\u6781\u5c11\u7684\uff0c\u8fd9\u90e8\u5206\u548c\u65e9\u671f\u7248\u672c\u51e0\u4e4e\u662f\u6ca1\u6709\u4efb\u4f55\u533a\u522b\u7684\uff1b\\n\u4f46\u662f\u5f53\u89e3\u6790\u5230 scope = pod \u6216\u8005  scope = container  \u7684\u65f6\u5019\uff0c chaosblade-operator \u5e76\u4e0d\u4f1a\u628a chaosblade cli \u5de5\u5177\u672c\u8eab\u590d\u5236\u5230\u4e1a\u52a1\u5bb9\u5668\u5185\u90e8\uff0c\u66f4\u4e0d\u4f1a\u53bb\u5bb9\u5668\u91cc\u9762\u6267\u884c\u76f8\u5173\u547d\u4ee4\uff0c\u6781\u5927\u5730\u51cf\u5c11\u4e86\u5bf9 kubernetes API \u7684\u4f9d\u8d56\uff1b\u90a3\u4e48 chaosblade-operator \u7a76\u7adf\u662f\u600e\u4e48\u505a\u7684\u5462\uff1f chaosblade-operator \u4ec5\u4ec5\u901a\u8fc7 kubernetes API  \u627e\u5230\u5b9e\u9a8c\u5bf9\u8c61\uff0c\u5373\u76ee\u6807\u4e1a\u52a1 pod\uff0c\u7136\u540e\u7ee7\u7eed\u627e\u5230\u76ee\u6807\u4e1a\u52a1 pod \u6240\u5728\u7684\u8282\u70b9\u4e0a\u90e8\u7f72\u7684 chaosblade-tool pod \uff0c\u89e3\u6790 pod \u91cc\u9762\u7684\u5bb9\u5668\u540d\u79f0\uff0c\u6700\u540e\u5c01\u88c5\u547d\u4ee4\u76f4\u63a5\u5728 chaosblade-tool \u6267\u884c\u547d\u4ee4\uff0c\u53bb\u771f\u6b63\u5730\u6267\u884c\u6545\u969c\u6ce8\u5165\uff1b\u5728 chaosblade-tool \u5c42\u6ce8\u5165\u6545\u969c\u7684\u65f6\u5019\u5df2\u7ecf\u6ca1\u6709 pod \u7684\u6982\u5ff5\uff0c\u8fd9\u4e00\u5c42\u662f  chaosblade-operator \u53bb\u89e3\u6790\u548c\u5c01\u88c5\u7684\uff1b\\n\u4e3a\u4f55\u5728\u76ee\u6807\u4e1a\u52a1 pod \u6240\u5728\u7684\u8282\u70b9\u4e0a\u90e8\u7f72\u7684 chaosblade-tool \u6267\u884c\u547d\u4ee4\uff0c\u80fd\u591f\u76f4\u63a5\u5bf9\u76ee\u6807\u4e1a\u52a1 pod \u751f\u6548\u5462\uff1f\u5982\u679c\u4f60\u4ed4\u7ec6\u9605\u8bfb\u4e86\u4e4b\u524d **Linux \u865a\u62df\u5316 **\u7ae0\u8282\uff0c\u76f8\u4fe1\u4f60\u5df2\u7ecf\u6709\u4e86\u7b54\u6848\uff1bchaosblade-tool \u4f5c\u4e3a daemonset \u8d44\u6e90\uff0c\u62e5\u6709\u5bbf\u4e3b\u673a PID \u547d\u4ee4\u7a7a\u95f4\u5207\u6362\u7684\u80fd\u529b\uff0c\u540c\u65f6\u5728\u8d44\u6e90\u5b9a\u4e49\u65f6\u4e5f\u5df2\u7ecf\u5c06\u5bbf\u4e3b\u673a `/sys/fs` \u76ee\u5f55\u6302\u8f7d\u8fdb chaosblade-tool  pod\uff0c\u4f7f\u5f97 chaosblade-tool  \u80fd\u591f\u81ea\u7531\u66f4\u6539\u8fdb\u7a0b\u7684 cgroups \u63a7\u5236\u7ec4\uff1b\u6240\u4ee5 chaosblade-tool \u53ef\u4ee5\u5bf9\u8be5\u5bbf\u4e3b\u673a\u4e0a\u4efb\u610f\u5bb9\u5668\u6ce8\u5165\u6545\u969c\uff0c\u5c06 chaosblade-operator  \u7684\u4e00\u90e8\u5206\u5de5\u4f5c\u5265\u79bb\u4e86\u51fa\u6765\uff0c\u4f7f\u7528 chaosblade-operator  \u7684\u804c\u8d23\u66f4\u7b80\u5355\u4e14\u8f7b\u91cf\u7ea7\uff0c\u7b26\u5408\u6700\u521d\u7684\u8bbe\u8ba1\u7406\u8bba\uff1b\\nChaosblade-tool  \u901a\u8fc7 Linux Namespace \u7684\u9694\u79bb\u80fd\u529b\u3001Linux Cgroups \u7684\u9650\u5236\u80fd\u529b\u5b9e\u73b0\u5bb9\u5668\u5316\u6545\u969c\u6ce8\u5165\uff0c\u4e0d\u8bba\u662f\u6027\u80fd\u3001\u517c\u5bb9\u6027\u3001\u7a33\u5b9a\u6027\u90fd\u6709\u6781\u5927\u7684\u63d0\u5347\uff1b\u56e0\u4e3a\u5927\u90e8\u5206\u573a\u666f\u662f\u53ef\u4ee5\u76f4\u63a5 chaosblade-tool \u6267\u884c\u7684\uff0c\u53ea\u8981\u4fdd\u8bc1  chaosblade-tool  \u5bb9\u5668\u4f9d\u8d56\u5e93\u7248\u672c\u548c\u547d\u4ee4\u80fd\u591f\u652f\u6301\u6f14\u7ec3\uff0c\u5c31\u4e0d\u4f1a\u5b58\u5728\u517c\u5bb9\u6027\u3001\u7a33\u5b9a\u6027\u7b49\u95ee\u9898\uff1b\u5c31\u597d\u6bd4\u5728\u65e9\u8d77\u7684\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u751a\u81f3\u9700\u8981\u8003\u8651\u76ee\u6807\u4e1a\u52a1\u5bb9\u5668\u4e2d\u6ca1\u6709 dd\u3001tc \u547d\u4ee4\u600e\u4e48\u529e\uff0c\u6216\u8005 dd \u7248\u672c\u547d\u4ee4\u4e0d\u517c\u5bb9\u53c8\u600e\u4e48\u529e\u7b49\u7b49\u95ee\u9898\u3002\\n\u65e0\u8bba kubernetes \u4f7f\u7528 docker\u3001contained\u3001crio \u6216\u8005\u5176\u4ed6\u5bb9\u5668\u8fd0\u884c\u65f6\u76f8\u5173\u6280\u672f\uff0cChaosblade \u90fd\u80fd\u505a\u5230\u5feb\u901f\u517c\u5bb9\uff0c\u56e0\u4e3a Chaosblade \u901a\u8fc7 Linux Namespace \u7684\u9694\u79bb\u80fd\u529b\u3001Linux Cgroups \u7684\u9650\u5236\u80fd\u529b\u5b9e\u73b0\u5bb9\u5668\u5316\u6545\u969c\u6ce8\u5165\uff0c\u5bf9\u5bb9\u5668\u8fd0\u884c\u65f6\u76f8\u5173\u7684 API \u4f9d\u8d56\u5e76\u4e0d\u5927\uff0c\u53ea\u9700\u8981\u627e\u5230\u5bb9\u5668 1 \u53f7\u8fdb\u7a0b\u5373\u53ef\uff1b\\n#### \u573a\u666f\u5206\u6790\\n\u9996\u5148\u5148\u4ece chaosblade \u652f\u6301\u7684\u6545\u969c\u573a\u666f\u51fa\u53d1\uff0c\u57fa\u4e8e\u8fdb\u7a0b\u7ef4\u5ea6\u6545\u969c\u6ce8\u5165\u7684\u65b9\u5f0f\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff1a**\u8d44\u6e90\u5360\u7528\u548c\u72b6\u6001\u53d8\u66f4\uff1b**\\n**\u8d44\u6e90\u5360\u7528 **\u6ce8\u5165\u7684\u65b9\u5f0f\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u901a\u8fc7\u8fd0\u884c\u53ef\u6301\u7eed\u5360\u7528\u8d44\u6e90\u7684\u8fdb\u7a0b\uff0c\u5e76\u4e14\u4fdd\u8bc1\u8fdb\u7a0b\u7684\u6301\u7eed\u8fd0\u884c\uff0c\u6765\u8fbe\u5230\u5360\u7528\u7cfb\u7edf\u8d44\u6e90\u7684\u76ee\u7684\uff0c\u901a\u5e38\u6709 CPU \u6ee1\u8f7d\u3001\u5185\u5b58\u6ee1\u8f7d\u3001\u78c1\u76d8IO\u8d1f\u8f7d\u3001\u7aef\u53e3\u5360\u7528 \u7b49\uff1b\\n**\u72b6\u6001\u53d8\u66f4 **\u6ce8\u5165\u7684\u65b9\u5f0f\u53ef\u80fd\u4e0d\u662f\u90a3\u4e48\u8d34\u5207\uff0c\u6b64\u201c\u72b6\u6001\u201d\u53ef\u4ee5\u7406\u89e3\u4e3a\u78c1\u76d8\u53ef\u7528\u5927\u5c0f\u3001\u6587\u4ef6\u6743\u9650\u3001pod \u72b6\u6001\u7b49\u7b49\uff0c\u5b9e\u73b0\u8fd9\u79cd\u7c7b\u578b\u7684\u6545\u969c\u6ce8\u5165\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u8fd0\u884c\u4e00\u4e2a\u8fdb\u7a0b\u6765\u6253\u5305\u4fee\u8be5\u76ee\u6807\u8d44\u6e90\u7684\u72b6\u6001\u5373\u53ef\uff0c\u5f53\u7136\u3010\u72b6\u6001\u53d8\u66f4\u3011\u7684\u65b9\u5f0f\u4e5f\u6709\u53ef\u80fd\u8fdb\u7a0b\u9700\u8981\u8fd0\u884c\u5f88\u957f\u65f6\u95f4\u6765\u5b8c\u6210\uff0c\u4e0e\u3010\u8d44\u6e90\u5360\u7528\u3011\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u9700\u8981\u4e00\u4e2a\u7ec8\u6001\u6765\u5b8c\u6210\u6545\u969c\u7684\u6ce8\u5165\uff0c\u5373\u8fdb\u7a0b\u6267\u884c\u6210\u529f\uff0c\u800c\u4e0d\u662f\u9700\u8981\u4fdd\u8bc1\u8fdb\u7a0b\u7684\u6301\u7eed\u8fd0\u884c\u3002\\n\u5c06 chaosblade \u652f\u6301\u7684\u6545\u969c\u573a\u666f\u5206\u7c7b\uff0c\u5f97\u5230\u5982\u4e0b\u8868\u683c\uff1a\\n\\n| \u573a\u666f | \u5206\u7c7b | \u662f\u5426\u52a0\u5165 Cgroup \u63a7\u5236 | \u9700\u8981\u8fdb\u5165\u7684\u547d\u540d\u7a7a\u95f4 |\\n| --- | --- | --- | --- |\\n| CPU | **\u8d44\u6e90\u5360\u7528** | \u662f | PID |\\n| \u5185\u5b58 | **\u8d44\u6e90\u5360\u7528** | \u662f | PID |\\n| \u78c1\u76d8IO | **\u8d44\u6e90\u5360\u7528** | \u662f | PID |\\n| \u78c1\u76d8\u5bb9\u91cf | \u72b6\u6001\u53d8\u66f4 | \u5426 | MNT |\\n| \u6740\u8fdb\u7a0b | \u72b6\u6001\u53d8\u66f4 | \u5426 | PID |\\n| \u7f51\u7edc\u5ef6\u65f6\u3001\u4e22\u5305\u3001\u4e71\u5e8f\uff08\u4e3b\u8981 tc \u5b9e\u73b0\u7684\u573a\u666f\uff09 | \u72b6\u6001\u53d8\u66f4 | \u5426 | NET |\\n| \u7f51\u7edc\u7aef\u53e3\u5360\u7528 | **\u8d44\u6e90\u5360\u7528** | \u5426 | NET |\\n| \u6587\u4ef6\u573a\u666f | \u72b6\u6001\u53d8\u66f4 | \u5426 | MNT |\\n\\n\u5728\u8d44\u6e90\u5360\u7528\u7684\u6545\u969c\u6ce8\u5165\u6a21\u5f0f\u4e0b\uff0c\u9700\u8981\u5224\u65ad\u8d44\u6e90\u662f\u5426\u662f\u5bbf\u4e3b\u673a\u7ea7\u522b\u5171\u4eab\u7684\uff0c\u5e76\u4e14\u662f Linux Cgroups \u5df2\u7ecf\u652f\u6301\u7684\u5b50\u7cfb\u7edf\uff0c\u6bd4\u5982 CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8IO \u7b49\u7b49\uff0c\u53ea\u9700\u8981\u8fdb\u5165\u76ee\u6807\u5bb9\u5668\u8fdb\u7a0b\u7684 PID \u547d\u4ee4\u7a7a\u95f4\uff0c\u7136\u540e\u52a0\u5165\u76ee\u6807\u5bb9\u5668\u8fdb\u7a0b\u63a7\u5236\u7ec4\u5373\u5b9e\u73b0\u6545\u969c\u6ce8\u5165\uff1b\u4e5f\u6709\u6bd4\u8f83\u7279\u522b\u7684\uff0c\u6bd4\u5982\u7f51\u7edc\u7aef\u53e3\u5360\u7528\uff0c\u867d\u7136\u5b83\u88ab\u5217\u4e3a\u5c5e\u4e8e\u8d44\u6e90\u5360\u7528\u7684\u6545\u969c\u6ce8\u5165\u6a21\u5f0f\uff0c\u4f46\u662f\u7aef\u53e3\u662f\u72ec\u7acb\u547d\u540d\u7a7a\u95f4\u5185\u5171\u4eab\u7684\u8d44\u6e90\uff0c\u6240\u4ee5\u4ed6\u662f\u9700\u8981\u901a\u8fc7 NET \u547d\u540d\u7a7a\u95f4\u5207\u6362\u624d\u80fd\u5b9e\u73b0\u7684\u3002\\n\u5728\u72b6\u6001\u53d8\u66f4\u7684\u6545\u969c\u6ce8\u5165\u6a21\u5f0f\u4e0b\uff0c\u901a\u8fc7\u9700\u8981\u6839\u636e\u5177\u4f53\u573a\u666f\uff0c\u8fdb\u5165\u76ee\u6807\u5bb9\u5668\u8fdb\u7a0b\u7684\u547d\u540d\u7a7a\u95f4\u53bb\u505a\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6bd4\u5982\u7f51\u7edc\u573a\u666f\uff0c\u9700\u8981\u8fdb\u5165 NET Namespace\uff1b\u6587\u4ef6\u573a\u666f\u9700\u8981\u8fdb\u5165 MNT Namespace \u7b49\u7b49\u3002\\n\u5728 chaosblade-1.6.x \u7248\u672c\u4e0b\uff0c\u4e5f\u5df2\u7ecf\u63d0\u4f9b\u547d\u540d\u7a7a\u95f4\u5207\u6362\u7684\u5b9e\u73b0\uff0c\u6bd4\u5982\u8fdb\u5165\u5bb9\u5668\uff08\u8fdb\u7a0b PID \u662f 35941\uff09\u547d\u540d\u7a7a\u95f4\u6267\u884c ls \u547d\u4ee4\uff1a\\n![image.png](/img/2022-11-01-chaosblade-operator/chaosblade_nsexec.png)\\n\u7ed3\u5408\u573a\u666f\u7684\u6ce8\u5165\u6a21\u5f0f\u4ee5\u53ca Linux Namespace \u7684\u9694\u79bb\u80fd\u529b\u3001Linux Cgroups \u7684\u9650\u5236\u80fd\u529b\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u80fd\u5206\u6790\u51fa\u573a\u666f\u5e94\u8be5\u901a\u8fc7\u4ec0\u4e48\u6837\u7684\u65b9\u5f0f\u5728\u5bb9\u5668\u6ce8\u5165\u6545\u969c\uff1b\\n## \u5927\u89c4\u6a21\u5e94\u7528\u6f14\u7ec3\\n\u5728 Chaosblade 1.6.x \u7248\u672c\u5df2\u7ecf\u901a\u8fc7 Linux Namespace \u7684\u9694\u79bb\u80fd\u529b\u3001Linux Cgroups \u7684\u9650\u5236\u80fd\u529b\u5b9e\u73b0\u5bb9\u5668\u5316\u6545\u969c\u6ce8\u5165\uff0c\u76f8\u6bd4\u901a\u8fc7\u5de5\u5177\u590d\u5236\u7684\u65b9\u5f0f\uff0c\u6548\u7387\u63d0\u5347\u663e\u8457\u3001\u517c\u5bb9\u6027\u66f4\u5f3a\u3001\u800c\u4e14\u65e0\u4fb5\u5165\u3002\\n\u5728\u6b64\u7ae0\u8282\u901a\u8fc7\u5b9e\u9645\u573a\u666f\u6765\u89c2\u6d4b chaosblade-operator \u65e9\u671f\u7248\u672c\u548c Chaosblade chaosblade-operator 1.6.x \u7248\u672c\u7684\u6ce8\u5165\u6027\u80fd\u548c\u8d44\u6e90\u6d88\u8017\u60c5\u51b5\u3002\\n### \u5b9e\u9a8c\u6848\u4f8b\\n\u5206\u522b\u5728 kubernetes \u90e8\u7f72  chaosblade-operator 1.5.0 \u7248\u672c\u548c chaosblade-operator 1.6.1\u7248\u672c\uff0c\u5206\u4e09\u6b21\u5b9e\u9a8c\uff0c\u6ce8\u5165 CPU load \u573a\u666f\u6765\u89c2\u5bdf\u6ce8\u5165\u6027\u80fd\u3001\u78c1\u76d8IO\u3001\u7f51\u7edc\u5e26\u5bbd\uff1b\\n\\n- \u5728 kubernetes \u4e2d\u90e8\u7f72 tomcat deployment \u8d44\u6e90\u7c7b\u578b\uff0c\u526f\u672c\u6570\u8bbe\u7f6e\u4e3a 20\\n- \u5728 kubernetes \u4e2d\u90e8\u7f72 tomcat deployment \u8d44\u6e90\u7c7b\u578b\uff0c\u526f\u672c\u6570\u8bbe\u7f6e\u4e3a 50\\n- \u5728 kubernetes \u4e2d\u90e8\u7f72 tomcat deployment \u8d44\u6e90\u7c7b\u578b\uff0c\u526f\u672c\u6570\u8bbe\u7f6e\u4e3a 100\\n### \u5b9e\u9a8c\u73af\u5883\\n\u4e09\u8282\u70b9 kubernetes \u96c6\u7fa4\uff0cmaster \u4e3a\u53ef\u8c03\u5ea6\u6a21\u5f0f\\n\\n| \u8282\u70b9/\u8d44\u6e90 | CPU | \u5185\u5b58 |\\n| --- | --- | --- |\\n| master1 | 4c | 16g |\\n| node1 | 4c | 16g |\\n| node2 | 4c | 16g |\\n\\n### \u5b9e\u9a8c\u7ed3\u679c\\n#### chaosblade-operator 1.5.0 \u7248\u672c\\n\u5728 kubernetes \u4e2d\u90e8\u7f72 tomcat deployment \u8d44\u6e90\u7c7b\u578b\uff0c\u526f\u672c\u6570\u8bbe\u7f6e\u4e3a 20\uff1b\u901a\u8fc7 chaosblade cli \u6ce8\u5165 CPU load \u573a\u666f\uff0c\u6307\u5b9a CPU \u4f7f\u7528\u7387\u4e3a 60\uff0c\u901a\u8fc7\u6807\u7b7e\u6765\u7b5b\u9009\u51fa\u6240\u6709 pod\uff0c\u8bbe\u7f6e\u7b49\u5f85\u65f6\u95f4\u4e3a 5 \u5206\u949f\uff1b\\n##### \u6ce8\u5165\u8017\u65f6\\n\u6ce8\u5165\u8017\u65f6\u8fbe\u5230 57s\\n```bash\\ntime ./blade create k8s pod-cpu load --kubeconfig ~/.kube/config --namespace default --cpu-percent 60 --labels app=tomcat --waiting-time 5m\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"4fce727793e239cb\\"}\\n\\nreal\\t0m57.851s\\nuser\\t0m0.811s\\nsys\\t0m0.208s\\n```\\n##### \u8d44\u6e90\u6d88\u8017\\n\u53ef\u4ee5\u770b\u5230\u7f51\u7edc\u5e26\u5bbd\u63a5\u53d7\u5cf0\u503c\u8fbe\u5230 180MBs \u5de6\u53f3\uff0c\u4f20\u8f93\u5cf0\u503c\u8fbe\u5230 140MBs \u5de6\u53f3\\n![image.png](/img/2022-11-01-chaosblade-operator/early_stage_exp_20_copies_disk_io.png)\\n![image.png](/img/2022-11-01-chaosblade-operator/early_stage_exp_20_copies_network_bandwidth.png)\\n\u5728 kubernetes \u4e2d\u90e8\u7f72 tomcat deployment \u8d44\u6e90\u7c7b\u578b\uff0c\u526f\u672c\u6570\u8bbe\u7f6e\u4e3a 50\uff1b\u901a\u8fc7 chaosblade cli \u6ce8\u5165 CPU load \u573a\u666f\uff0c\u6307\u5b9a CPU \u4f7f\u7528\u7387\u4e3a 60\uff0c\u901a\u8fc7\u6807\u7b7e\u6765\u7b5b\u9009\u51fa\u6240\u6709 pod\uff0c\u8bbe\u7f6e\u7b49\u5f85\u65f6\u95f4\u4e3a 5 \u5206\u949f\uff1b\\n##### \u6ce8\u5165\u8017\u65f6\\n\u6ce8\u5165\u8017\u65f6\u8fbe\u5230 2m25.806s\\n```bash\\ntime ./blade create k8s pod-cpu load --kubeconfig ~/.kube/config --namespace default --cpu-percent 60 --labels app=tomcat --waiting-time 5m\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"71e07348af26e4aa\\"}\\n\\nreal\\t2m25.806s\\nuser\\t0m1.010s\\nsys\\t0m0.239s\\n```\\n##### \u8d44\u6e90\u6d88\u8017\\n![image.png](/img/2022-11-01-chaosblade-operator/early_stage_exp_50_copies_disk_io.png)\\n![image.png](/img/2022-11-01-chaosblade-operator/early_stage_exp_50_copies_network_bandwidth.png)\\n\u5728 kubernetes \u4e2d\u90e8\u7f72 tomcat deployment \u8d44\u6e90\u7c7b\u578b\uff0c\u526f\u672c\u6570\u8bbe\u7f6e\u4e3a 100\uff1b\u901a\u8fc7 chaosblade cli \u6ce8\u5165 CPU load \u573a\u666f\uff0c\u6307\u5b9a CPU \u4f7f\u7528\u7387\u4e3a 60\uff0c\u901a\u8fc7\u6807\u7b7e\u6765\u7b5b\u9009\u51fa\u6240\u6709 pod\uff0c\u4e3a\u4e86\u907f\u514d\u51fa\u73b0\u8d85\u65f6\u60c5\u51b5\uff0c\u4e0d\u592a\u597d\u8bc4\u4f30\u6ce8\u5165\u8017\u65f6\uff0c\u6240\u6709\u6b64\u65f6\u5c06\u7b49\u5f85\u65f6\u95f4\u8bbe\u7f6e\u4e3a 20 \u5206\u949f\uff1b\\n##### \u6ce8\u5165\u8017\u65f6\\n```bash\\ntime ./blade create k8s pod-cpu load --kubeconfig ~/.kube/config --namespace default --cpu-percent 60 --labels app=tomcat --waiting-time 20m\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"cc477f2c632e2510\\"}\\n\\nreal\\t4m59.776s\\nuser\\t0m1.132s\\nsys\\t0m0.281s\\n```\\n##### \u8d44\u6e90\u6d88\u8017\\n![image.png](/img/2022-11-01-chaosblade-operator/early_stage_exp_100_copies_disk_io.png)\\n![image.png](/img/2022-11-01-chaosblade-operator/early_stage_exp_100_copies_network_bandwidth.png)\\n#### chaosblade-operator 1.6.1 \u7248\u672c\\n\u8fd9\u6b21\u5b89\u88c5 chaosblade-operator 1.6.1 \u7248\u672c\\n```bash\\n helm install chaosblade-operator chaosblade-operator-1.5.0.tgz\\n```\\n\u5728 kubernetes \u4e2d\u90e8\u7f72 tomcat deployment \u8d44\u6e90\u7c7b\u578b\uff0c\u526f\u672c\u6570\u8bbe\u7f6e\u4e3a 20\uff1b\u901a\u8fc7 chaosblade cli \u6ce8\u5165 CPU load \u573a\u666f\uff0c\u6307\u5b9a CPU \u4f7f\u7528\u7387\u4e3a 60\uff0c\u901a\u8fc7\u6807\u7b7e\u6765\u7b5b\u9009\u51fa\u6240\u6709 pod\uff0c\u8bbe\u7f6e\u7b49\u5f85\u65f6\u95f4\u4e3a 5 \u5206\u949f\uff1b\\n##### \u6ce8\u5165\u8017\u65f6\\n```bash\\ntime ./blade create k8s pod-cpu load --kubeconfig ~/.kube/config --namespace default --cpu-percent 60 --labels app=tomcat --waiting-time 5m\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"fe8ebc493bda3d7e\\"}\\n\\nreal\\t0m5.537s\\nuser\\t0m0.525s\\nsys\\t0m0.067s\\n```\\n##### \u8d44\u6e90\u6d88\u8017\\n![image.png](/img/2022-11-01-chaosblade-operator/current_exp_20_copies_disk_io.png)\\n![image.png](/img/2022-11-01-chaosblade-operator/current_exp_20_copies_network_bandwidth.png)\\n\u5728 kubernetes \u4e2d\u90e8\u7f72 tomcat deployment \u8d44\u6e90\u7c7b\u578b\uff0c\u526f\u672c\u6570\u8bbe\u7f6e\u4e3a 50\uff1b\u901a\u8fc7 chaosblade cli \u6ce8\u5165 CPU load \u573a\u666f\uff0c\u6307\u5b9a CPU \u4f7f\u7528\u7387\u4e3a 60\uff0c\u901a\u8fc7\u6807\u7b7e\u6765\u7b5b\u9009\u51fa\u6240\u6709 pod\uff0c\u8bbe\u7f6e\u7b49\u5f85\u65f6\u95f4\u4e3a 5 \u5206\u949f\uff1b\\n##### \u6ce8\u5165\u8017\u65f6\\n```bash\\ntime ./blade create k8s pod-cpu load --kubeconfig ~/.kube/config --namespace default --cpu-percent 60 --labels app=tomcat --waiting-time 5m\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"a4d9c4c9c16642b5\\"}\\n\\nreal\\t0m24.519s\\nuser\\t0m0.597s\\nsys\\t0m0.071s\\n```\\n##### \u8d44\u6e90\u6d88\u8017\\n![image.png](/img/2022-11-01-chaosblade-operator/current_exp_50_copies_disk_io.png)\\n![image.png](/img/2022-11-01-chaosblade-operator/current_exp_50_copies_network_bandwidth.png)\\n\u5728 kubernetes \u4e2d\u90e8\u7f72 tomcat deployment \u8d44\u6e90\u7c7b\u578b\uff0c\u526f\u672c\u6570\u8bbe\u7f6e\u4e3a 100\uff1b\u901a\u8fc7 chaosblade cli \u6ce8\u5165 CPU load \u573a\u666f\uff0c\u6307\u5b9a CPU \u4f7f\u7528\u7387\u4e3a 60\uff0c\u901a\u8fc7\u6807\u7b7e\u6765\u7b5b\u9009\u51fa\u6240\u6709 pod\uff0c\u8bbe\u7f6e\u7b49\u5f85\u65f6\u95f4\u4e3a 5 \u5206\u949f\uff1b\\n##### \u6ce8\u5165\u8017\u65f6\\n```bash\\ntime ./blade create k8s pod-cpu load --kubeconfig ~/.kube/config --namespace default --cpu-percent 60 --labels app=tomcat --waiting-time 5m\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"f4f4790a369cc448\\"}\\n\\nreal\\t1m46.554s\\nuser\\t0m0.696s\\nsys\\t0m0.055s\\n```\\n##### \u8d44\u6e90\u6d88\u8017\\n![image.png](/img/2022-11-01-chaosblade-operator/current_exp_100_copies_disk_io.png)\\n![image.png](/img/2022-11-01-chaosblade-operator/current_exp_100_copies_network_bandwidth.png)\\n### \u5b9e\u9a8c\u603b\u7ed3\\n#### chaosblade-operator 1.5.0 \u7248\u672c\\n| pod \u6570\u91cf/\u5f71\u54cd\u8303\u56f4 | \u6ce8\u5165\u8017\u65f6 | \u78c1\u76d8IO\u5f71\u54cd | \u7f51\u7edc\u5e26\u5bbd\u5f71\u54cd |\\n| --- | --- | --- | --- |\\n| 20 | 57s | \u7565\u5fae\u5f71\u54cd | \u5f71\u54cd\u5927 |\\n| 50 | 2m25s | \u5f71\u54cd\u5927 | \u5f71\u54cd\u5927 |\\n| 100 | 4m59s | \u5f71\u54cd\u6781\u5927 | \u5f71\u54cd\u6781\u5927 |\\n\\n#### chaosblade-operator 1.6.1 \u7248\u672c\\n| pod \u6570\u91cf/\u5f71\u54cd\u8303\u56f4 | \u6ce8\u5165\u8017\u65f6 | \u78c1\u76d8IO\u5f71\u54cd | \u7f51\u7edc\u5e26\u5bbd\u5f71\u54cd |\\n| --- | --- | --- | --- |\\n| 20 | 5s | \u51e0\u4e4e\u65e0\u5f71\u54cd | \u51e0\u4e4e\u65e0\u5f71\u54cd |\\n| 50 | 27s | \u51e0\u4e4e\u65e0\u5f71\u54cd | \u51e0\u4e4e\u65e0\u5f71\u54cd |\\n| 100 | 1m46s | \u51e0\u4e4e\u65e0\u5f71\u54cd | \u51e0\u4e4e\u65e0\u5f71\u54cd |\\n\\n\u901a\u8fc7\u5b9e\u9a8c\u7ed3\u679c\u5bf9\u6bd4\u548c\u89c2\u6d4b\u56fe\u53ef\u4ee5\u5f88\u660e\u663e\u7684\u770b\u5230\uff0cchaosblade-operator 1.6.1 \u7248\u672c\u5728\u6ce8\u5165\u8fc7\u7a0b\u4e2d\u5bf9\u5728\u8d44\u6e90\u6d88\u8017\u65b9\u9762\u51e0\u4e4e\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\uff0c\u6ce8\u5165\u8017\u65f6\u4e5f\u6709\u660e\u663e\u7684\u63d0\u5347\uff1b\\n\u5bf9\u4e8e\u5176\u4ed6\u65b0\u7279\u6027\uff0c\u6bd4\u5982\u517c\u5bb9\u6027\u63d0\u5347\u3001\u53ea\u8bfb\u6587\u4ef6\u7cfb\u7edfpod\u652f\u6301\u3001\u65e0\u4fb5\u5165\u7b49\uff0c\u4e5f\u53ef\u4ee5\u4e3b\u52a8\u5c1d\u8bd5\u53bb\u505a\u66f4\u591a\u7684\u5b9e\u9a8c\uff0c\u76f8\u4fe1\u4f60\u4f1a\u6709\u66f4\u6df1\u7684\u7406\u89e3\u3002\\n## \u601d\u8003\\n### Java \u573a\u666f\u652f\u6491\\nChaosBlade \u5bf9\u4e8e\u5bb9\u5668 Java \u573a\u666f\u7684\u5b9e\u73b0\uff0c\u662f\u901a\u8fc7 JVM  attach javaagent \u7684\u80fd\u529b\u5b9e\u73b0\u7684\uff0c\u4e5f\u5c31\u610f\u5473\u7740 JVM \u5728 attach \u7684\u65f6\u5019\u5fc5\u987b\u80fd\u591f\u67e5\u627e\u5230 javaagent.jar \u5305\u6240\u5728\u8def\u5f84\uff0c\u6240\u4ee5\u76ee\u524d\u5fc5\u987b\u5c06 javaagent.jar \u590d\u5236\u8fdb\u5bb9\u5668\uff1b\u5982\u4f55\u80fd\u591f\u66f4\u4f18\u96c5\u505a\u5230\u5bb9\u5668 Java \u573a\u666f\u7684\u6ce8\u5165\u4ecd\u7136\u503c\u5f97\u6211\u4eec\u53bb\u63a2\u7d22\u548c\u7a81\u7834\u3002\\n### Node \u7ea7\u522b\u6f14\u7ec3\u652f\u6491\\nChaosBlade Operator \u5bf9\u4e8e Kubernetes Node \u7ea7\u522b\u7684\u6f14\u7ec3\u652f\u6301\u662f\u6709\u9650\u7684\uff0c\u5728 Node \u573a\u666f\u6ce8\u5165\u6545\u969c\u65f6\u5019\uff0c\u771f\u6b63\u6ce8\u5165\u7684\u662f chaosblade-tool  \u5bb9\u5668\uff0cchaosblade-tool \u9ed8\u8ba4\u4e5f\u53ea\u662f\u8fdb\u7a0b\u548c\u7f51\u7edc\u547d\u4ee4\u7a7a\u95f4\u5904\u5728\u5bbf\u4e3b\u673a\u7ea7\u522b\uff0c\u56e0\u6b64\u5728 chaosblade-tool \u5bb9\u5668\u4e2d\u652f\u6301\u7f51\u7edc\u5ef6\u65f6\u3001\u7f51\u7edc\u4e22\u5305\u3001\u6740\u8fdb\u7a0b\u7b49\u573a\u666f\uff0c\u5176\u5b9e\u4e5f\u662f\u7b49\u540c Node \u7ef4\u5ea6\u7684\u7f51\u7edc\u5ef6\u65f6\u3001\u7f51\u7edc\u4e22\u5305\u3001\u6740\u8fdb\u7a0b\u7b49\u573a\u666f\uff1b\\n\u5bf9\u4e8e\u5176\u4ed6 Kubernetes Node \u7684\u652f\u6301\u3001\u5e76\u4e0d\u80fd\u771f\u6b63\u505a\u5230 Node \u7ef4\u5ea6\uff0c\u6bd4\u5982 CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8IO \u7b49\u5fc5\u987b\u5f97\u5728  chaosblade-tool  \u5bb9\u5668\u6ca1\u6709\u88ab\u9650\u5236\u8d44\u6e90\u7684\u60c5\u666f\u4e0b\uff0c\u624d\u52c9\u5f3a\u7b97 Node  \u7ef4\u5ea6\uff1b\u800c\u6587\u4ef6\u7cfb\u7edf\u3001Java \u573a\u666f\u7b49\u76ee\u524d\u662f\u6ca1\u6709\u529e\u6cd5\u505a\u5230\u7684\uff1b\u4ece\u53e6\u5916\u4e00\u4e2a\u89d2\u5ea6\u51fa\u53d1\u601d\u8003\uff0c\u6211\u4eec\u662f\u5426\u9700\u8981\u8fd9\u4e9b\u573a\u666f\uff0c\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\u5728\u4e3b\u673a\uff08Node\uff09\u4e0a\u5b89\u88c5 chaosblade\\n\u5b8c\u5168\u80fd\u591f\u652f\u6301\u5168\u90e8\u573a\u666f\u4e86\u3002\\n\\n_\u76f8\u5173\u94fe\u63a5_\\n**_ChaosBlade \u5b98\u65b9\u7f51\u5740_**_\uff1a_\\n_https://chaosblade.io/_\\n**_ChaosBlade Github_**_\uff1a_\\n_https://github.com/chaosblade-io/chaosblade_\\n**_ChaosBlade \u9489\u9489\u793e\u533a\u4ea4\u6d41\u7fa4_**_\uff1a23177705_\\n# \u4f5c\u8005\u7b80\u4ecb\uff1a\\n\u53f6\u98de\uff08Github\u8d26\u53f7\uff1atiny-x\uff09ChaosBlade  Maintainer\u3002\u76ee\u524d\u4e3b\u8981\u5173\u6ce8\u4e8e\u6df7\u6c8c\u5de5\u7a0b\u3001\u4e91\u539f\u751f\u4ee5\u53ca Linux \u5185\u6838\u76f8\u5173\u3002"},{"id":"/2022/09/09/chaosblade-java","metadata":{"permalink":"/en/blog/2022/09/09/chaosblade-java","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2022-09-09-chaosblade-java.md","source":"@site/blog/2022-09-09-chaosblade-java.md","title":"ChaosBlade Java \u573a\u666f\u6027\u80fd\u4f18\u5316\uff0c\u90a3\u4e9b\u4f60\u4e0d\u77e5\u9053\u7684\u4e8b","description":"\u672c\u6587\u4f1a\u7740\u91cd\u4ecb\u7ecd\u4ec0\u4e48chaosblade java\u573a\u666f\u6027\u80fd\u4f18\u5316\u7684\u5b9e\u73b0\u3002","date":"2022-09-09T00:00:00.000Z","formattedDate":"September 9, 2022","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":27.395,"hasTruncateMarker":true,"authors":[{"name":"\u5f20\u658c\u658c\uff08@binbin0325\uff09","title":"Committer of ChaosBlade","url":"https://github.com/binbin0325","imageURL":"https://avatars.githubusercontent.com/u/28588342?v=4","key":"binbin"}],"frontMatter":{"title":"ChaosBlade Java \u573a\u666f\u6027\u80fd\u4f18\u5316\uff0c\u90a3\u4e9b\u4f60\u4e0d\u77e5\u9053\u7684\u4e8b","authors":"binbin","tags":["chaosblade"],"description":"\u672c\u6587\u4f1a\u7740\u91cd\u4ecb\u7ecd\u4ec0\u4e48chaosblade java\u573a\u666f\u6027\u80fd\u4f18\u5316\u7684\u5b9e\u73b0\u3002","hide_table_of_contents":false},"prevItem":{"title":"\u5927\u89c4\u6a21 Kubernetes \u96c6\u7fa4\u6545\u969c\u6ce8\u5165\u7684\u5229\u5668-ChaosBlade","permalink":"/en/blog/2022/11/01/chaosblade-operator"},"nextItem":{"title":"ChaosBlade-Box\u5168\u65b0\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0 -- \u52a9\u529b\u4f01\u4e1a\u6df7\u6c8c\u5de5\u7a0b\u843d\u5730","permalink":"/en/blog/2022/06/24/ChaosBlade-Box-a-New-Version-of-the-Chaos-Engineering-Platform-Has-Released-ch"}},"content":"[ChaosBlade](https://chaosblade.io/) \u662f\u963f\u91cc\u5df4\u5df4\u5f00\u6e90\u7684\u4e00\u6b3e\u9075\u5faa\u6df7\u6c8c\u5de5\u7a0b\u539f\u7406\u548c\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u7684\u5b9e\u9a8c\u6ce8\u5165\u5de5\u5177\uff0c\u5e2e\u52a9\u4f01\u4e1a\u63d0\u5347\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u5bb9\u9519\u80fd\u529b\uff0c\u5e76\u4e14\u5728\u4f01\u4e1a\u4e0a\u4e91\u6216\u5f80\u4e91\u539f\u751f\u7cfb\u7edf\u8fc1\u79fb\u8fc7\u7a0b\u4e2d\u4e1a\u52a1\u8fde\u7eed\u6027\u4fdd\u969c\u3002\\n\\n\u76ee\u524d\u652f\u6301\u7684\u573a\u666f\u6709\uff1a\u57fa\u7840\u8d44\u6e90\u3001Java \u5e94\u7528\u3001C++ \u5e94\u7528\u3001Docker \u5bb9\u5668\u4ee5\u53ca Kubernetes \u5e73\u53f0\u3002\u8be5\u9879\u76ee\u5c06\u573a\u666f\u6309\u9886\u57df\u5b9e\u73b0\u5c01\u88c5\u6210\u5355\u72ec\u7684\u9879\u76ee\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u4f7f\u9886\u57df\u5185\u573a\u666f\u6807\u51c6\u5316\u5b9e\u73b0\uff0c\u800c\u4e14\u975e\u5e38\u65b9\u4fbf\u573a\u666f\u6c34\u5e73\u548c\u5782\u76f4\u6269\u5c55\uff0c\u901a\u8fc7\u9075\u5faa\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\uff0c\u5b9e\u73b0 ChaosBlade cli \u7edf\u4e00\u8c03\u7528\u3002\\n\\n\u4e0d\u8fc7Java\u573a\u666f\u4e0b\u7684\u6545\u969c\u6ce8\u5165\u76ee\u524d\u6709\u4e00\u4e9b\u6027\u80fd\u95ee\u9898,\u4e3b\u8981\u4f53\u73b0\u5728\u6545\u969c\u6ce8\u5165\u65f6\u4f1a\u8ba9CPU\u7684\u4f7f\u7528\u7387\u5927\u5e45\u5ea6\u6296\u52a8,\u4e25\u91cd\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u5bfc\u81f4CPU\u7684\u4f7f\u7528\u7387100%\u3002\u8fd9\u79cd\u60c5\u51b5\u5bf9\u4e8e\u7ebf\u4e0b\u670d\u52a1\u7684\u5f71\u54cd\u8fd8\u597d\uff0c\u4f46\u662f\u5bf9\u4e8e\u7ebf\u4e0a\u670d\u52a1\u5c31\u6bd4\u8f83\u4e25\u91cd\u4e86\uff0c\u56e0\u4e3aCPU\u7684\u4f7f\u7528\u7387\u8f83\u9ad8\u6709\u53ef\u80fd\u4f1a\u5bfc\u81f4\u670d\u52a1\u7684\u6574\u4f53\u6027\u80fd\u53d8\u5dee\uff0c\u4ece\u800c\u5f71\u54cd\u63a5\u53e3\u7684\u8017\u65f6\u3002\\n\\n**\u901a\u8fc7\u5bf9ChaosBlade Java \u573a\u666f\u7684\u6027\u80fd\u4f18\u5316\uff0c\u4f7fCPU\u5728\u6545\u969c\u6ce8\u5165\u65f6\u7684\u6296\u52a8\u5f97\u5230\u4e86\u6709\u6548\u7684\u63a7\u5236\uff0c\u4e0d\u4f1a\u518d\u51fa\u73b0CPU\u4f7f\u7528\u7387\u8fbe\u5230100%\u7684\u6296\u52a8\uff0c\u7ecf\u8fc7\u6d4b\u8bd5\u5728\u7ebf\u4e0a8C\uff0c4G\uff0cQPS 3K\u5de6\u53f3\u7684\u670d\u52a1\u5b9e\u4f8b\u4e0a\u6ce8\u5165Dubbo \u81ea\u5b9a\u4e49\u629b\u5f02\u5e38\u7684\u6545\u969c\uff0cCPU\u7684\u4f7f\u7528\u7387\u53ef\u4ee5\u63a7\u5236\u572840%\u5de6\u53f3\u7684\u77ac\u65f6\u6296\u52a8\u8303\u56f4\u5185,\u6027\u80fd\u6574\u4f53\u63d0\u5347\u8fd12.5\u500d\u3002**\\n\\n\u672c\u6587\u5c06\u4f1a\u8be6\u7ec6\u7684\u4ecb\u7ecd\u5f71\u54cd\u6027\u80fd\u7684\u95ee\u9898\u70b9\u4ee5\u53ca\u662f\u5982\u4f55\u5bf9\u8fd9\u4e9b\u95ee\u9898\u8fdb\u884c\u4f18\u5316\u7684\u3002\\n\x3c!--truncate--\x3e\\n# 2.Java\u573a\u666f\\n\u5728\u4ecb\u7ecd\u524d\u5148\u4e86\u89e3\u4e0bChaosBlade Java\u573a\u666f\u7684\u6ce8\u5165\u6d41\u7a0b\u3002\\n\\n![injection_process.png](/img/2022-09-09-chaosblade-java/injection_process.png)Java\u573a\u666f\u7684\u6545\u969c\u6ce8\u5165\u662f\u57fa\u4e8e\u5b57\u8282\u7801\u589e\u5f3a\u6846\u67b6JVM-Sandbox\u5b9e\u73b0\u7684\uff0c\u6ce8\u5165\u4e00\u4e2a\u6545\u969c\u5206\u4e3a\u4e24\u6b65\uff1a\\n\\n1. ChaosBlade \u6267\u884cprepare\u547d\u4ee4\uff0c\u89e6\u53d1sandbox\u5bf9\u76ee\u6807JVM\u6302\u8f7d Java agent\u3002\\n2. ChaosBlade \u6267\u884ccreate\u547d\u4ee4\uff0c\u89e6\u53d1sandbox\u5bf9\u76ee\u6807JVM\u8fdb\u884c\u5b57\u8282\u7801\u589e\u5f3a\uff0c\u4ece\u800c\u8fbe\u5230\u6545\u969c\u6ce8\u5165\u7684\u76ee\u7684\u3002\\n\\n\\n# 3.prepare(\u6302\u8f7d)\u9636\u6bb5\u4f18\u5316\\n\\n## 3.1 \u73b0\u8c61\\n\u672c\u5730\u6a21\u62df\u4e00\u4e2a\u7b80\u5355\u7684HTTP\u670d\u52a1\uff0c\u63a7\u5236\u5176CPU Idle\u572850%\u5de6\u53f3\uff0c\u5f53\u6267\u884cblade prepare jvm --pid\u6302\u8f7dagent\u540e\uff0c\u53d1\u73b0CPU\u7a7a\u95f2\u7387\u8fc5\u901f\u4e0b\u964d\uff0c\u5e76\u4e14\u4e0b\u964d\u7684\u5e45\u5ea6\u8f83\u5927\u3002\u5728\u751f\u4ea7\u4e2d\u8fdb\u884c\u6545\u969c\u6ce8\u5165\u6709\u53ef\u80fd\u4f1a\u76f4\u63a5\u8ba9Idle\u6389\u4f4e\u4ece\u800c\u89e6\u53d1\u544a\u8b66\\n\\n![prepare_phenomenon.png](/img/2022-09-09-chaosblade-java/prepare_phenomenon.png)\\n\\n## 3.2 \u5b9a\u4f4d\\n\u901a\u8fc7\u91c7\u96c6CPU profile\u751f\u6210\u706b\u7130\u56fe\u6765\u89c2\u5bdf\u5728\u6267\u884cblade prepare\u65f6CPU\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u5982\u4e0b\u56fe\u53ef\u4ee5\u770b\u5230loadPlugins\u65b9\u6cd5\u662f\u8d44\u6e90\u6d88\u8017\u7684\u91cd\u707e\u533a\\n\\n![prepare_cpu_profile.png](/img/2022-09-09-chaosblade-java/prepare_cpu_profile.png)\\n\\nloadPlugins\u65b9\u6cd5\u4e2d\u4e3b\u8981\u662f\u52a0\u8f7dChaosBlade Java\u4e2d\u652f\u6301\u7684\u5168\u90e8\u63d2\u4ef6\uff0c\u4f8b\u5982dubbo,redis,kafka\u7b49\u3002\u5f53\u52a0\u8f7d\u4e86\u8fd9\u4e9b\u63d2\u4ef6\u540e\u5c31\u53ef\u4ee5\u8fdb\u884c\u6545\u969c\u6ce8\u5165\u4e86\u3002\u52a0\u8f7d\u63d2\u4ef6\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u5bf9\u63d2\u4ef6\u4e2d\u5b9a\u4e49\u7684\u7c7b\u4ee5\u53ca\u65b9\u6cd5\u8fdb\u884c\u5b57\u8282\u7801\u589e\u5f3a\u3002\\n\\n![attach_and_all_load.png](/img/2022-09-09-chaosblade-java/attach_and_all_load.png)\\n\\n\u5bfc\u81f4CPU\u6d88\u8017\u7684\u95ee\u9898\u5c31\u5728\u4e8e\u52a0\u8f7d\u5168\u91cf\u7684\u63d2\u4ef6\u8017\u65f6\u8f83\u5927\uff0c\u800c\u6211\u4eec\u6545\u969c\u6ce8\u5165\u65f6\u4f1a\u9009\u62e9\u5177\u4f53\u67d0\u4e2a\u63d2\u4ef6\u8fdb\u884c\u6545\u969c\u6ce8\u5165\uff0c\u663e\u7136\u5168\u91cf\u52a0\u8f7d\u5e76\u4e0d\u662f\u6700\u4f18\u89e3\\n\\n## 3.3 \u4f18\u5316\\n\u4f18\u5316\u601d\u8def:\u65e2\u7136\u6545\u969c\u6ce8\u5165\u65f6\u4f1a\u9009\u62e9\u5177\u4f53\u7684\u63d2\u4ef6\uff0c\u90a3\u4e48\u901a\u8fc7\u61d2\u52a0\u8f7d\u7684\u65b9\u5f0f\u5373\u53ef\u89e3\u51b3\uff0c\u5f53\u6211\u4eec\u8981\u9488\u5bf9\u54ea\u4e00\u4e2a\u63d2\u4ef6\u6545\u969c\u6ce8\u5165\u5c31\u52a0\u8f7d\u54ea\u4e2a\u63d2\u4ef6\uff0c\u52a0\u8f7d\u7684\u7c92\u5ea6\u53d8\u5c0f\uff0cCPU\u7684\u6d88\u8017\u81ea\u7136\u5c31\u5c0f\u4e86\\n![attach_and_lazy_load.png](/img/2022-09-09-chaosblade-java/attach_and_lazy_load.png)\\n\\n\u6838\u5fc3\u4ee3\u7801\uff1a\\n\u5728\u6545\u969c\u6ce8\u5165\u9636\u6bb5\uff0c\u901a\u8fc7\u6307\u5b9a\u7684\u63d2\u4ef6\u8fdb\u884c\u61d2\u52a0\u8f7d\u3002\\n```java\\nprivate void lazyLoadPlugin(ModelSpec modelSpec, Model model) throws ExperimentException {\\n    PluginLifecycleListener listener = ManagerFactory.getListenerManager().getPluginLifecycleListener();\\n    if (listener == null) {\\n        throw new ExperimentException(\\"can get plugin listener\\");\\n    }\\n    PluginBeans pluginBeans = ManagerFactory.getPluginManager().getPlugins(modelSpec.getTarget());\\n    if (pluginBeans == null) {\\n        throw new ExperimentException(\\"can get plugin bean\\");\\n    }\\n    if (pluginBeans.isLoad()) {\\n        return;\\n    }\\n    listener.add(pluginBean);\\n    ManagerFactory.getPluginManager().setLoad(pluginBeans, modelSpec.getTarget());\\n}\\n```\\n\u8be6\u7ec6\u4ee3\u7801PR:[https://github.com/ChaosBlade-io/ChaosBlade-exec-jvm/pull/233](https://github.com/chaosblade-io/chaosblade-exec-jvm/pull/233)\\n\\n## 3.4 \u6539\u8fdb\u540e\u6548\u679c\\nCPU Idle \u4e0b\u964d\u5e45\u5ea6\u964d\u4f4e\\n![optimize_cpu_idle.png](/img/2022-09-09-chaosblade-java/optimize_cpu_idle.png)\\n\\n\u706b\u7130\u56fe\u4e2d\u7684CPU\u4f7f\u7528\u7387\u51e0\u4e4e\u201c\u6d88\u5931\u201d\\n\\n![optimize_cpu_profile.png](/img/2022-09-09-chaosblade-java/optimize_cpu_profile.png)\\n\\n# 4.create(\u6ce8\u5165)\u9636\u6bb5\u4f18\u5316\\n\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\u53d1\u73b0\u6545\u969c\u6ce8\u5165\u5bfc\u81f4CPU Idle\u8dcc\u5e95\u7684\u60c5\u51b5\u6bd4\u8f83\u591a\uff0c\u8dcc\u5e95\u7684\u6301\u7eed\u65f6\u95f4\u662f\u6bd4\u8f83\u77ed\u6682\u7684\u57fa\u672c\u90fd\u572820S\u5de6\u53f3\uff0c\u6709\u4e00\u4e9b\u60c5\u51b5\u662f\u548c\u76ee\u6807\u670d\u52a1\u7684\u4e1a\u52a1\u4ee3\u7801\u6709\u5173\u7cfb\u6216\u8005\u662f\u548c\u76ee\u6807\u670d\u52a1\u7684jvm\u53c2\u6570\u8bbe\u7f6e\u6709\u5173\uff0c\u672c\u6587\u53ea\u4ecb\u7ecd\u7531ChaosBlade\u5bfc\u81f4\u7684\u6216\u95f4\u63a5\u5bfc\u81f4\u7684CPU Idle\u8dcc\u5e95\u95ee\u9898\u3002\\n\\n![create_cpu_idle.png](/img/2022-09-09-chaosblade-java/create_cpu_idle.png)\\n\\n> CPU Idle\u8dcc\u5e95:\u8fd9\u91cc\u6307\u7684\u662fCPU \u7a7a\u95f2\u7387\u964d\u4f4e\u4e3a0\uff0c\u540c\u65f6\u610f\u5473\u7740CPU \u4f7f\u7528\u7387\u8fbe\u5230\u4e86100%\\n\\n\\n## 4.1 dubbo\u6545\u969c\u4f18\u5316\\n\\n### 4.1.1 \u95ee\u9898\u63cf\u8ff0\\nChaosBlade\u4e2d\u652f\u6301\u5bf9dubbo provider\u6216\u8005consumer\u8fdb\u884c\u6545\u969c\u6ce8\u5165\uff08\u4f8b\u5982\u629b\u5f02\u5e38\uff09\uff0c\u5f53\u4e00\u4e2a\u670d\u52a1\u65e2\u662fprovider\u53c8\u662fconsumer\u7684\u65f6\u5019\uff0c\u5982\u679c\u5bf9provider\u6545\u969c\u6ce8\u5165\u5219\u4f1a\u89e6\u53d1bug\uff0c\u6709\u53ef\u80fd\u4f1a\u5bfc\u81f4CPU Idle\u8dcc\u5e95\u3002\\n\\n**\u6b63\u5e38\u60c5\u51b5\uff1a**\u4e00\u4e2a\u65e2\u662fprovider\u53c8\u662fconsumer\u7684\u670d\u52a1\uff0c\u5b83\u7684\u8bf7\u6c42\u5904\u7406\u6d41\u7a0b\u662f\u6d41\u91cf\u4f1a\u9996\u5148\u8fdb\u5165\u5230provider\u7ecf\u8fc7\u5904\u7406\u540e\u4ea4\u7531\u4e1a\u52a1\u903b\u8f91\u6267\u884c\uff0c\u6700\u540e\u901a\u8fc7consumer\u5c06\u8bf7\u6c42\u8f6c\u53d1\u51fa\u53bb\u3002\\n\\n![dubbo_normal.png](/img/2022-09-09-chaosblade-java/dubbo_normal.png)\\n\\n**\u9488\u5bf9consumer\u6545\u969c\u6ce8\u5165\uff1a**\u5f53\u5229\u7528ChaosBlade\u5bf9consumer\u8fdb\u884c\u6545\u969c\u6ce8\u5165\u65f6\uff0c\u6d41\u91cf\u5230\u8fbeconsumer\u5c31\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u4e0d\u4f1a\u5c06\u6d41\u91cf\u771f\u6b63\u7684\u8f6c\u53d1\u51fa\u53bb\uff0c\u4ece\u800c\u8fbe\u5230\u4e00\u4e2a\u6a21\u62df\u6545\u969c\u53d1\u751f\u7684\u6548\u679c\u3002\\n\\n![dubbo_consumer.png](/img/2022-09-09-chaosblade-java/dubbo_consumer.png)\\n\\n**\u9488\u5bf9provider\u6545\u969c\u6ce8\u5165\uff1a**\u5f53\u5229\u7528ChaosBlade\u5bf9provider\u8fdb\u884c\u6545\u969c\u6ce8\u5165\u65f6\uff0c\u6d41\u91cf\u5230\u8fbeprovider\u5c31\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u4e0d\u4f1a\u5c06\u6d41\u91cf\u5411\u4e0b\u8f6c\u53d1\u3002\\n\\n![dubbo_provider.png](/img/2022-09-09-chaosblade-java/dubbo_provider.png)\\n\\n**\u4e0a\u9762\u8bf4\u7684\u90fd\u662f\u9884\u671f\u6548\u679c\uff0c\u5b9e\u9645\u4e0aChaosBlade\u65e0\u8bba\u662f\u5bf9provider\u6216\u8005consumer\u8fdb\u884c\u6545\u969c\u6ce8\u5165\u65f6\uff0c\u90fd\u4f1a\u540c\u65f6provider\u4ee5\u53caconsumer\u540c\u65f6\u8fdb\u884c\u6545\u969c\u6ce8\u5165\uff0c\u8fd9\u5c31\u6709\u53ef\u80fd\u9020\u6210\u989d\u5916\u7684\u8d44\u6e90\u6d6a\u8d39**\u3002\\n\\n1. \u5b57\u8282\u7801\u589e\u5f3a\u7684\u7c7b\u53d8\u7684\u591a\u4e86\\n2. \u4f8b\u5982\u5f53\u6ce8\u5165provider\u6545\u969c\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u6d41\u91cf\u4e0d\u8981\u7ecf\u8fc7\u4e1a\u52a1\u903b\u8f91\uff0c\u56e0\u4e3a\u4e00\u65e6\u662f\u5728consumer\u4e5f\u629b\u51fa\u4e86\u5f02\u5e38\uff0c\u6d41\u91cf\u8fd4\u56de\u65f6\u81ea\u7136\u8981\u7ecf\u8fc7\u4e1a\u52a1\u903b\u8f91\u7684\u5f02\u5e38\u5904\u7406\uff08\u4f8b\u5982\u6253\u5370error\u65e5\u5fd7\uff0c\u91cd\u8bd5\u7b49\uff09\uff0c\u8fd9\u5c31\u6709\u53ef\u80fd\u56e0\u4e3a\u4e1a\u52a1\u903b\u8f91\u7684\u5904\u7406\u95ee\u9898\u5bfc\u81f4CPU Idle\u4e0b\u964d\u3002\\n\\n![dubbo_consumer_and_provider.png](/img/2022-09-09-chaosblade-java/dubbo_consumer_and_provider.png)\\n\\n**\u95ee\u9898\u539f\u56e0:\u56e0\u4e3aChaosBlade\u7684\u5b57\u8282\u7801\u589e\u5f3a\u903b\u8f91\u662f\u6309\u7167\u63d2\u4ef6\u7684\u7c92\u5ea6\u8fdb\u884c\u7684\uff0c\u4f8b\u5982dubbo\u5c31\u5c5e\u4e8e\u4e00\u4e2a\u63d2\u4ef6\uff0c\u4e0d\u8fc7\u50cfdubbo\u548ckafka\u8fd9\u79cd\u65e2\u6709\u9488\u5bf9provider\u53c8\u6709\u9488\u5bf9consumer\u6545\u969c\u6ce8\u5165\u7684\u63d2\u4ef6\u5c31\u4f1a\u540c\u65f6\u5bf9provider\u548cconsumer\u90fd\u6ce8\u5165\u6545\u969c\u4e86\u3002**\\n\\n### 4.1.2 \u4f18\u5316\\n\u5728\u52a0\u8f7d\u63d2\u4ef6\u7684\u65f6\u5019\uff0c\u6839\u636e\u5177\u4f53\u52a0\u8f7d\u7684\u63d2\u4ef6\u540d\u6309\u9700\u52a0\u8f7d\uff0c\u4f8b\u5982\u6267\u884c\u547d\u4ee4:\\n```shell\\n./blade create dubbo throwCustomException --provider --exception Java.lang.Exception --service org.apache.dubbo.UserProvider --methodname GetUser \\n```\\n\u4ee3\u8868\u5b9e\u9645\u8981\u9488\u5bf9dubbo\u7684provider\u6ce8\u5165\u6545\u969c\uff0c\u90a3\u4e48\u5c31\u53ea\u52a0\u8f7dprovider\u63d2\u4ef6\u8fdb\u884c\u5b57\u8282\u7801\u589e\u5f3a\u3002\\n\\n\u4fee\u6539\u7684\u6838\u5fc3\u4ee3\u7801\uff1a\\n```java\\nprivate void lazyLoadPlugin(ModelSpec modelSpec, Model model) throws ExperimentException {\\n    // ...... \u7701\u7565\\n    for (PluginBean pluginBean : pluginBeans.getPluginBeans()) {\\n        String flag = model.getMatcher().get(pluginBean.getName());\\n        if (\\"true\\".equalsIgnoreCase(flag)) {\\n            listener.add(pluginBean);\\n            break;\\n        }\\n        listener.add(pluginBean);\\n    }\\n    // ...... \u7701\u7565\\n}\\n}\\n```\\n\u76f8\u5173pr:[https://github.com/ChaosBlade-io/ChaosBlade-exec-jvm/pull/267](https://github.com/chaosblade-io/chaosblade-exec-jvm/pull/267)\\n\\n\\n## 4.2 \u81ea\u5b9a\u4e49\u811a\u672c\u6545\u969c\u4f18\u5316\\n\\n### 4.2.1 \u95ee\u9898\u63cf\u8ff0\\n\u5728\u4f7f\u7528ChaosBlade \u6ce8\u5165\u81ea\u5b9a\u4e49\u811a\u672c\u7684\u6545\u969c\u65f6\u5bfc\u81f4CPU Idle\u8dcc\u5e95\uff0c\u81ea\u5b9a\u4e49\u811a\u672c\u662fChaosBlade jvm\u6545\u969c\u4e2d\u652f\u6301\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u6307\u7684\u662f\u7528\u6237\u53ef\u4ee5\u7f16\u5199\u4efb\u610f\u4e00\u6bb5Java\u4ee3\u7801\uff0c\u7136\u540e\u5c06\u8fd9\u6bb5\u4ee3\u7801\u6ce8\u5165\u5230\u5bf9\u5e94\u7684\u76ee\u6807\u7c7b\u548c\u65b9\u6cd5\u4e0a\uff0c\u8fd9\u6837\u7684\u65b9\u5f0f\u7075\u6d3b\u5ea6\u975e\u5e38\u9ad8\uff0c\u901a\u8fc7ChaosBlade\u7684\u81ea\u5b9a\u4e49\u811a\u672c\u6ce8\u5165\u6545\u969c\u53ef\u4ee5\u505a\u5f88\u591a\u4e8b\u60c5\u3002\\n\\nChaosBlade\u547d\u4ee4:\\n```shell\\n./blade c jvm script --classname com.example.xxx.HelloController --methodname Hello --script-content .....\\n```\\n\\n### 4.2.2 \u95ee\u9898\u6392\u67e5\\n\u6211\u4eec\u6293\u53d6\u4e86\u6545\u969c\u6ce8\u5165\u65f6\u7684\u706b\u7130\u56fe\u4ee5\u53cajstack\u65e5\u5fd7\uff0c\u901a\u8fc7jstack\u6253\u5370\u7684\u7ebf\u7a0b\u5806\u6808\u53d1\u73b0\u4e86\u4e00\u4e9b\u95ee\u9898\u3002\\n\\n1. \u5728\u6545\u969c\u6ce8\u5165\u540e\u7ebf\u7a0b\u6570\u91cf\u4f1a\u7a81\u7136\u4e0a\u5347\\n2. \u6709\u90e8\u5206\u7ebf\u7a0b\u662fblocked\u72b6\u6001\\n\\n**\u6545\u969c\u6ce8\u5165\u524d:**\\n\\n![before_fault_injection.png](/img/2022-09-09-chaosblade-java/before_fault_injection.png)\\n\\n**\u6545\u969c\u6ce8\u5165\u540e:**\\n\\n![after_fault_injection.png](/img/2022-09-09-chaosblade-java/after_fault_injection.png)\\n\\nBLOCKED\u7684\u7ebf\u7a0b\u5806\u6808:\\n```java\\nStack Trace is: \\nJava.lang.Thread.State: RUNNABLE\\nat Java.util.zip.ZipFile.getEntryTime(Native Method)\\nat Java.util.zip.ZipFile.getZipEntry(ZipFile.Java:586)\\nat Java.util.zip.ZipFile.access$900(ZipFile.Java:60)\\nat Java.util.zip.ZipFile$ZipEntryIterator.next(ZipFile.Java:539)\\n- locked <0x00000006c0a57670> (a sun.net.www.protocol.jar.URLJarFile)\\nat Java.util.zip.ZipFile$ZipEntryIterator.nextElement(ZipFile.Java:514)\\nat Java.util.zip.ZipFile$ZipEntryIterator.nextElement(ZipFile.Java:495)\\nat Java.util.jar.JarFile$JarEntryIterator.next(JarFile.Java:258)\\nat Java.util.jar.JarFile$JarEntryIterator.nextElement(JarFile.Java:267)\\nat Java.util.jar.JarFile$JarEntryIterator.nextElement(JarFile.Java:248)\\nat com.alibaba.ChaosBlade.exec.plugin.jvm.script.Java.JavaCodeScriptEngine$InMemoryJavaFileManager.processJar(JavaCodeScriptEngine.Java:421)\\nat com.alibaba.ChaosBlade.exec.plugin.jvm.script.Java.JavaCodeScriptEngine$InMemoryJavaFileManager.listUnder(JavaCodeScriptEngine.Java:401)\\nat com.alibaba.ChaosBlade.exec.plugin.jvm.script.Java.JavaCodeScriptEngine$InMemoryJavaFileManager.find(JavaCodeScriptEngine.Java:390)\\nat com.alibaba.ChaosBlade.exec.plugin.jvm.script.Java.JavaCodeScriptEngine$InMemoryJavaFileManager.list(JavaCodeScriptEngine.Java:375)\\nat com.sun.tools.Javac.api.ClientCodeWrapper$WrappedJavaFileManager.list(ClientCodeWrapper.Java:231)\\nat com.sun.tools.Javac.jvm.ClassReader.fillIn(ClassReader.Java:2796)\\nat com.sun.tools.Javac.jvm.ClassReader.complete(ClassReader.Java:2446)\\nat com.sun.tools.Javac.jvm.ClassReader.access$000(ClassReader.Java:76)\\nat com.sun.tools.Javac.jvm.ClassReader$1.complete(ClassReader.Java:240)\\nat com.sun.tools.Javac.code.Symbol.complete(Symbol.Java:574)\\nat com.sun.tools.Javac.comp.MemberEnter.visitTopLevel(MemberEnter.Java:507)\\nat com.sun.tools.Javac.tree.JCTree$JCCompilationUnit.accept(JCTree.Java:518)\\nat com.sun.tools.Javac.comp.MemberEnter.memberEnter(MemberEnter.Java:437)\\nat com.sun.tools.Javac.comp.MemberEnter.complete(MemberEnter.Java:1038)\\nat com.sun.tools.Javac.code.Symbol.complete(Symbol.Java:574)\\nat com.sun.tools.Javac.code.Symbol$ClassSymbol.complete(Symbol.Java:1037)\\nat com.sun.tools.Javac.comp.Enter.complete(Enter.Java:493)\\nat com.sun.tools.Javac.comp.Enter.main(Enter.Java:471)\\nat com.sun.tools.Javac.main.JavaCompiler.enterTrees(JavaCompiler.Java:982)\\nat com.sun.tools.Javac.main.JavaCompiler.compile(JavaCompiler.Java:857)\\nat com.sun.tools.Javac.main.Main.compile(Main.Java:523)\\nat com.sun.tools.Javac.api.JavacTaskImpl.doCall(JavacTaskImpl.Java:129)\\nat com.sun.tools.Javac.api.JavacTaskImpl.call(JavacTaskImpl.Java:138)\\nat com.alibaba.ChaosBlade.exec.plugin.jvm.script.Java.JavaCodeScriptEngine.compileClass(JavaCodeScriptEngine.Java:149)\\nat com.alibaba.ChaosBlade.exec.plugin.jvm.script.Java.JavaCodeScriptEngine.compile(JavaCodeScriptEngine.Java:113)\\nat com.alibaba.ChaosBlade.exec.plugin.jvm.script.base.AbstractScriptEngineService.doCompile(AbstractScriptEngineService.Java:82)\\nat com.alibaba.ChaosBlade.exec.plugin.jvm.script.base.AbstractScriptEngineService.compile(AbstractScriptEngineService.Java:69)\\nat com.alibaba.ChaosBlade.exec.plugin.jvm.script.model.DynamicScriptExecutor.run(DynamicScriptExecutor.Java:74)\\nat com.alibaba.ChaosBlade.exec.common.injection.Injector.inject(Injector.Java:73)\\nat com.alibaba.ChaosBlade.exec.common.aop.AfterEnhancer.afterAdvice(AfterEnhancer.Java:46)\\nat com.alibaba.ChaosBlade.exec.common.plugin.MethodEnhancer.afterAdvice(MethodEnhancer.Java:47)\\nat com.alibaba.ChaosBlade.exec.bootstrap.jvmsandbox.AfterEventListener.onEvent(AfterEventListener.Java:93)\\nat com.alibaba.jvm.sandbox.core.enhance.weaver.EventListenerHandler.handleEvent(EventListenerHandler.Java:116)\\nat com.alibaba.jvm.sandbox.core.enhance.weaver.EventListenerHandler.handleOnEnd(EventListenerHandler.Java:426)\\nat com.alibaba.jvm.sandbox.core.enhance.weaver.EventListenerHandler.handleOnReturn(EventListenerHandler.Java:363)\\n```\\n\u901a\u8fc7\u7ebf\u7a0b\u5806\u6808\u53ef\u4ee5\u770b\u5230\u7ebf\u7a0b\u4e3b\u8981\u662f\u5728\u89e3\u538bjar\u6587\u4ef6\u662f\u963b\u585e\u4e86\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u963b\u585e\u5230\u8fd9\u91cc\u5462\uff1f\\n\\n\u5176\u5b9e\u662f\u5728ChaosBlade \u6ce8\u5165\u81ea\u5b9a\u4e49\u811a\u672c\u65f6\uff0c\u81ea\u5b9a\u4e49\u811a\u672c\uff08Java\u4ee3\u7801\uff09\u53ea\u662f\u88ab\u5f53\u4f5c\u4e00\u6bb5\u5b57\u7b26\u4e32\u6765\u5904\u7406\uff0c\u5f53\u771f\u6b63\u7684\u6fc0\u6d3b\u63d2\u4ef6\u65f6\u4f1a\u628a\u8fd9\u6bb5\u5b57\u7b26\u4e32\u89e3\u6790\uff0c\u7136\u540e\u53d8\u6210Java\u4ee3\u7801\u8ba9jvm\u8fdb\u884c\u52a0\u8f7d\u7f16\u8bd1\u5e76\u6267\u884c\u8fd9\u6bb5\u4ee3\u7801\u3002\\n\\n![script_compilation.png](/img/2022-09-09-chaosblade-java/script_compilation.png)\\n\\n**\u95ee\u9898\u5c31\u5728\u8fd9\u91cc,\u5f53\u6545\u969c\u6ce8\u5165\u65f6\u5916\u90e8\u6d41\u91cf\u4e5f\u662f\u5728\u6e90\u6e90\u4e0d\u65ad\u7684\u8c03\u7528\u5f53\u524d\u670d\u52a1\u7684\u3002\u90a3\u4e48\u6309\u7167\u4e0a\u9762\u8bf4\u7684\u903b\u8f91\u5c31\u6709\u53ef\u80fd\u5728\u6fc0\u6d3b\u63d2\u4ef6\u65f6\uff0c\u56e0\u4e3a\u5916\u90e8\u6d41\u91cf\u4e5f\u5728\u4e0d\u65ad\u8c03\u7528\uff0c\u5bfc\u81f4\u5927\u91cf\u8bf7\u6c42\u90fd\u6765\u89e3\u6790\u81ea\u5b9a\u4e49\u811a\u672c\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u9020\u6210\u4e86\u7ebf\u7a0b\u88abblocked\uff0c\u56e0\u4e3a\u89e3\u6790\u81ea\u5b9a\u4e49\u811a\u672c\u5230\u6b63\u786e\u7684\u8ba9jvm\u52a0\u8f7d\u5b83\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u76f8\u5bf9\u590d\u6742\u4e14\u7f13\u6162\u7684\uff0c\u800c\u4e14\u6709\u7684\u5730\u65b9\u662f\u8981\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u7684\u3002**\\n> \u5176\u5b9eChaosBlade \u4e5f\u505a\u4e86\u7f13\u5b58\uff0c\u53ea\u8981\u81ea\u5b9a\u4e49\u811a\u672c\u88ab\u7f16\u8bd1\u8fc7\u4e00\u6b21\uff0c\u540e\u9762\u7684\u8bf7\u6c42\u5c31\u4f1a\u76f4\u63a5\u6267\u884c\u8fd9\u4e2a\u811a\u672c\u4e86\uff0c\u4f46\u8fd9\u6837\u7684\u7f13\u5b58\u5728\u5e76\u53d1\u8bf7\u6c42\u7684\u573a\u666f\u4e0b\u7f16\u8bd1\u6548\u679c\u5e76\u4e0d\u597d\\n\\n\\n### 4.2.3 \u4f18\u5316\\n\u901a\u8fc7\u4e0a\u9762\u7684\u6392\u67e5\uff0c\u5176\u5b9e\u5e94\u8be5\u53ef\u4ee5\u60f3\u5230\u4f18\u5316\u624b\u6bb5\u4e86\uff0c\u90a3\u5c31\u662f\u8981\u8ba9\u81ea\u5b9a\u4e49\u811a\u672c\u7684\u52a0\u8f7d\u65f6\u95f4\u63d0\u524d\u3002\\n\\nChaosBlade\u6ce8\u5165\u6545\u969c\u5206\u4e3a\u4e24\u6b65,\u7b2c\u4e00\u6b65\u6302\u8f7dagent\u65f6\u62ff\u4e0d\u5230\u81ea\u5b9a\u4e49\u811a\u672c\u4fe1\u606f\uff0c\u90a3\u4e48\u5c31\u5728\u7b2c\u4e8c\u6b65**\u6fc0\u6d3b\u63d2\u4ef6\u524d\u8fdb\u884c\u52a0\u8f7d**\uff08\u56e0\u4e3a\u4e00\u65e6\u63d2\u4ef6\u88ab\u6fc0\u6d3b\u540e\u5c31\u6709\u6d41\u91cf\u4f1a\u6267\u884c\u5230\u6545\u969c\u6ce8\u5165\u7684\u57cb\u70b9\u65b9\u6cd5\u4ece\u800c\u89e6\u53d1\u811a\u672c\u7684\u7f16\u8bd1\u4e86\uff09\\n\\n![script_optimize.png](/img/2022-09-09-chaosblade-java/script_optimize.png)\\n\\n**\u8fd9\u4e2a\u4f18\u5316\u601d\u8def\u4e0d\u4ec5\u4ec5\u9002\u7528\u4e8e\u81ea\u5b9a\u4e49\u811a\u672c\u6545\u969c\uff0c\u4f8b\u5982\u81ea\u5b9a\u4e49\u629b\u5f02\u5e38\u6545\u969c\u4e5f\u662f\u53ef\u4ee5\u7684\u3002**\\n\\n**\u5728\u81ea\u5b9a\u4e49\u629b\u5f02\u5e38\u7684\u6545\u969c\u6267\u884c\u4e2d\uff0c\u4e5f\u662f\u5f53\u6d41\u91cf\u8fc7\u6765\u65f6\u624d\u4f1a\u6839\u636e\u7528\u6237\u8f93\u5165\u7684\u5f02\u5e38\u7c7b\u5b57\u7b26\u8fdb\u884c\u53cd\u5c04\u52a0\u8f7d\uff0c\u7c7b\u7684\u52a0\u8f7d(classloader)\u5e95\u5c42\u4e5f\u662f\u9700\u8981\u52a0\u9501\u7684\uff0c\u6240\u4ee5\u4e5f\u6709\u53ef\u80fd\u9020\u6210\u7ebf\u7a0bblocked.**\\n\\n\u4f18\u5316\u5185\u5bb9:\u589e\u52a0\u6545\u969c\u524d\u7f6e\u6267\u884c\u63a5\u53e3\uff0c\u9488\u5bf9\u9700\u8981\u5728\u6545\u969c\u6ce8\u5165\u524d\uff0c\u6267\u884c\u67d0\u4e9b\u52a8\u4f5c\u7684\u63d2\u4ef6\u53ef\u4ee5\u53bb\u5b9e\u73b0\u5b83\u3002\\n```java\\npublic interface PreActionExecutor {\\n    /**\\n     * Pre run executor\\n     *\\n     * @param enhancerModel\\n     * @throws Exception\\n     */\\n    void preRun(EnhancerModel enhancerModel) throws ExperimentException;\\n}\\n\\n```\\n```java\\nprivate void applyPreActionExecutorHandler(ModelSpec modelSpec, Model model)\\n        throws ExperimentException {\\n    ActionExecutor actionExecutor = modelSpec.getActionSpec(model.getActionName()).getActionExecutor();\\n    if (actionExecutor instanceof PreActionExecutor) {\\n        EnhancerModel enhancerModel = new EnhancerModel(EnhancerModel.class.getClassLoader(), model.getMatcher());\\n        enhancerModel.merge(model);\\n        ((PreActionExecutor) actionExecutor).preRun(enhancerModel);\\n    }\\n}\\n```\\n\u76f8\u5173pr:[https://github.com/ChaosBlade-io/ChaosBlade-exec-jvm/pull/269](https://github.com/chaosblade-io/chaosblade-exec-jvm/pull/269)\\n\\n## 4.3 \u65e5\u5fd7\u6253\u5370\u4f18\u5316\\n\\n###  4.3.1 \u95ee\u9898\u63cf\u8ff0\\n\u65e5\u5fd7\u6253\u5370\u5bfc\u81f4\u7684CPU Idle\u8dcc\u5e95\u95ee\u9898\u4e3b\u8981\u6709\u4e24\u65b9\u9762:\\n\\n1. \u4e1a\u52a1\u7cfb\u7edf\u5185\u90e8\u81ea\u8eab\u7684\u65e5\u5fd7\u6846\u67b6\uff0c\u4f8b\u5982\u4f7f\u7528log4j/logback\u540c\u6b65\u65e5\u5fd7\u6253\u5370\uff0c\u5982\u679c\u5728\u6ce8\u5165\u6545\u969c\u540e\uff08\u4f8b\u5982\u629b\u5f02\u5e38\uff09**\u5f88\u6709\u53ef\u80fd\u56e0\u4e3a\u4e1a\u52a1\u7cfb\u7edf\u5904\u7406\u5f02\u5e38\u5e76\u6253\u5370\u65e5\u5fd7\u5bfc\u81f4\u7ebf\u7a0b\u5927\u9762\u79ef\u88abblocked\u3002**\u56e0\u4e3a\u540c\u6b65\u65e5\u5fd7\u6253\u5370\u662f\u9700\u8981\u52a0\u9501\u5904\u7406\uff0c\u5e76\u4e14\u5f02\u5e38\u5806\u6808\u662f\u76f8\u5bf9\u5185\u5bb9\u8f83\u591a\u7684\u6253\u5370\u4e5f\u76f8\u5bf9\u8017\u65f6\uff0c\u4ece\u800c\u5f53QPS\u8f83\u9ad8\u65f6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5927\u91cf\u7ebf\u7a0b\u88ab\u963b\u585e\u3002\\n```java\\n- locked <0x00000006f08422d0> (a org.apache.log4j.DailyRollingFileAppender)\\nat org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.Java:66)\\nat org.apache.log4j.Category.callAppenders(Category.Java:206)\\n- locked <0x00000006f086daf8> (a org.apache.log4j.Logger)\\nat org.apache.log4j.Category.forcedLog(Category.Java:391)\\nat org.apache.log4j.Category.log(Category.Java:856)\\nat org.slf4j.impl.Log4jLoggerAdapter.log(Log4jLoggerAdapter.Java:601)\\n```\\n![log_print_optimize.png](/img/2022-09-09-chaosblade-java/log_print_optimize.png)\\n\\n2. ChaosBlade \u81ea\u8eab\u7684\u65e5\u5fd7\u6253\u5370,\u6bcf\u6b21\u6545\u969c\u6ce8\u5165\u89c4\u5219\u5339\u914d\u6210\u529f\u65f6\u90fd\u4f1a\u8f93\u51fainfo\u65e5\u5fd7\\n```java\\nLOGGER.info(\\"Match rule: {}\\", JsonUtil.writer().writeValueAsString(model));\\n```\\n\u5728\u8f93\u51fa\u65e5\u5fd7\u7684\u65f6\u5019\u90fd\u4f1a\u5c06\u6545\u969c\u6a21\u578b\u4f7f\u7528jackson\u5e8f\u5217\u5316\u8f93\u51fa,\u8fd9\u4f1a\u89e6\u53d1\u7c7b\u52a0\u8f7d\uff08\u52a0\u9501\u64cd\u4f5c\uff09\u5f53\u6709\u5927\u91cf\u8bf7\u6c42\u65f6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5927\u91cf\u7ebf\u7a0b\u963b\u585e\u3002\\n```java\\nJava.lang.Thread.State: RUNNABLE\\nat Java.lang.String.charAt(String.Java:657)\\nat Java.io.UnixFileSystem.normalize(UnixFileSystem.Java:87)\\nat Java.io.File.<init>(File.Java:279)\\nat sun.net.www.protocol.file.Handler.openConnection(Handler.Java:80)\\n- locked <0x00000000c01f2740> (a sun.net.www.protocol.file.Handler)\\nat sun.net.www.protocol.file.Handler.openConnection(Handler.Java:72)\\n- locked <0x00000000c01f2740> (a sun.net.www.protocol.file.Handler)\\nat Java.net.URL.openConnection(URL.Java:979)\\nat sun.net.www.protocol.jar.JarFileFactory.getConnection(JarFileFactory.Java:65)\\nat sun.net.www.protocol.jar.JarFileFactory.getPermission(JarFileFactory.Java:154)\\nat sun.net.www.protocol.jar.JarFileFactory.getCachedJarFile(JarFileFactory.Java:126)\\nat sun.net.www.protocol.jar.JarFileFactory.get(JarFileFactory.Java:81)\\n- locked <0x00000000c00171f0> (a sun.net.www.protocol.jar.JarFileFactory)\\nat sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.Java:122)\\nat sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.Java:152)\\nat Java.net.URL.openStream(URL.Java:1045)\\nat Java.lang.ClassLoader.getResourceAsStream(ClassLoader.Java:1309)\\n......\\nat Java.lang.reflect.Method.invoke(Method.Java:498)\\nat com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.Java:689)\\nat com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.Java:755)\\nat com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.Java:178)\\nat com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.Java:728)\\nat com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.Java:755)\\nat com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.Java:178)\\nat com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.Java:480)\\nat com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.Java:319)\\nat com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.Java:1516)\\nat com.fasterxml.jackson.databind.ObjectWriter._writeValueAndClose(ObjectWriter.Java:1217)\\nat com.fasterxml.jackson.databind.ObjectWriter.writeValueAsString(ObjectWriter.Java:1086)\\nat com.alibaba.ChaosBlade.exec.common.injection.Injector.inject(Injector.Java:69)\\nat com.alibaba.ChaosBlade.exec.common.aop.AfterEnhancer.afterAdvice(AfterEnhancer.Java:46)\\nat com.alibaba.ChaosBlade.exec.common.plugin.MethodEnhancer.afterAdvice(MethodEnhancer.Java:47)\\nat com.alibaba.ChaosBlade.exec.bootstrap.jvmsandbox.AfterEventListener.onEvent(AfterEventListener.Java:93)\\nat com.alibaba.jvm.sandbox.core.enhance.weaver.EventListenerHandler.handleEvent(EventListenerHandler.Java:116)\\nat com.alibaba.jvm.sandbox.core.enhance.weaver.EventListenerHandler.handleOnEnd(EventListenerHandler.Java:426)\\nat com.alibaba.jvm.sandbox.core.enhance.weaver.EventListenerHandler.handleOnReturn(EventListenerHandler.Java:363)\\nat Java.com.alibaba.jvm.sandbox.spy.Spy.spyMethodOnReturn(Spy.Java:192)\\n\\n```\\n\\n###  4.3.2 \u4f18\u5316\\n\u5173\u4e8e\u4e1a\u52a1\u7cfb\u7edf\u7684\u65e5\u5fd7\u6253\u5370\u5f15\u53d1\u7684\u7ebf\u7a0bblock\uff0c\u4e0d\u5728ChaosBlade\u4f18\u5316\u7684\u8303\u56f4\u5185\uff0c\u5927\u5bb6\u6709\u9047\u5230\u7c7b\u4f3c\u60c5\u51b5\u53ef\u4ee5\u81ea\u884c\u89e3\u51b3\u3002\\n\\n\u89e3\u51b3\u7684\u601d\u8def:\\n\\n1. \u65e5\u5fd7\u540c\u6b65\u6253\u5370\u6539\u4e3a\u5f02\u6b65\u6253\u5370\\n2. ChaosBlade\u81ea\u5b9a\u4e49\u629b\u5f02\u5e38\u65f6\u7684\u9519\u8bef\u5806\u6808\u53ef\u4ee5\u5c3d\u91cf\u5ffd\u7565\uff0c\u51cf\u5c11\u65e5\u5fd7\u8f93\u51fa\u7684\u5185\u5bb9\u3002\\n\\n\u5173\u4e8eChaosBlade \u6253\u5370\u65e5\u5fd7\u7684\u4f18\u5316\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c\u53ea\u9700\u8981\u5c06match rule\u5e8f\u5217\u5316\u6545\u969c\u6a21\u578b\u7684\u90e8\u5206\u66ff\u6362\u6389\u5373\u53ef\u3002\u5c06Model\u5b9e\u73b0toString\uff0c\u6253\u5370\u65f6\u76f4\u63a5\u6253\u5370Model\u5373\u53ef\u3002\\n```java\\nLOGGER.info(\\"Match rule: {}\\", model);\\n```\\n```java\\n@Override\\npublic String toString() {\\n    return \\"Model{\\" +\\n            \\"target=\'\\" + target + \'\\\\\'\' +\\n            \\", matchers=\\" + matcher.getMatchers().toString() +\\n            \\", action=\\" + action.getName() +\\n            \'}\';\\n}\\n```\\n\u76f8\u5173pr:[https://github.com/ChaosBlade-io/ChaosBlade-exec-jvm/pull/260](https://github.com/chaosblade-io/chaosblade-exec-jvm/pull/260)\\n\\n# 5.Metaspace OOM\u4f18\u5316\\nMetaspace \u662f\u4ec0\u4e48\uff0c\u5f15\u7528\u5b98\u65b9\u4ecb\u7ecd\\n```java\\nMetaspace is a native (as in: off-heap) memory manager in the hotspot.\\nIt is used to manage memory for class metadata. Class metadata are allocated when classes are loaded. \\nTheir lifetime is usually scoped to that of the loading classloader - when a loader gets collected, all class metadata it accumulated are released in bulk.\\n```\\n**\u7b80\u5355\u6765\u8bf4\uff1aMetapace \u662f\u4e00\u5757\u975e\u5806\u5185\u5b58\uff0c\u7528\u6765\u5b58\u50a8\u7c7b\u7684\u5143\u6570\u636e\uff0c\u5f53\u52a0\u8f7d\u7c7b\u7684\u65f6\u5019\u4f1a\u5728 Metaspace \u4e2d\u5206\u914d\u7a7a\u95f4\u5b58\u50a8\u7c7b\u7684\u5143\u6570\u636e\uff0c\u5f53\u67d0\u4e2a ClassLoader \u5173\u95ed\u65f6\u4f1a\u5bf9\u5e94\u91ca\u653e\u6389\u5bf9\u7c7b\u5143\u6570\u636e\u7684\u5f15\u7528\uff0c\u5f53\u89e6\u53d1 GC \u65f6\u8fd9\u90e8\u5206\u7c7b\u5143\u6570\u636e\u5360\u7528\u7684\u7a7a\u95f4\u5373\u53ef\u5728 Metaspace \u4e2d\u88ab\u56de\u6536\u6389\u3002**\\n\\n## 5.1 \u73b0\u8c61\\n**\u65e5\u5fd7\u8868\u73b0**\\n\\n\u5728\u4f7f\u7528ChaosBlade\u6ce8\u5165\u65e0\u6548\u540e\uff0c\u767b\u9646\u76ee\u6807\u673a\u5668\u4e0a\u89c2\u5bdf\u65e5\u5fd7\uff0c\u9996\u5148\u53d1\u73b0 jvm-sandbox \u5728 attach \u76ee\u6807 jvm \u65f6\u5931\u8d25\\n\\n![attach_jvm_fail.png](/img/2022-09-09-chaosblade-java/attach_jvm_fail.png)\\n\\n\u5176\u6b21\u770b\u5230\u66f4\u5173\u952e\u7684\u65e5\u5fd7:Metaspace \u6ea2\u51fa\u4e86\uff01\uff01\uff01\\n\\n![metaspace_out_of_memory.png](/img/2022-09-09-chaosblade-java/metaspace_out_of_memory.png)\\n\\n## 5.2 \u5b9a\u4f4d\\n\u5728\u6587\u7ae0\u5f00\u59cb\u4ecb\u7ecd\u4e86ChaosBlade\u6ce8\u5165Java\u6545\u969c\u7684\u6d41\u7a0b\uff0c\u77e5\u9053\u5728\u6545\u969c\u6ce8\u5165\u65f6\u4f1a\u5c06 jvm-sandbox \u52a8\u6001\u7684\u6302\u8f7d(attach)\u5230\u76ee\u6807\u8fdb\u7a0b JVM \u4e0a,\u5728 attach \u540e\u4f1a\u52a0\u8f7d sandbox \u5185\u90e8 jar \u4ee5\u53ca sandbox \u7684\u81ea\u5b9a\u4e49\u6a21\u5757 jar \u7b49\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4f1a\u52a0\u8f7d\u5927\u91cf\u7684\u7c7b\uff0c\u5f53\u52a0\u8f7d\u7c7b\u65f6\u4f1a\u5206\u914d Metaspace \u7a7a\u95f4\u5b58\u50a8\u7c7b\u7684\u5143\u6570\u636e\u3002\\n\\n\u8fd9\u91cc\u6709\u4e24\u4e2a\u601d\u8003\u70b9:\\n\\n1. **\u4f1a\u4e0d\u4f1a\u662f\u56e0\u4e3a\u4e1a\u52a1\u670d\u52a1 JVM \u7684 Metaspace \u7a7a\u95f4\u8bbe\u7f6e\u7684\u592a\u5c0f\uff1f**\\n2. **Metaspace \u7684 GC \u6ca1\u6709\u89e6\u53d1\u6216\u8005\u662f\u6709\u6cc4\u9732\u5bfc\u81f4\u7c7b\u7684\u5143\u6570\u636e\u56de\u6536\u4e0d\u6389\uff1f**\\n\\n\u767b\u9646\u5230\u76ee\u6807\u673a\u5668\u4e0a\u5229\u7528 jinfo \u89c2\u5bdf jvm \u7684\u53c2\u6570,\u53d1\u73b0 MaxMetaspaceSize \u8bbe\u7f6e\u4e86 128M\uff0c\u8fd9\u4e2a\u503c\u786e\u5b9e\u4e0d\u5927\uff0c\u56e0\u4e3a MaxMetaspaceSize \u7684\u9ed8\u8ba4\u662f-1(\u65e0\u9650\u5236\uff0c\u53d7\u9650\u4e8e\u672c\u5730\u5185\u5b58)\u3002\\n\\n\u8ba9\u4e1a\u52a1\u670d\u52a1\u8c03\u6574 MaxMetaspaceSize \u53c2\u6570\u6539\u4e3a 256M\uff0c\u7136\u540e\u91cd\u542f Java \u8fdb\u7a0b\uff0c\u518d\u6b21\u6545\u969c\u6ce8\u5165 \u786e\u5b9e\u6ca1\u95ee\u9898\u4e86\uff0c\u6545\u969c\u6b63\u5e38\u751f\u6548\u4e86\u3002\\n\\n**\u4f46\u5b9e\u9645\u95ee\u9898\u6ca1\u600e\u4e48\u7b80\u5355\uff0c\u5728\u8fde\u7eed\u6ce8\u5165\u591a\u6b21\u540e\u4f9d\u7136\u51fa\u73b0 Metaspace OOM \u6545\u969c\u4f9d\u65e7\u65e0\u6548\u3002\u770b\u6765\u5e94\u8be5\u662f\u6545\u969c\u6e05\u9664\u65f6\u65e0\u6cd5\u56de\u6536\u6389 Metaspace \u4e2d\u5bf9\u5e94\u7684\u7a7a\u95f4\u3002**\\n\\n**\u672c\u5730\u590d\u73b0**\\n\\n\u7531\u4e8eChaosBlade Java\u6545\u969c\u6ce8\u5165\u672c\u8d28\u662fjvm-sandbox\u7684\u4e00\u4e2a\u63d2\u4ef6\uff0c\u7c7b\u52a0\u8f7d\uff0c\u5b57\u8282\u7801\u589e\u5f3a\u7b49\u6838\u5fc3\u903b\u8f91\u90fd\u5728jvm-sandebox\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5c06\u95ee\u9898\u5b9a\u4f4d\u5728jvm-sandbox\u4e0a\uff0c\u5229\u7528jvm-sandbox\u63d0\u4f9b\u7684demo\u9879\u76ee\u8fdb\u884c\u590d\u73b0\u3002\\n\\n\u542f\u52a8\u53c2\u6570\u8bbe\u7f6e\u4e86 MaxMetaspaceSize=30M\uff0c\u56e0\u4e3a demo \u6a21\u5757\u7c7b\u975e\u5e38\u5c11\uff0c\u5176\u6b21\u4e3a\u4e86\u5feb\u901f\u7684\u590d\u73b0 OOM\u3002\\n\\nTraceClassLoading \u548c TraceClassUnloding \u53c2\u6570\u5219\u662f\u4e3a\u4e86\u89c2\u5bdf JVM-SANDBOX \u5728\u6545\u969c\u6ce8\u5165\u548c\u6e05\u9664\u65f6\u52a0\u8f7d/\u5378\u8f7d\u7c7b\u7684\u4fe1\u606f\u3002\\n\\n![jvm_sandbox.png](/img/2022-09-09-chaosblade-java/jvm_sandbox.png)\\n\\n\u5728\u591a\u6b21\u6ce8\u5165\u4ee5\u53ca\u6e05\u9664\u7684\u64cd\u4f5c\u540e\uff0c\u590d\u73b0\u4e86\u7ebf\u4e0a\u4e1a\u52a1\u51fa\u73b0\u7684 Metaspace OOM\uff0c\u53ef\u4ee5\u770b\u5230\u5728\u591a\u6b21\u6ce8\u5165\u7684\u8fc7\u7a0b\u4e2d\uff0cMetaspace \u4e00\u76f4\u6ca1\u6709\u88ab\u56de\u6536\u8fc7\uff0c\u5360\u7528\u7a7a\u95f4\u66f2\u7ebf\u662f\u4e00\u8def\u4e0a\u5347\u3002\\n\\n![memory_pool_metaspace.png](/img/2022-09-09-chaosblade-java/memory_pool_metaspace.png)\\n\\n**Metaspace OOM \u662f\u56e0\u4e3a Metaspace \u6ca1\u6709\u8fdb\u884c\u8fc7\u56de\u6536\uff0cMetaspace \u56de\u6536\u7684\u524d\u63d0\u662f ClassLoader \u5173\u95ed\uff0c\u800c JVM-SANDBOX \u5728 shutdown \u65f6\u4f1a\u5173\u95ed ClassLoader\u3002JVM-SANDBOX \u4e2d\u81ea\u5b9a\u4e49\u7684 ClassLoader \u90fd\u662f\u7ee7\u627f\u4e86 URLClassLoader\uff0cURLClassLoader \u7684\u5173\u95ed\u65b9\u6cd5 \u5b98\u65b9\u4ecb\u7ecd\uff1a**\\n```java\\nHow to Close a URLClassLoader?\\nThe URLClassLoader close() method effectively eliminates the problem of how to support updated implementations of the classes and resources loaded from a particular codebase, and in particular from JAR files. In principle, once the application clears all references to a loader object, the garbage collector and finalization mechanisms will eventually ensure that all resources (such as the JarFile objects) are released and closed.\\n```\\n\u7b80\u5355\u6765\u8bf4\uff1a\u5f53 classLoader \u52a0\u8f7d\u7684\u6240\u6709\u7c7b\u6ca1\u6709\u88ab\u5f15\u7528\u65f6\u5373\u53ef\u88ab\u5173\u95ed\u3002\\n\\n**\u731c\u60f3**\\n**\u5f53\u6545\u969c\u6e05\u9664\u65f6 jvm-sandbox \u4e2d\u7684\u7c7b\u8fd8\u6709\u88ab\u5f15\u7528\u7684\u60c5\u51b5\u5bfc\u81f4 classloader \u5173\u95ed\u5931\u8d25\u4e86\u3002**\\n\\n**\u9a8c\u8bc1\u731c\u60f3**\\n**\u5728\u6545\u969c\u6e05\u9664\u540e\uff0c\u5728\u76ee\u6807\u670d\u52a1\u7684\u65b9\u6cd5\u4e0a debug \u770b\u4e00\u4e0b\u7ebf\u7a0b\u4fe1\u606f\uff0c\u679c\u7136\u5728 threadLocal \u4e2d\u627e\u5230\u4e86\u4e24\u4e2a jvm-sandbox \u7684\u5185\u90e8\u7c7b\uff08EventProcesser$Process,SandboxProtector\uff09\u7684\u5f15\u7528\u3002\u8bf4\u660e\u731c\u60f3\u662f\u5bf9\u7684\uff0c\u95ee\u9898\u7684\u539f\u56e0\u5c31\u662f\u51fa\u73b0\u5728\u8fd9\u91cc\u4e86**\\n\\n![current_thread.png](/img/2022-09-09-chaosblade-java/current_thread.png)\\n\\njvm-sandbox\u6e90\u7801\u5728\u8fd9\u91cc\u5c31\u4e0d\u5e26\u5927\u5bb6\u5206\u6790\u4e86\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u67e5\u770b\u8fd9\u7bc7[\u6587\u7ae0](https://xie.infoq.cn/article/c5be9834709f7eb48cfa683b1)\u3002\u4e3b\u8981\u662f jvm-sandbox \u7684\u4ee3\u7801\u5b9e\u73b0\u6709 bug\uff0c\u5728\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u4f1a\u5bfc\u81f4 processRef \u7684 ThreadLocal \u6ca1\u6709\u53ca\u65f6 remove \u9020\u6210\u6cc4\u6f0f\\n\\n1. \u5047\u5982\u5728\u6267\u884c\u6ce8\u5165\u6545\u969c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fdb\u884c\u6545\u969c\u6e05\u9664\u4f1a\u5bfc\u81f4\u6cc4\u6f0f\u3002\u5982\u4e0b\uff1a\\n\\n![fault_inject_and_clear.png](/img/2022-09-09-chaosblade-java/fault_inject_and_clear.png)\\n\\n2. \u5047\u8bbe\u4f7f\u7528\u4e86 jvm-sandbox \u7684\u7279\u6027-\u6d41\u7a0b\u53d8\u66f4\uff08\u4f8b\u5982\u7acb\u5373\u8fd4\u56de\uff0c\u7acb\u5373\u629b\u51fa\u5f02\u5e38\uff09\uff0c\u672c\u8d28\u4e5f\u662f thread local \u6ca1\u6709\u53ca\u65f6 remove\uff0c\u5bfc\u81f4\u9020\u6210\u4e86\u6cc4\u6f0f\\n\\n## 5.3 \u4f18\u5316\\n\u7531\u4e8ejvm-sandbox\u9879\u76ee\u5df2\u7ecf\u4e0d\u5728\u6d3b\u8dc3\u4e86\uff0c\u6211\u4eec\u5c06jvm-sandbox\u9879\u76eefork\u5230\u4e86ChaosBlade\u4e2d\u3002\\n\u4f18\u5316\u540e\u7684\u76f8\u5173pr:[https://github.com/ChaosBlade-io/jvm-sandbox/pull/1](https://github.com/chaosblade-io/jvm-sandbox/pull/1)\\n\\n## 5.4 \u6539\u8fdb\u540e\u6548\u679c\\n\u542f\u52a8\u53c2\u6570\u8fd8\u662f\u76f8\u540c\u7684 MaxMetaspaceSize=30M\uff0c\u7ecf\u8fc7\u4f18\u5316\u540e\u591a\u6b21\u6ce8\u5165\u548c\u6e05\u9664\u4e0d\u4f1a\u51fa\u73b0 Metaspace OOM\uff0cMetaspace\u53ef\u4ee5\u88ab\u56de\u6536\u4e86\u3002\\n\\n![no_metaspace_oom.png](/img/2022-09-09-chaosblade-java/no_metaspace_oom.png)\\n\\n\u5378\u8f7d\u7c7b\u7684\u4fe1\u606f\u4e5f\u6253\u5370\u51fa\u6765\u4e86\\n\\n![print_uninstall_class.png](/img/2022-09-09-chaosblade-java/print_uninstall_class.png)\\n\\n## 5.4 \u518d\u6b21\u4f18\u5316\\n**\u867d\u7136\u6211\u4eec\u89e3\u51b3\u4e86JVM-Sandbox\u7684ThreadLocal\u6cc4\u6f0f\u95ee\u9898\uff0c\u4f46\u662f\u7531\u4e8eMetaspace\u7684\u5185\u5b58\u5206\u914d\u4ee5\u53ca\u56de\u6536\u673a\u5236\u8fd8\u662f\u6709\u53ef\u80fd\u5bfc\u81f4OOM!!!.**\\n> **\u5173\u4e8eMetaspace\u7684\u5185\u5b58\u5206\u914d\u4ee5\u53ca\u56de\u6536\u7684\u76f8\u5173\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003**[\u6587\u7ae0](https://www.javadoop.com/post/metaspace)\\n\\n\\n\u4e0a\u9762\u7684\u4f18\u5316\u57fa\u7840\u4e0a\u8fd8\u9700\u8981\u5728\u6bcf\u4e00\u6b21\u6545\u969c\u6ce8\u5165\u524d\u89e6\u53d1\u4e00\u6b21full gc\uff0c\u76ee\u7684\u662f\u8ba9\u4e0a\u4e00\u6b21jvm-sandbox\u5360\u7528\u7684\u5143\u7a7a\u95f4\u5f3a\u5236\u91ca\u653e\u6389\u3002\\n\\n\u6539\u52a8\u70b9:\\n```java\\npublic static void agentmain(String featureString, Instrumentation inst) {\\n    System.gc();\\n    LAUNCH_MODE = LAUNCH_MODE_ATTACH;\\n    final Map<String, String> featureMap = toFeatureMap(featureString);\\n    writeAttachResult(\\n            getNamespace(featureMap),\\n            getToken(featureMap),\\n            install(featureMap, inst)\\n    );\\n}\\n```\\n\\n\u8fd9\u6837\u7684\u6539\u52a8\u7684\u867d\u7136\u80fd\u89e3\u51b3\u4e00\u90e8\u5206\u573a\u666f\u4e0b\u7684Metaspace OOM\uff0c\u4f46\u662f\u4e5f\u6709\u5f0a\u7aef,\u8fd9\u6837\u4f1a\u5bfc\u81f4\u6bcf\u4e00\u6b21\u6545\u969c\u6ce8\u5165\u6302\u8f7dagent\u65f6\u90fd\u4f1a\u89e6\u53d1\u4e00\u6b21full GC,\u5230\u76ee\u524d\u4e3a\u6b62\u8fd8\u6ca1\u6709\u66f4\u597d\u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u540e\u9762\u53ef\u4ee5\u8003\u8651\u5c06\u8fd9\u4e2afull gc\u505a\u6210\u914d\u7f6e\uff0c\u901a\u8fc7sandbox\u811a\u672c\u6765\u8fdb\u884c\u5f00\u542f\uff0c\u8ba9\u7528\u6237\u6309\u9700\u9009\u62e9\u662f\u5426\u8981\u5728\u6ce8\u5165\u524d\u5f3a\u5236full gc\u4e00\u6b21\u3002\\n\\n\u76f8\u5173pr:[https://github.com/ChaosBlade-io/jvm-sandbox/pull/6](https://github.com/chaosblade-io/jvm-sandbox/pull/6)\\n\\n\u90a3\u4e48\u5982\u4f55\u5f7b\u5e95\u89e3\u51b3Metaspace OOM\u95ee\u9898\u5462\uff1f\u5148\u8bf4\u7ed3\u8bba\uff1a\u4e0d\u80fd\u5f7b\u5e95\u89e3\u51b3\uff0c\u56e0\u4e3a\u5728\u4f7f\u7528\u53cd\u5c04\u7684\u60c5\u51b5\u4e0b\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e9b\uff08sun.reflect.DelegatingClassLoader\uff09\uff0c\u6240\u4ee5\u5728\u4e1a\u52a1\u4ee3\u7801\u4e2d\u5f88\u96be\u53bb\u5173\u95ed\uff0c\u90a3\u5c31\u5bfc\u81f4DelegatingClassLoader\u4f1a\u4e00\u76f4\u5b58\u6d3b\uff0c\u4ece\u800c\u5f15\u53d1Metaspace \u788e\u7247\u5316\u7684\u95ee\u9898\uff0c\u6700\u7ec8\u5bfc\u81f4Metaspace\u7a7a\u95f4\u65e0\u6cd5\u88ab\u6b63\u786e\u7684\u56de\u6536\uff08\u8fd9\u90e8\u5206\u5185\u5bb9\u6bd4\u8f83\u590d\u6742\uff0c\u4e00\u8a00\u4e24\u8bed\u5f88\u96be\u63cf\u8ff0\u6e05\u695a\uff09\\n<a name=\\"grkSk\\"></a>\\n## 5.5 \u601d\u8003\\n\u5173\u4e8eMetaspace OOM\u7684\u95ee\u9898\uff0c\u5176\u5b9e\u4f18\u5316\u662f\u4e00\u65b9\u9762\uff0c\u6362\u4e2a\u89d2\u5ea6\u60f3\u4e5f\u8bb8\u662f\u6211\u4eec\u4f7f\u7528\u7684\u65b9\u5f0f\u4e0d\u6b63\u786e\u3002\u5728\u6211\u4eec\u7684\u4e1a\u52a1\u573a\u666f\u4e0b\u662f\u4f1a\u9891\u7e41\u7684\u5bf9\u4e00\u4e2a\u670d\u52a1\u8fdb\u884c\u6545\u969c\u6ce8\u5165&\u5378\u8f7d\uff0c\u6bcf\u6b21\u7684\u6ce8\u5165\u70b9\u4e0d\u540c\u3002\\n\\n\u5982\u4e0b\u56fe: \u76f8\u5f53\u4e8e\u6bcf\u6b21\u90fd\u662f\u91cd\u590d1-4\u6b65\u9aa4\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u8fd9\u4e48\u505a\uff0c\u56e0\u4e3a\u5728\u7b2c\u4e00\u6b65\u65f6sandbox\u521d\u59cb\u5316\u4f1a\u52a0\u8f7d\u5927\u91cf\u7684\u7c7b\uff0c\u586b\u5145metaspace\u3002\u800c\u6211\u4eec\u6bcf\u6b21\u6ce8\u5165\u53ea\u662f\u6545\u969c\u70b9\u4e0d\u540c,agent\u4e0d\u9700\u8981\u91cd\u65b0\u6302\u8f7d\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u91cd\u590d\u7684\u8fdb\u884c\u7b2c2\u6b65\u548c\u7b2c\u4e09\u6b65\u5373\u53ef\u3002 \u5728\u7b2c2\u6b65\u548c\u7b2c3\u6b65\u4e2d\u53ea\u662f\u89e6\u53d1sandbox\u7684\u6fc0\u6d3b\u548c\u51bb\u7ed3\u4e8b\u4ef6\uff0c\u6210\u672c\u975e\u5e38\u5c0f\u3002\\n\\n\u540e\u9762\u6211\u4eec\u4f1a\u6839\u636e\u8fd9\u4e2a\u601d\u8def\uff0c\u5bf9\u6574\u4e2a\u6545\u969c\u6ce8\u5165\u6d41\u7a0b\u8fdb\u884c\u4f18\u5316\uff0c\u76f8\u4fe1\u4f1a\u6709\u66f4\u591a\u7684\u63d0\u5347\u3002\\n\\n![optimize_thought.png](/img/2022-09-09-chaosblade-java/optimize_thought.png)\\n\\n# 6.JIT(\u53ca\u65f6\u7f16\u8bd1)\u5bfc\u81f4CPU\u6296\u52a8\\n## 6.1 \u95ee\u9898\u63cf\u8ff0\\n\u5728Java\u4e2d\u7f16\u8bd1\u5668\u4e3b\u8981\u5206\u4e3a\u4e09\u7c7b\uff1a\\n\\n1. \u524d\u7aef\u7f16\u8bd1\u5668:JDK\u7684Javac\uff0c\u5373\u628a*.Java\u6587\u4ef6\u8f6c\u53d8\u6210*.class\u6587\u4ef6\u7684\u8fc7\u7a0b\\n2. \u5373\u65f6\u7f16\u8bd1\u5668:HotSpot\u865a\u62df\u673a\u7684C1,C2\u7f16\u8bd1\u5668,Graal\u7f16\u8bd1\u5668\uff0cJVM\u8fd0\u884c\u671f\u628a\u5b57\u8282\u7801\u8f6c\u53d8\u6210\u672c\u5730\u673a\u5668\u7801\u7684\u8fc7\u7a0b\\n3. \u63d0\u524d\u7f16\u8bd1\u5668:JDK\u7684Jaotc,GNU Compiler for the Java(GCJ)\u7b49\\n\\n\u5728\u901a\u8fc7ChaosBlade\u8fdb\u884c\u6545\u969c\u6ce8\u5165\u540e\uff0c\u672c\u8d28\u662f\u5229\u7528jvm-sandbox\u5bf9\u76ee\u6807\u7c7b\u548c\u653e\u706b\u8fdb\u884c\u4e86\u5b57\u8282\u7801\u589e\u5f3a\u3002\u4ece\u800c\u4e5f\u4f1a\u89e6\u53d1JVM\u7684\u5373\u65f6\u7f16\u8bd1\uff08JIT-\\tJust In Time\uff09\\n\\nJVM\u7684\u5373\u65f6\u7f16\u8bd1\u76ee\u7684\u662f\u8ba9\u5b57\u8282\u7801\u8f6c\u6362\u4e3a\u673a\u5668\u7801\uff0c\u4ece\u800c\u53ef\u4ee5\u66f4\u9ad8\u6548\u7684\u6267\u884c\u3002\u4f46\u662f\u5728JVM\u5373\u65f6\u7f16\u8bd1\u7684\u8fc7\u7a0b\u4e2d\u662f\u4f1a\u6d88\u8017\u8d44\u6e90\u7684\uff0c\u6700\u5178\u578b\u7684\u573a\u666f\u5c31\u662fJava\u7684\u670d\u52a1 \u5728\u521a\u542f\u52a8\u65f6CPU\u7684\u4f7f\u7528\u7387\u90fd\u4f1a\u76f8\u5bf9\u8f83\u9ad8\uff0c\u4e00\u6bb5\u65f6\u95f4\u540e\u9010\u6e10\u6062\u590d\u5e73\u7a33\uff0c\u51fa\u73b0\u8fd9\u79cd\u73b0\u8c61\u90e8\u5206\u60c5\u51b5\u4e0b\u662f\u56e0\u4e3a\u5373\u65f6\u7f16\u8bd1\u7684\u4ecb\u5165\u5bfc\u81f4\u7684\u3002\u5173\u4e8e\u5373\u65f6\u7f16\u8bd1\u7684\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003[\u6587\u7ae0](https://xie.infoq.cn/article/dacbe19251f8ec828efacdfde)\\n\\n\u5bf9\u4e8e\u5373\u65f6\u7f16\u8bd1\u5f15\u53d1\u7684CPU\u4f7f\u7528\u7387\u5347\u9ad8\u662f\u6b63\u5e38\u73b0\u8c61\uff0c\u5982\u679c\u9047\u5230JIT\u5360\u7528\u7684CPU \u4f7f\u7528\u7387\u7279\u522b\u9ad8\uff0c\u6211\u4eec\u9700\u8981\u7279\u6b8a\u5173\u6ce8\u4e0b\u5373\u65f6\u7f16\u8bd1\u7684\u53c2\u6570\u5373\u53ef\u3002\u4f8b\u5982\u662f\u5426\u542f\u7528\u4e86\u5206\u5c42\u7f16\u8bd1\uff0c\u7f16\u8bd1\u7684\u7ebf\u7a0b\u6570\u91cf\u7b49\u7b49\u3002\\n\\n# 7.\u603b\u7ed3\\nChaosBlade \u652f\u6301\u4e30\u5bcc\u7684\u6545\u969c\u6ce8\u5165\u573a\u666f\uff0c\u5c24\u5176\u662f\u5728Java \u751f\u6001\u4e2d\u652f\u6301\u5927\u91cf\u7684\u63d2\u4ef6\u3002\u5bf9\u4e8eJava \u573a\u666f\u7684\u6545\u969c\u6ce8\u5165\u4f18\u52bf\u6bd4\u8f83\u660e\u663e\u3002\\n\\n\u901a\u8fc7\u5bf9\u4e0a\u9762\u4ecb\u7ecd\u7684\u95ee\u9898\u8fdb\u884c\u4f18\u5316\uff0c\u4f7f\u7528ChaosBlade\u8fdb\u884cJava\u573a\u666f\u7684\u6545\u969c\u6ce8\u5165\u4e0d\u4f1a\u518d\u5bfc\u81f4CPU Idle\u8dcc\u5e95\uff0c\u5373\u4f7f\u5728\u7ebf\u4e0a\u8fd0\u884c\u7684\u670d\u52a1\u8fdb\u884c\u6545\u969c\u6ce8\u5165\u4e5f\u4f1a\u5c06CPU\u7684\u6296\u52a8\u63a7\u5236\u5728\u4e00\u4e2a\u8f83\u5c0f\u7684\u6ce2\u52a8\u8303\u56f4\u3002\\n\\n\u4f46\u7531\u4e8eJVM JIT\u7684\u95ee\u9898\u5728\u6545\u969c\u6ce8\u5165\u65f6CPU\u7684\u77ac\u65f6\u6296\u52a8\u8fd8\u662f\u65e0\u6cd5\u907f\u514d\uff0c\u5982\u679c\u5927\u5bb6\u6709\u4ec0\u4e48\u597d\u7684\u529e\u6cd5/\u60f3\u6cd5\u4e5f\u6b22\u8fce\u63d0\u4ea4issue/pr\u6765\u5171\u540c\u4ea4\u6d41\uff5e\\n\\n> ChaosBlade \u5b98\u65b9\u7f51\u5740\uff1a[https://chaosblade.io/](https://chaosblade.io/)\\n> ChaosBlade Github : [https://github.com/chaosblade-io/chaosblade](https://github.com/chaosblade-io/chaosblade)\\n> ChaosBlade \u9489\u9489\u793e\u533a\u4ea4\u6d41\u7fa4:23177705"},{"id":"/2022/06/24/ChaosBlade-Box-a-New-Version-of-the-Chaos-Engineering-Platform-Has-Released-ch","metadata":{"permalink":"/en/blog/2022/06/24/ChaosBlade-Box-a-New-Version-of-the-Chaos-Engineering-Platform-Has-Released-ch","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2022-06-24-ChaosBlade-Box-a-New-Version-of-the-Chaos-Engineering-Platform-Has-Released-ch.md","source":"@site/blog/2022-06-24-ChaosBlade-Box-a-New-Version-of-the-Chaos-Engineering-Platform-Has-Released-ch.md","title":"ChaosBlade-Box\u5168\u65b0\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0 -- \u52a9\u529b\u4f01\u4e1a\u6df7\u6c8c\u5de5\u7a0b\u843d\u5730","description":"\u672c\u6587\u4f1a\u7740\u91cd\u4ecb\u7ecd\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0\u65b0\u7248\u672c\u529f\u80fd\u7279\u6027\u3002","date":"2022-06-24T00:00:00.000Z","formattedDate":"June 24, 2022","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":8.095,"hasTruncateMarker":true,"authors":[{"name":"\u8521\u94ed\u971e\uff08\u94ed\u5c11\uff0c@MandssS\uff09","title":"Maintainer of ChaosBlade","url":"https://github.com/MandssS","imageURL":"https://avatars.githubusercontent.com/u/13030286?v=4","key":"camix"}],"frontMatter":{"title":"ChaosBlade-Box\u5168\u65b0\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0 -- \u52a9\u529b\u4f01\u4e1a\u6df7\u6c8c\u5de5\u7a0b\u843d\u5730","authors":"camix","tags":["chaosblade"],"description":"\u672c\u6587\u4f1a\u7740\u91cd\u4ecb\u7ecd\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0\u65b0\u7248\u672c\u529f\u80fd\u7279\u6027\u3002","hide_table_of_contents":false},"prevItem":{"title":"ChaosBlade Java \u573a\u666f\u6027\u80fd\u4f18\u5316\uff0c\u90a3\u4e9b\u4f60\u4e0d\u77e5\u9053\u7684\u4e8b","permalink":"/en/blog/2022/09/09/chaosblade-java"},"nextItem":{"title":"ChaosBlade-Box, a New Version of the Chaos Engineering Platform Has Released","permalink":"/en/blog/2022/06/24/ChaosBlade-Box-a-New-Version-of-the-Chaos-Engineering-Platform-Has-Released"}},"content":"\u57282020.11.25 AWS\u53d1\u751f\u4e86\u670d\u52a1\u5927\u9762\u79ef\u6545\u969c\uff0c\u9020\u6210\u4e86\u591a\u4e2a\u4e91\u4ea7\u54c1\u670d\u52a1\u53d7\u5f71\u54cd\uff0c\u4e0d\u5230\u4e00\u4e2a\u6708\u7684\u65f6\u95f4\u5185\u8c37\u6b4c\u53d1\u751f\u4e86\u90a3\u5e74\u7684\u7b2c\u4e09\u6b21\u5927\u89c4\u6a21\u5b95\u673a\uff0c\u9020\u6210\u4e86\u6ce2\u53ca20\u4ebf\u7528\u6237\uff0c\u635f\u5931170\u4e07\u7f8e\u5143\u7684\u5de8\u5927\u635f\u5931\u3002\\n\u7cfb\u7edf\u67b6\u6784\u7ecf\u5386\u4e86\u5355\u673a \u5230 \u5206\u5e03\u5f0f\uff0c\u518d\u5230\u73b0\u5728\u7684\u4e91\u539f\u751f\u67b6\u6784\uff0c\u5176\u590d\u6742\u5ea6\u4e0d\u65ad\u4e0a\u6da8\uff0c\u95ee\u9898\u5b9a\u4f4d\u7684\u96be\u5ea6\u4e5f\u968f\u4e4b\u4e0a\u6da8\u3002\u9762\u5bf9\u968f\u65f6\u90fd\u53ef\u80fd\u53d1\u751f\u7684\u6545\u969c\uff0c\u6709\u6ca1\u6709\u4ec0\u4e48\u7684\u529e\u6cd5\u80fd\u5f88\u597d\u89e3\u51b3\u8fd9\u4e2a\u56f0\u5883\u3002\\n\u6df7\u6c8c\u5de5\u7a0b\uff08Chaos Engineering\uff09\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e0a\u8fdb\u884c\u5b9e\u9a8c\u7684\u5b66\u79d1\uff0c\u901a\u8fc7\u4e3b\u52a8\u6ce8\u5165\u6545\u969c\u7684\u65b9\u5f0f\uff0c\u63d0\u524d\u53d1\u73b0\u7cfb\u7edf\u7684\u8584\u5f31\u70b9\uff0c\u63a8\u8fdb\u67b6\u6784\u7684\u6539\u8fdb\uff0c\u6700\u7ec8\u5b9e\u73b0\u4e1a\u52a1\u97e7\u6027\u3002\u4ece\u800c\u907f\u514d\u6545\u969c\u5728\u7ebf\u4e0a\u8fd0\u884c\u73af\u5883\u4e0a\u53d1\u751f\u3002\\n![image.png](/img/blog/fault-always.png)\\n\x3c!--truncate--\x3e\\n\u8fd9\u91cc\u62ff\u4e91\u539f\u751f\u67b6\u6784\u6765\u4e3e\u4f8b\u8bf4\u660e\uff0c\u4e3a\u4ec0\u4e48\u6df7\u6c8c\u5de5\u7a0b\u80fd\u89e3\u51b3\u7cfb\u7edf\u67b6\u6784\u4e2d\u5b58\u5728\u7684\u95ee\u9898\u3002\u4e91\u539f\u751f\u67b6\u6784\u539f\u5219\u548c\u6df7\u6c8c\u5de5\u7a0b\u539f\u5219\u662f\u53ef\u4ee5\u627e\u5230\u5bf9\u5e94\u5173\u7cfb\uff0c\u4ee5\u670d\u52a1\u5316\u539f\u5219\u8bf4\u660e\uff0c\u670d\u52a1\u5316\u539f\u5219\u5176\u6839\u672c\u5c31\u662f\u670d\u52a1\u5982\u4f55\u6cbb\u7406\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u5224\u65ad\u4e0a\u4e0b\u6e38\u670d\u52a1\u4e4b\u95f4\u5f3a\u5f31\u4f9d\u8d56\u5173\u7cfb\u7684\u95ee\u9898\u3002\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06\u8bf7\u6c42\u5b9a\u4f4d\u5230\u5177\u4f53\u673a\u5668\uff0c\u518d\u7f29\u5c0f\u5230\u5177\u4f53\u673a\u5668\u4e0a\u7684\u5e94\u7528\uff0c\u4e0d\u65ad\u6700\u5c0f\u5316\u7206\u70b8\u534a\u5f84\uff0c\u901a\u8fc7\u5728\u5e94\u7528\u4e4b\u95f4\u6ce8\u5165\u6545\u969c\uff0c\u5224\u65ad\u4e0a\u4e0b\u6e38\u670d\u52a1\u662f\u5426\u6b63\u5e38\uff0c\u6765\u5224\u65ad\u5176\u5f3a\u5f31\u4f9d\u8d56\u5173\u7cfb\u3002\\n\\n![image.png](/img/blog/why-chaos-engineering.png)\\n\u6df7\u6c8c\u5de5\u7a0b\u7684\u76ee\u6807\u662f\u5b9e\u73b0\u97e7\u6027\u67b6\u6784\uff0c\u8fd9\u91cc\u5305\u542b\u4e24\u4e2a\u90e8\u5206\uff1a\u97e7\u6027\u7cfb\u7edf\u548c\u97e7\u6027\u7ec4\u7ec7\u3002\u97e7\u6027\u7cfb\u7edf\u5177\u6709\u5197\u4f59\u6027\u3001\u6269\u5c55\u6027\u3001\u4e0d\u53ef\u53d8\u57fa\u7840\u8bbe\u65bd\u3001\u65e0\u72b6\u6001\u5e94\u7528\u3001\u907f\u514d\u7ea7\u8054\u6545\u969c\u7b49\u3002\u97e7\u6027\u7ec4\u7ec7\u5305\u542b\u9ad8\u6548\u4ea4\u4ed8\u3001\u6545\u969c\u9884\u6848\u3001\u5e94\u6025\u54cd\u5e94\u673a\u5236\u7b49\u3002\u9ad8\u5ea6\u97e7\u6027\u7684\u7cfb\u7edf\u4e5f\u4f1a\u51fa\u73b0\u9884\u671f\u4e4b\u5916\u7684\u6545\u969c\uff0c\u6240\u4ee5\u97e7\u6027\u7684\u7ec4\u7ec7\u80fd\u5f25\u8865\u97e7\u6027\u7cfb\u7edf\u7f3a\u5931\u7684\u90e8\u5206\uff0c\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u6784\u5efa\u6781\u81f4\u7684\u97e7\u6027\u67b6\u6784\u3002\\n![image.png](/img/blog/chaos-engineering-target.png)\\n\u6df7\u6c8c\u5de5\u7a0b\u5c31\u662f\u901a\u8fc7\u4e3b\u52a8\u6ce8\u5165\u6545\u969c\u7684\u65b9\u5f0f\uff0c\u63d0\u524d\u53d1\u73b0\u7cfb\u7edf\u7684\u8584\u5f31\u70b9\uff0c\u63a8\u8fdb\u67b6\u6784\u6539\u8fdb\uff0c\u6700\u7ec8\u5b9e\u73b0\u4e1a\u52a1\u97e7\u6027\u3002\u5f15\u5165\u6df7\u6c8c\u5de5\u7a0b\u5bf9\u4e8e\u4e0d\u540c\u804c\u80fd\u7684\u4eba\u800c\u8a00\uff0c\u5176\u4e1a\u52a1\u4ef7\u503c\u6709\u6240\u4e0d\u540c\uff1a\\n\\n- \u67b6\u6784\u5e08\uff1a\u80fd\u5e2e\u52a9\u5176\u9a8c\u8bc1\u67b6\u6784\u7684\u5bb9\u9519\u80fd\u529b\\n- \u5f00\u53d1/\u8fd0\u7ef4\uff1a\u80fd\u63d0\u9ad8\u5176\u6545\u969c\u7684\u5e94\u6025\u6548\u7387\\n- \u6d4b\u8bd5\uff1a\u5e2e\u52a9\u5176\u63d0\u65e9\u66b4\u9732\u7ebf\u4e0a\u95ee\u9898\uff0c\u964d\u4f4e\u6545\u969c\u590d\u53d1\u7387\\n- \u4ea7\u54c1/\u8bbe\u8ba1\uff1a\u63d0\u793a\u5ba2\u6237\u4f7f\u7528\u4f53\u9a8c\\n\\n![image.png](/img/blog/value-of-chaos-engineering-for-position.png)\\n\\n# \u5982\u4f55\u843d\u5730\u6df7\u6c8c\u5de5\u7a0b\uff1f\\n\u5bf9\u4e8e\u4f01\u4e1a\u6216\u4e1a\u52a1\u5982\u4f55\u5bf9\u6df7\u6c8c\u5de5\u7a0b\u8fdb\u884c\u843d\u5730\uff1f\u6709\u65e0\u5de5\u5177\u6216\u5e73\u53f0\u80fd\u5e2e\u52a9\u5176\u5feb\u901f\u843d\u5730\uff1f\\nChaosBlade \u662f\u4e00\u6b3e\u9075\u5faa\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u7684\u6df7\u6c8c\u5b9e\u9a8c\u6267\u884c\u5de5\u5177\uff0c\u5177\u6709\u573a\u666f\u4e30\u5bcc\u5ea6\u9ad8\uff0c\u7b80\u5355\u6613\u7528\u7b49\u7279\u70b9\uff0c\u652f\u6301\u591a\u5e73\u53f0\u3001\u591a\u8bed\u8a00\u73af\u5883\uff0c\u5305\u62ecLinux\u3001Kubernetes\u548cDocker\u5e73\u53f0\uff0c\u652f\u6301Java\u3001NodeJS\u3001C++\u3001Golang \u8bed\u8a00\u5e94\u7528\u3002\u652f\u6301200\u591a\u4e2a\u573a\u666f\uff0c3000\u591a\u4e2a\u53c2\u6570\u3002\u662f\u4e00\u6b3e\u7528\u4e8e\u7aef\u4fa7\u7684\u6545\u969c\u6ce8\u5165\u5de5\u5177\uff0c\u4f46\u5728\u4e1a\u52a1\u8fdb\u884c\u843d\u5730\u65f6\uff0c\u4f1a\u5b58\u5728\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a\\n\\n- \u6545\u969c\u6ce8\u5165\u8fc7\u7a0b\u5982\u4f55\u53ef\u89c6\u5316\uff1f\\n- \u5982\u4f55\u540c\u65f6\u5bf9\u591a\u4e2a\u96c6\u7fa4\u6216\u4e3b\u673a\u8fdb\u884c\u6545\u969c\u6ce8\u5165\uff1f\\n- \u5982\u4f55\u62ff\u5230\u6574\u4f53\u6f14\u7ec3\u7684\u7edf\u8ba1\u4fe1\u606f\\n- ......\\n\\n\u6240\u4ee5\u5728ChaosBlade\u4e4b\u4e0a\u8fd8\u9700\u8981\u5e73\u53f0\u5c42\uff0c\u5bf9\u6df7\u6c8c\u5de5\u7a0b\u6267\u884c\u5de5\u5177\u8fdb\u884c\u7ba1\u7406\u4e0e\u6f14\u7ec3\u7f16\u6392\u3002\\n![image.png](/img/blog/chaosblae-tool.png)\\nChaosBlade-Box\u662f\u9762\u5411\u591a\u96c6\u7fa4\u3001\u591a\u8bed\u8a00\u3001\u591a\u73af\u5883\uff0c\u5f00\u6e90\u7684\u4e91\u539f\u751f\u6df7\u6c8c\u5de5\u7a0b\u63a7\u5236\u53f0\u3002\\n\u5f00\u6e90\u5e73\u53f0\u548c\u6ce8\u5165\u5de5\u5177\u7684\u6574\u4f53\u67b6\u6784\u5982\u4e0b\uff0c\u4e3b\u8981\u5305\u62ec\u51e0\u4e2a\u7ec4\u6210\u6a21\u5757\uff1a\\n\\n- ChaosBlade-Box Console \uff1a\u6df7\u6c8c\u5b9e\u9a8c\u7528\u6237\u754c\u9762\\n- ChaosBlade-Box\uff1aServer\u540e\u7aef\u670d\u52a1\uff0c\u4e3b\u8981\u5305\u62ec\u6f14\u7ec3\u573a\u666f\u7684\u7f16\u6392\u548c\u5b89\u5168\u7ba1\u63a7\u3001\u6df7\u6c8c\u5de5\u7a0b\u5de5\u5177\u90e8\u7f72\uff08ChaosBlade\u3001LitmusChaos...\uff09\u3001\u652f\u6301\u63a2\u9488\u7ba1\u7406\u548c\u591a\u7ef4\u5ea6\u5b9e\u9a8c\\n- Agent\uff1a\u63a2\u9488\uff0c\u4e3b\u8981\u6709\uff08ChaosBlade-Box\uff09Server\u7aef\u8fdb\u884c\u5efa\u8054\u5e76\u4fdd\u6301\u5fc3\u8df3\u3001\u4e0a\u62a5k8s\u76f8\u5173\u6570\u636e\u3001\u6f14\u7ec3\u547d\u4ee4\u4e0b\u53d1\u901a\u9053\u7b49\u529f\u80fd\\n- ChaosBlade\uff1a\u90e8\u7f72\u5728\u4e1a\u52a1\u7684\u4e3b\u673a\u6216k8s\u96c6\u7fa4\u5185\uff0c\u5728\u7aef\u4fa7\u8fdb\u884c\u6f14\u7ec3\u7684\u5de5\u5177\\n\\n![image.png](/img/blog/chaosblade-architecture.png)\\n\\n\u65b0\u7248ChaosBlade-Box\u5e73\u53f0\u662f\u4e00\u4e2a\u9762\u5411\u591a\u96c6\u7fa4\u3001\u591a\u73af\u5883\u3001\u591a\u8bed\u8a00\u7684\u4e91\u539f\u751f\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0\u3002\u652f\u6301\u56fd\u9645\u5316\u4e2d\u82f1\u6587\u5207\u6362\uff0c\u652f\u6301\u5168\u5c40\u547d\u540d\u7a7a\u95f4\uff0c\u4f7f\u5f97\u540c\u4e00\u7528\u6237\u53ef\u6839\u636e\u81ea\u5df1\u9700\u6c42\uff0c\u8bbe\u7f6e\u4e0d\u540c\u7684\u5168\u5c40\u547d\u540d\u7a7a\u95f4\uff0c\u5982\uff1a\u6d4b\u8bd5\u7a7a\u95f4\u3001\u6c99\u76d2\u7a7a\u95f4\u548c\u7ebf\u4e0a\u7a7a\u95f4\u7b49\u3002\u63d0\u4f9b\u81ea\u52a8\u5316\u7684\u5de5\u5177\u90e8\u7f72\uff0c\u7b80\u5316\u5de5\u5177\u5b89\u88c5\u6b65\u9aa4\uff0c\u63d0\u9ad8\u6267\u884c\u6548\u7387\u3002\u5e73\u53f0\u652f\u6301\u4e0d\u540c\u73af\u5883\u7684\u63a2\u9488\u5b89\u88c5\u548c\u6f14\u7ec3\uff0c\u5982\u4e3b\u673a\u548cKubernetes\uff0c\u5176\u4e2dKubernetes\u73af\u5883\u4e0b\u652f\u6301 Node\u3001Pod\u3001Container\u7ef4\u5ea6\u4e0b\u7684\u6f14\u7ec3\u3002\u5728Kubernetes\u73af\u5883\u4e0b\u4f1a\u81ea\u52a8\u6536\u96c6\u96c6\u7fa4\u5185\u7684Pod\u76f8\u5173\u6570\u636e\uff0c\u5e76\u5728\u5e94\u7528\u7ba1\u7406\u4e2d\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\uff0c\u8fd9\u6837\u7b80\u5316\u7528\u6237\u6f14\u7ec3\u67e5\u8be2\u6b65\u9aa4\uff0c\u65e0\u9700\u53bb\u96c6\u7fa4\u5185\u67e5\u770b\u8981\u6f14\u7ec3\u5e94\u7528\u7684Pod\u540d\u6216Container\u540d\u3002\u5e76\u652f\u6301\u4e00\u952e\u8fc1\u79fb\u5230\u4f01\u4e1a\u7248\uff0c\u6309\u9700\u5c06\u793e\u533a\u7248\u7684\u6f14\u7ec3\u6570\u636e\u540c\u6b65\u5230\u4f01\u4e1a\u7248\u3002\\n\\n![image.png](/img/blog/chaosblade-box-overview.png)\\n![image.png](/img/blog/chaosblade-box-application-manage.png)\\n\\n![image.png](/img/blog/chaosblade-box-experiment.png)\\n![image.png](/img/blog/chaosblade-box-migrate.png)\\n\u4ee5\u4e0b\u662f\u5728\u65b0\u7248ChaosBlade-Box\u5e73\u53f0\u4e0a\u8fdb\u884c\u4e00\u6b21\u6f14\u7ec3\u7684\u5168\u8fc7\u7a0b\uff0c\u652f\u6301\u987a\u5e8f\u6267\u884c\u3001\u9636\u6bb5\u6267\u884c\u4e24\u79cd\u6d41\u7a0b\u7f16\u6392\uff0c\u987a\u5e8f\u6267\u884c\u6307\u7684\u662f\u591a\u4e2a\u6f14\u7ec3\u573a\u666f\u4f9d\u6b21\u751f\u6548\uff0c\u9636\u6bb5\u6267\u884c\u6307\u7684\u662f\u591a\u4e2a\u6f14\u7ec3\u573a\u666f\u540c\u65f6\u751f\u6548\u3002\u901a\u8fc7\u591a\u79cd\u5b89\u5168\u7b56\u7565\u4fdd\u8bc1\u6f14\u7ec3\u5f97\u5230\u6062\u590d\uff0c\u5982\u624b\u52a8\u89e6\u53d1\u548c\u81ea\u52a8\u505c\u6b62\uff0c\u81ea\u52a8\u505c\u6b62\u901a\u8fc7\u5728\u6f14\u7ec3\u914d\u7f6e\u7684\u65f6\u5019\u8bbe\u7f6e\u8d85\u65f6\u53c2\u6570\u6765\u8fdb\u884c\u914d\u7f6e\uff0c\u8fd9\u6837\u5373\u4fbf\u5e73\u53f0\u548c\u63a2\u9488\uff08Agent\uff09\u5931\u8054\uff0c\u65e0\u6cd5\u8fdb\u884c\u624b\u52a8\u505c\u6b62\u65f6\uff0c\u4e5f\u80fd\u5728\u8d85\u65f6\u65f6\u95f4\u5230\u8fbe\u7684\u65f6\u5019\uff0c\u81ea\u52a8\u6062\u590d\u6545\u969c\u3002\\n![image.png](/img/blog/chaosblade-box-workflow.png)\\n![image.png](/img/blog/chaosblade-box-result.png)\\n# \u65b0\u7248\u4f18\u52bf\u662f\u4ec0\u4e48\uff1f\\n\u6b64\u6b21\u53d1\u5e03\u7684\u65b0\u7248\u76f8\u8f83\u4e8e\u8001\u7248\uff0c\u524d\u7aef\u754c\u9762\u548c\u4f01\u4e1a\u7248\u8fdb\u884c\u7edf\u4e00\uff0c\u7b80\u5316\u4f7f\u7528\u4e60\u60ef\u7684\u5207\u6362\u6210\u672c\uff0c\u66f4\u4e3a\u5b8c\u5584\u7684\u56fd\u9645\u5316\u4e2d\u82f1\u6587\u5207\u6362\uff0c\u5e76\u652f\u6301\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u7684\u5207\u6362\uff1b\u540e\u7aef\u63d0\u4f9b\u4e86\u66f4\u4e3a\u6d41\u7545\u7684\u6f14\u7ec3\u7f16\u6392\uff0c\u5b8c\u5584\u7684\u5e94\u7528\u7ba1\u7406\uff0c\u5e76\u52a0\u5f3a\u4e86\u5bf9\u63a2\u9488\u7684\u7ba1\u63a7\uff0c\u5e76\u652f\u6301\u4e00\u952e\u8fc1\u79fb\u5230\u4f01\u4e1a\u7248\uff1b\u52a0\u5f3a\u4e86\u63a2\u9488\u7684\u529f\u80fd\uff0c\u63d0\u4f9b\u4e86\u66f4\u52a0\u5b8c\u5584\u7684API\uff0c\u652f\u6301\u591a\u73af\u5883\u90e8\u7f72\u4e14\u652f\u6301\u5728\u4e0d\u540c\u73af\u5883\u4f5c\u4e3a\u6f14\u7ec3\u901a\u9053\uff0c\u652f\u6301\u81ea\u52a8\u5b89\u88c5\u5378\u8f7d\uff0c\u5e76\u6536\u96c6\u5e76\u4e0a\u62a5\u6570\u636e\u7b80\u5316\u6f14\u7ec3\u6d41\u7545\u3002\\n![image.png](/img/blog/chaoblade-box-advantage.png)"},{"id":"/2022/06/24/ChaosBlade-Box-a-New-Version-of-the-Chaos-Engineering-Platform-Has-Released","metadata":{"permalink":"/en/blog/2022/06/24/ChaosBlade-Box-a-New-Version-of-the-Chaos-Engineering-Platform-Has-Released","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2022-06-24-ChaosBlade-Box-a-New-Version-of-the-Chaos-Engineering-Platform-Has-Released.md","source":"@site/blog/2022-06-24-ChaosBlade-Box-a-New-Version-of-the-Chaos-Engineering-Platform-Has-Released.md","title":"ChaosBlade-Box, a New Version of the Chaos Engineering Platform Has Released","description":"\u672c\u6587\u4f1a\u7740\u91cd\u4ecb\u7ecd\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0\u65b0\u7248\u672c\u529f\u80fd\u7279\u6027\u3002","date":"2022-06-24T00:00:00.000Z","formattedDate":"June 24, 2022","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":6.655,"hasTruncateMarker":true,"authors":[{"name":"\u8521\u94ed\u971e\uff08\u94ed\u5c11\uff0c@MandssS\uff09","title":"Maintainer of ChaosBlade","url":"https://github.com/MandssS","imageURL":"https://avatars.githubusercontent.com/u/13030286?v=4","key":"camix"}],"frontMatter":{"title":"ChaosBlade-Box, a New Version of the Chaos Engineering Platform Has Released","authors":"camix","tags":["chaosblade"],"description":"\u672c\u6587\u4f1a\u7740\u91cd\u4ecb\u7ecd\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0\u65b0\u7248\u672c\u529f\u80fd\u7279\u6027\u3002","hide_table_of_contents":false},"prevItem":{"title":"ChaosBlade-Box\u5168\u65b0\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0 -- \u52a9\u529b\u4f01\u4e1a\u6df7\u6c8c\u5de5\u7a0b\u843d\u5730","permalink":"/en/blog/2022/06/24/ChaosBlade-Box-a-New-Version-of-the-Chaos-Engineering-Platform-Has-Released-ch"},"nextItem":{"title":"\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0 ChaosBlade-Box \u65b0\u7248\u91cd\u78c5\u53d1\u5e03","permalink":"/en/blog/2022/06/24/ChaosBlade-Box-new-release"}},"content":"![image.png](/img/logo.png)\\n# 1. Preface\\n* What Is ChaosBlade-Box?\\nChaosBlade-Box is an open-source cloud-native Chaos Engineering console of Alibaba Cloud for multiple clusters, languages, and environments. The main features include a unified chaos experiment user interface, Chaos Engineering tool deployment (such as ChaosBlade and LitmusChaos), and the support for experimental scenario management and multi-dimensional experiments.\\n\\n* What Is ChaosBlade?\\nChaosBlade is an easy-to-use, efficient, and open-source Chaos Engineering experimental tool of Alibaba Cloud, which conforms with the experimental model. It supports multi-platform, multi-language environment, and more than 200 drill scenarios, such as host system -> container -> Kubernetes cluster -> common components (Elasticsearch, Redis, and MySQL) -> application (Java, Golang, C++, and NodeJS), and over 3,000 parameters.\\n\\n* What Is Chaos Engineering?\\nChaos Engineering is a discipline that conducts experiments on distributed systems. Chaos Engineering helps detect weak points of systems in advance, promotes the improvement of the architecture, and finally realizes business resilience by actively injecting faults.\\n\\nSince 2021, major enterprises have paid attention to and invested in the research and development of Chaos Engineering. ChaosBlade (an open-source Chaos Engineering tool from Alibaba) has officially become a CNCF Sandbox project. A new version of the ChaosBlade-Box was released to help users of open-source projects implement Chaos Engineering better. The following sections describe the features of the new version.\\n\x3c!--truncate--\x3e\\n\\n# 2. An Introduction to the New ChaosBlade-Box\\nChaosBlade-Box aims to build a unified Chaos Engineering operation platform. Since its release, it has received extensive attention from the open-source community. There are also the following problems.\\n\\n- The Community Edition has insufficient support for drills on Kubernetes clusters, which is mainly due to the inability to obtain cluster-related data for drill application selection automatically and cumbersome drill steps that need to fill in cluster configuration manually information to locate a cluster. As a result, it is inconvenient to use.\\nThe Community Edition cannot meet the needs of developers in the international open-source community. Also, it has insufficient control capabilities for probes.\\n- The Community Edition and the Enterprise Edition are separate from each other, which impacts the user experience and causes heavy migration costs when users of open-source projects turn to the Enterprise Edition later. The costs are related to data migration and operating habits.\\n\\nIn view of the problems above, the ChaosBlade-Box and Agent were revised significantly to integrate the Community Edition with the kernel of the Enterprise Edition, unify user operation habits, upgrade the system architecture of the Community Edition, and enhance its component features.\\n\\n## 2.1 An Overall Introduction to ChaosBlade-Box\\nThe new ChaosBlade-Box console is a multi-cluster, multi-environment, and multi-language cloud-native Chaos Engineering platform. It provides Chinese and English versions and supports global namespaces. Therefore, the same user can set different global namespaces according to their needs, such as test space, sandbox space, and online space. It offers automated tool deployment to simplify tool installation steps and improve execution efficiency. ChaosBlade-Box supports probe installation and drills in different environments, such as hosts and Kubernetes. It supports drills in nodes, pods, and containers in the Kubernetes environment. Data related to pods in a cluster is automatically collected and managed in a unified manner in application management. Thus, it simplifies the steps of the user drill query. Users do not need to go to the cluster to view the names of the pods or containers of the applications needed to be drilled. It also supports one-click migration to the Enterprise Edition and synchronizes drill data from the Community Edition to the Enterprise Edition as needed.\\n\\n![](https://yqintl.alicdn.com/195e46237592afcf57adf52d50d8ea136d2de43d.png)\\n\\n## 2.2 The New Drill Process\\nThe following is the whole process of a drill on the new ChaosBlade-Box platform. Sequential execution and stage execution are supported. Sequential execution refers to multiple drill scenarios taking effect in sequence, while stage execution is multiple drill scenarios taking effect at the same time. A variety of security policies are used to ensure the drill is resumed, such as manual penalty and automatic stop. Automatic stop is configured by setting the timeout parameter during the drill configuration. This way, even if the platform and the probe (agent) are disconnected and cannot perform manual stop, the fault can be automatically recovered when the system reaches the timeout period.\\n\\n![](https://yqintl.alicdn.com/9701a60906c4e4d2f79bdb9347567f12937a58ae.png)\\n![](https://yqintl.alicdn.com/85d11b85170e8c18ac8e377c1770ca5295214dce.png)\\n\\n# 3. An Introduction to the Architecture\\nThe following figure illustrates the system architecture of the new ChaosBlade and its component features:\\n\\n![](https://yqintl.alicdn.com/c0fb4cedc18aaf4f663b529865591598cd693204.png)\\n\\n**Components** \\n- ChaosBlade-Box Console: The Chaos Engineering console frontend is responsible for frontend interface interaction.\\n- ChaosBlade-Box Server: It mainly provides capabilities for drill orchestration, scenario management, drill tool hosting, and one-click migration.\\n- Agent: As the probe of Chaos Engineering, it is mainly used for issuing and executing commands for data collection and drill.\\n- ChaosBlade: As a chaotic engineering experiment tool, it supports different environments such as hosts, Docker, and Kubernetes.\\n# 4. Advantages of the New ChaosBlade-Box\\n## 4.1 An Upgrade to ChaosBlade-Box Features\\nThe console of the new Community Edition has the following features:\\n\\n**1) Internationalization** \\n\\nIt supports languages switching between Chinese and English.\\n\\n**2) Namespace Switch**\\n\\nIt supports global space switching, allowing the same user to set different global namespaces according to their needs, such as test space, sandbox space, and online space.\\n\\n**3) More Smooth Drill Arrangement**\\n\\nThe smooth orchestration is consistent with the drill process orchestration of the Enterprise Edition. Also, it supports parallel or serial drill processes for multiple fault drills at the same time.\\n\\n**4) Improved Application Management**\\n\\nIt provides more comprehensive application management features and supports applications deployed in the host and Kubernetes environments, including application overview, machine list, drill records, and application configuration.\\n\\n**5) Seamless Migration**\\n\\nIt is consistent with the operation interface of the Enterprise Edition and provides the one-click migration feature. It can automatically replace the probe with the public cloud one, register the drill machine to the Enterprise Edition, and synchronize the drill data to the Enterprise Edition. As a result, it can easily and simply switch to the Enterprise Edition.\\n\\n**6) Safety**\\n\\nIt offers multiple fault recovery strategies to ensure that the issued drills can be recovered.\\n\\n**7) Multi-Environment Deployment**\\n\\nIt supports deployment methods in different environments, including hosts, Docker, and Kubernetes.\\n\\n**8) Hierarchical Drill Scenarios**\\n\\nThe drill scenarios are displayed in different categories. When you create a drill, the drill scenarios can be displayed in different categories in real-time according to the selected drill target.\\n\\n## 4.2 An Upgrade to Probe (Agent) Features\\nThe new probe (agent) has more features:\\n\\n**1) Support for Drill Channels for Different Environments**\\n\\nIt can be used as a channel of drill command delivery in different environments. Thus, it simplifies the steps of the old version required to specify the kubeconfig of the cluster to perform the drill in the Kubernetes environment.\\n\\n**2) A More Complete API**\\n\\nIt unifies the agent external API interface to facilitate expansion and docking.\\n\\n**3) Automatic Data Collection and Reporting**\\n\\nA new server that reports data related to Kubernetes to the console in the Kubernetes environment is added. This allows users to select drill targets in the Kubernetes environment.\\n\\n**4) Automatic Uninstallation of the Probe**\\n\\nThe automatic probe uninstallation interface is added to directly control the probe installation and uninstallation in the console.\\n\\n**5) Keep Alive**\\n\\nAdd a probe script to guarantee the liveness of the probe process\\n\\n**6) Multi-Environment Deployment**\\n\\nIt supports deployment in different environments, including hosts, Docker, and Kubernetes.\\n\\n# 5. Summary\\nChaos Engineering is an approach to ensure the high availability of the system. Alibaba made ChaosBlade-Box (Chaos Engineering Console) open-source in 2021. ChaosBlade has been widely used as China\'s first open-source Chaos Engineering tool. It aims to help implement the Community Edition of Chaos Engineering, manage different open-source fault injection tools, and build a unified Chaos Engineering operation platform. This new version has a lot of improvements in the use of the user interface and the realization of functions, making it easier and more convenient to use and implement Chaos Engineering.\\n\\n# 6. Recommended Links\\n[1] chaosblade-box: https://github.com/chaosblade-io/chaosblade-box\\n\\n[2] chaosblade-box-agent: https://github.com/chaosblade-io/chaosblade-box-agent\\n\\n[3] chaosblade: https://github.com/chaosblade-io/chaosblade"},{"id":"/2022/06/24/ChaosBlade-Box-new-release","metadata":{"permalink":"/en/blog/2022/06/24/ChaosBlade-Box-new-release","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2022-06-24-ChaosBlade-Box-new-release.md","source":"@site/blog/2022-06-24-ChaosBlade-Box-new-release.md","title":"\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0 ChaosBlade-Box \u65b0\u7248\u91cd\u78c5\u53d1\u5e03","description":"\u672c\u6587\u4f1a\u7740\u91cd\u4ecb\u7ecd\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0\u65b0\u7248\u672c\u529f\u80fd\u7279\u6027\u3002","date":"2022-06-24T00:00:00.000Z","formattedDate":"June 24, 2022","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":9.745,"hasTruncateMarker":true,"authors":[{"name":"\u8521\u94ed\u971e\uff08\u94ed\u5c11\uff0c@MandssS\uff09","title":"Maintainer of ChaosBlade","url":"https://github.com/MandssS","imageURL":"https://avatars.githubusercontent.com/u/13030286?v=4","key":"camix"}],"frontMatter":{"title":"\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0 ChaosBlade-Box \u65b0\u7248\u91cd\u78c5\u53d1\u5e03","authors":"camix","tags":["chaosblade"],"description":"\u672c\u6587\u4f1a\u7740\u91cd\u4ecb\u7ecd\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0\u65b0\u7248\u672c\u529f\u80fd\u7279\u6027\u3002","hide_table_of_contents":false},"prevItem":{"title":"ChaosBlade-Box, a New Version of the Chaos Engineering Platform Has Released","permalink":"/en/blog/2022/06/24/ChaosBlade-Box-a-New-Version-of-the-Chaos-Engineering-Platform-Has-Released"},"nextItem":{"title":"ChaosBlade, From the Chaos Engineering Experiment Tool to the Chaos Engineering Platform","permalink":"/en/blog/2022/03/03/ChaosBlade-From-the-Chaos-Engineering-Experiment-Tool-to-the-Chaos-Engineering-Platform"}},"content":"![image.png](/img/logo.png)\\n# 1. \u524d\u8a00\\n\\n- ChaosBlade-Box\u662f\u4ec0\u4e48\uff1f\\n> ChaosBlade-Box\u662f\u9762\u5411\u591a\u96c6\u7fa4\u3001\u591a\u8bed\u8a00\u3001\u591a\u73af\u5883\uff0c\u963f\u91cc\u5f00\u6e90\u7684\u4e91\u539f\u751f\u6df7\u6c8c\u5de5\u7a0b\u63a7\u5236\u53f0\u3002\u4e3b\u8981\u529f\u80fd\u6709\uff1a\u7edf\u4e00\u6df7\u6c8c\u5b9e\u9a8c\u7528\u6237\u754c\u9762\u3001\u6df7\u6c8c\u5de5\u7a0b\u5de5\u5177\u90e8\u7f72\uff08ChaosBlade\u3001LitmusChaos...\uff09\u3001\u652f\u6301\u5b9e\u9a8c\u573a\u666f\u7ba1\u7406\u548c\u591a\u7ef4\u5ea6\u5b9e\u9a8c\u7b49\u3002\\n\\n- ChaosBlade\u662f\u4ec0\u4e48\uff1f\\n> ChaosBlade\u662f\u9075\u5faa\u5b9e\u9a8c\u6a21\u578b\u3001\u7b80\u5355\u6613\u7528\u3001\u529f\u80fd\u5f3a\u5927\u7684\uff0c\u963f\u91cc\u5f00\u6e90\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\u5de5\u5177\u3002\u652f\u6301\u591a\u5e73\u53f0\u3001\u591a\u8bed\u8a00\u73af\u5883\uff0c\u652f\u6301\u4ece \u4e3b\u673a\u7cfb\u7edf-> \u5bb9\u5668 -> k8s\u96c6\u7fa4 -> \u5e38\u7528\u7ec4\u4ef6\uff08ElasticSearch\\\\Redis\\\\Mysql...\uff09 -> \u5e94\u7528 \uff08Java\\\\Golang\\\\C++\\\\NodeJS...\uff09\u7b49200\u591a\u4e2a\u6f14\u7ec3\u573a\u666f\uff0c3000\u591a\u4e2a\u53c2\u6570\u3002\\n\\n- \u6df7\u6c8c\u5de5\u7a0b\u662f\u4ec0\u4e48\uff1f\\n> \u6df7\u6c8c\u5de5\u7a0b\uff08Chaos Engineering\uff09\u662f\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e0a\u8fdb\u884c\u5b9e\u9a8c\u7684\u5b66\u79d1\uff0c\u901a\u8fc7\u4e3b\u52a8\u6ce8\u5165\u6545\u969c\u7684\u65b9\u5f0f\uff0c\u63d0\u524d\u53d1\u73b0\u7cfb\u7edf\u7684\u8584\u5f31\u70b9\uff0c\u63a8\u8fdb\u67b6\u6784\u7684\u6539\u8fdb\uff0c\u6700\u7ec8\u5b9e\u73b0\u4e1a\u52a1\u97e7\u6027\\n\\n\\n2021\u5e74\u8d77\u8fdb\u5165\u6df7\u6c8c\u5de5\u7a0b\u5143\u5e74\uff0c\u5404\u5927\u516c\u53f8\u7eb7\u7eb7\u5173\u6ce8\u5e76\u6295\u5165\u5230\u6df7\u6c8c\u5de5\u7a0b\u7684\u7814\u53d1\u5f53\u4e2d\u3002\u963f\u91cc\u5df4\u5df4\u5f00\u6e90\u7684\u6df7\u6c8c\u5de5\u7a0b\u5de5\u5177ChaosBlade\u6b63\u5f0f\u6210\u4e3aCNCF Sandbox\u9879\u76ee\u3002\u4e3a\u5e2e\u52a9\u5f00\u6e90\u7528\u6237\u66f4\u597d\u5730\u843d\u5730\u6df7\u6c8c\u5de5\u7a0b\uff0c\u53d1\u5e03\u65b0\u7248ChaosBlade-Box\uff0c\u4ee5\u4e0b\u4e3b\u8981\u4ecb\u7ecd\u6b64\u6b21\u53d1\u5e03\u65b0\u7248\u672c\u7684\u529f\u80fd\u53ca\u7279\u6027\u3002\\n\x3c!--truncate--\x3e\\n\\n# 2. \u65b0\u7248ChaosBlade-Box\u4ecb\u7ecd\\nChaosBlade-Box\u65e8\u5728\u5efa\u8bbe\u7edf\u4e00\u7684\u6df7\u6c8c\u5de5\u7a0b\u64cd\u4f5c\u5e73\u53f0\uff0c\u4ece\u53d1\u5e03\u4ee5\u6765\uff0c\u53d7\u5230\u4e86\u5f00\u6e90\u793e\u533a\u7684\u5e7f\u6cdb\u5173\u6ce8\u3002\u4f46\u4e5f\u5b58\u5728\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\\n\\n- \u793e\u533a\u7248\u5bf9\u4e8ek8s\u96c6\u7fa4\u4e0a\u6f14\u7ec3\u7684\u652f\u6301\u4e0d\u8db3\uff0c\u4e3b\u8981\u8868\u73b0\u4e3a\u65e0\u6cd5\u81ea\u52a8\u83b7\u53d6\u96c6\u7fa4\u76f8\u5173\u6570\u636e\u6765\u8fdb\u884c\u6f14\u7ec3\u5e94\u7528\u9009\u62e9\u3001\u6f14\u7ec3\u6b65\u9aa4\u7e41\u7410\u9700\u8981\u624b\u52a8\u586b\u5145\u96c6\u7fa4\u914d\u7f6e\u4fe1\u606f\u6765\u5b9a\u4f4d\u96c6\u7fa4\u7b49\uff0c\u5bfc\u81f4\u7528\u6237\u4f7f\u7528\u4e0d\u591f\u4fbf\u6377\\n- \u793e\u533a\u7248\u65e0\u6cd5\u6ee1\u8db3\u56fd\u9645\u5f00\u6e90\u793e\u533a\u540c\u5b66\u7684\u4f7f\u7528\uff0c\u4e5f\u5bf9\u63a2\u9488\u7684\u7ba1\u63a7\u80fd\u529b\u4e0d\u8db3\\n- \u793e\u533a\u7248\u548c\u4f01\u4e1a\u7248\u8f83\u4e3a\u5272\u88c2\uff0c\u8fd9\u4f7f\u5f97\u7528\u6237\u4f53\u9a8c\u5927\u5927\u964d\u4f4e\uff0c\u4e5f\u4f7f\u5f97\u5f00\u6e90\u7528\u6237\u540e\u7eed\u8f6c\u5411\u4f01\u4e1a\u7248\uff0c\u5b58\u5728\u8f83\u5927\u7684\u8fc1\u79fb\u6210\u672c\uff0c\u8fd9\u91cc\u4e0d\u6b62\u662f\u6570\u636e\u8fc1\u79fb\u6210\u672c\uff0c\u8fd8\u5b58\u5728\u64cd\u4f5c\u4e60\u60ef\u4e0a\u7684\u8fc1\u79fb\u6210\u672c\\n\\n\u5c31\u4ee5\u4e0a\u95ee\u9898\uff0c\u5bf9ChaosBlade-Box\u53caAgent\u8fdb\u884c\u4e00\u6b21\u5927\u7684\u6539\u7248\uff0c\u5c06\u793e\u533a\u7248\u4e0e\u4f01\u4e1a\u7248\u5185\u6838\u8fdb\u884c\u878d\u5408\uff0c\u7edf\u4e00\u7528\u6237\u64cd\u4f5c\u4e60\u60ef\uff0c\u5347\u7ea7\u793e\u533a\u7248\u7cfb\u7edf\u67b6\u6784\uff0c\u5e76\u589e\u5f3a\u5176\u7ec4\u4ef6\u529f\u80fd\u3002\\n## 2.1 \u5e73\u53f0\u6574\u4f53\u4ecb\u7ecd\\n\u65b0\u7248ChaosBlade-Box\u63a7\u5236\u53f0\u662f\u4e00\u4e2a\u9762\u5411\u591a\u96c6\u7fa4\u3001\u591a\u73af\u5883\u3001\u591a\u8bed\u8a00\u7684\u4e91\u539f\u751f\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0\u3002\u652f\u6301\u56fd\u9645\u5316\u4e2d\u82f1\u6587\u5207\u6362\uff0c\u652f\u6301\u5168\u5c40\u547d\u540d\u7a7a\u95f4\uff0c\u4f7f\u5f97\u540c\u4e00\u7528\u6237\u53ef\u6839\u636e\u81ea\u5df1\u9700\u6c42\uff0c\u8bbe\u7f6e\u4e0d\u540c\u7684\u5168\u5c40\u547d\u540d\u7a7a\u95f4\uff0c\u5982\uff1a\u6d4b\u8bd5\u7a7a\u95f4\u3001\u6c99\u76d2\u7a7a\u95f4\u548c\u7ebf\u4e0a\u7a7a\u95f4\u7b49\u3002\u63d0\u4f9b\u81ea\u52a8\u5316\u7684\u5de5\u5177\u90e8\u7f72\uff0c\u7b80\u5316\u5de5\u5177\u5b89\u88c5\u6b65\u9aa4\uff0c\u63d0\u9ad8\u6267\u884c\u6548\u7387\u3002\u5e73\u53f0\u652f\u6301\u4e0d\u540c\u73af\u5883\u7684\u63a2\u9488\u5b89\u88c5\u548c\u6f14\u7ec3\uff0c\u5982\u4e3b\u673a\u548cKubernetes\uff0c\u5176\u4e2dKubernetes\u73af\u5883\u4e0b\u652f\u6301 Node\u3001Pod\u3001Container\u7ef4\u5ea6\u4e0b\u7684\u6f14\u7ec3\u3002\u5728Kubernetes\u73af\u5883\u4e0b\u4f1a\u81ea\u52a8\u6536\u96c6\u96c6\u7fa4\u5185\u7684Pod\u76f8\u5173\u6570\u636e\uff0c\u5e76\u5728\u5e94\u7528\u7ba1\u7406\u4e2d\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\uff0c\u8fd9\u6837\u7b80\u5316\u7528\u6237\u6f14\u7ec3\u67e5\u8be2\u6b65\u9aa4\uff0c\u65e0\u9700\u53bb\u96c6\u7fa4\u5185\u67e5\u770b\u8981\u6f14\u7ec3\u5e94\u7528\u7684Pod\u540d\u6216Container\u540d\u3002\u5e76\u652f\u6301\u4e00\u952e\u8fc1\u79fb\u5230\u4f01\u4e1a\u7248\uff0c\u6309\u9700\u5c06\u793e\u533a\u7248\u7684\u6f14\u7ec3\u6570\u636e\u540c\u6b65\u5230\u4f01\u4e1a\u7248\u3002\\n![image.png](/img/blog/chaosblade-box-overview.png)\\n## 2.2 \u65b0\u7248\u6f14\u7ec3\u6d41\u7a0b\\n\u4ee5\u4e0b\u662f\u5728\u65b0\u7248ChaosBlade-Box\u5e73\u53f0\u4e0a\u8fdb\u884c\u4e00\u6b21\u6f14\u7ec3\u7684\u5168\u8fc7\u7a0b\uff0c\u652f\u6301\u987a\u5e8f\u6267\u884c\u3001\u9636\u6bb5\u6267\u884c\u4e24\u79cd\u6d41\u7a0b\u7f16\u6392\uff0c\u987a\u5e8f\u6267\u884c\u6307\u7684\u662f\u591a\u4e2a\u6f14\u7ec3\u573a\u666f\u4f9d\u6b21\u751f\u6548\uff0c\u9636\u6bb5\u6267\u884c\u6307\u7684\u662f\u591a\u4e2a\u6f14\u7ec3\u573a\u666f\u540c\u65f6\u751f\u6548\u3002\u901a\u8fc7\u591a\u79cd\u5b89\u5168\u7b56\u7565\u4fdd\u8bc1\u6f14\u7ec3\u5f97\u5230\u6062\u590d\uff0c\u5982\u624b\u52a8\u89e6\u53d1\u548c\u81ea\u52a8\u505c\u6b62\uff0c\u81ea\u52a8\u505c\u6b62\u901a\u8fc7\u5728\u6f14\u7ec3\u914d\u7f6e\u7684\u65f6\u5019\u8bbe\u7f6e\u8d85\u65f6\u53c2\u6570\u6765\u8fdb\u884c\u914d\u7f6e\uff0c\u8fd9\u6837\u5373\u4fbf\u5e73\u53f0\u548c\u63a2\u9488\uff08Agent\uff09\u5931\u8054\uff0c\u65e0\u6cd5\u8fdb\u884c\u624b\u52a8\u505c\u6b62\u65f6\uff0c\u4e5f\u80fd\u5728\u8d85\u65f6\u65f6\u95f4\u5230\u8fbe\u7684\u65f6\u5019\uff0c\u81ea\u52a8\u6062\u590d\u6545\u969c\u3002\\n\\n![image.png](/img/blog/chaosblade-box-workflow.png)\\n![image.png](/img/blog/chaosblade-box-result.png)\\n# 3.  \u67b6\u6784\u4ecb\u7ecd\\n\\n\u4e0b\u56fe\u8bf4\u660e\u4e86\u65b0\u7248\u672cChaosBlade\u7684\u7cfb\u7edf\u67b6\u6784\u53ca\u5176\u7ec4\u4ef6\u529f\u80fd\uff1a\\n![image.png](/img/zh/overall-architecture.png)\\n**\u7ec4\u4ef6**\\n\\n- ChaosBlade-Box Console: \u6df7\u6c8c\u5de5\u7a0b\u63a7\u5236\u53f0\u524d\u7aef\uff0c\u8d1f\u8d23\u524d\u7aef\u754c\u9762\u4ea4\u4e92\\n- ChaosBlade-Box Server: \u6df7\u6c8c\u5de5\u7a0b\u63a7\u5236\u53f0\u670d\u52a1\u7aef\uff0c\u4e3b\u8981\u63d0\u4f9b\u6f14\u7ec3\u7f16\u6392\u3001\u573a\u666f\u7ba1\u7406\u3001\u6f14\u7ec3\u5de5\u5177\u6258\u7ba1\u548c\u4e00\u952e\u8fc1\u79fb\u7b49\u529f\u80fd\\n- Agent: \u6df7\u6c8c\u5de5\u7a0b\u63a2\u9488\uff0c\u4e3b\u8981\u7528\u4e8e\u6570\u636e\u6536\u96c6\u548c\u6f14\u7ec3\u547d\u4ee4\u4e0b\u53d1\u6267\u884c\\n- ChaosBlade: \u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\u5de5\u5177\uff0c\u652f\u6301\u4e3b\u673a\u3001docker\u548ck8s\u7b49\u4e0d\u540c\u7684\u73af\u5883\\n# 4. \u65b0\u7248\u4f18\u52bf\\n## 4.1 ChaosBlade-Box\u529f\u80fd\u5347\u7ea7\\n\\n\u65b0\u7248\u793e\u533a\u7248\u7684\u63a7\u5236\u53f0\u76f8\u8f83\u4e8e\u8001\u7248\u63a7\u5236\u53f0\uff0c\u6709\u4ee5\u4e0b\u7684\u529f\u80fd\u5347\u7ea7\uff1a\\n\\n**1\uff09\u56fd\u9645\u5316**\\n\u652f\u6301\u56fd\u9645\u5316\u7684\u4e2d\u82f1\u6587\u5207\u6362\\n\\n**2\uff09\u547d\u540d\u7a7a\u95f4\u5207\u6362**\\n\u652f\u6301\u5168\u5c40\u7684\u7a7a\u95f4\u5207\u6362\uff0c\u4f7f\u5f97\u540c\u4e00\u7528\u6237\u53ef\u6839\u636e\u81ea\u5df1\u9700\u6c42\uff0c\u8bbe\u7f6e\u4e0d\u540c\u7684\u5168\u5c40\u547d\u540d\u7a7a\u95f4\uff0c\u5982\uff1a\u6d4b\u8bd5\u7a7a\u95f4\u3001\u6c99\u76d2\u7a7a\u95f4\u548c\u7ebf\u4e0a\u7a7a\u95f4\u7b49\\n\\n**3\uff09\u66f4\u4e3a\u6d41\u7545\u7684\u6f14\u7ec3\u7f16\u6392**\\n\u6d41\u7545\u7f16\u6392\u548c\u4f01\u4e1a\u7248\u7684\u6f14\u7ec3\u6d41\u7a0b\u7f16\u6392\u4fdd\u6301\u4e00\u81f4\uff0c\u652f\u6301\u540c\u65f6\u591a\u4e2a\u6545\u969c\u6f14\u7ec3\u7684\u5e76\u884c\u6216\u4e32\u884c\u7684\u6f14\u7ec3\u6d41\u7a0b\\n\\n**4\uff09\u5b8c\u5584\u7684\u5e94\u7528\u7ba1\u7406**\\n\u63d0\u4f9b\u4e86\u66f4\u4e3a\u5b8c\u5584\u7684\u5e94\u7528\u7ba1\u7406\u529f\u80fd\uff0c\u540c\u65f6\u652f\u6301\u5728\u4e3b\u673a\u548ck8s\u73af\u5883\u4e0b\u90e8\u7f72\u7684\u5e94\u7528\uff0c\u5305\u62ec\u4e86\uff1a\u5e94\u7528\u6982\u89c8\u3001\u673a\u5668\u5217\u8868\u3001\u6f14\u7ec3\u8bb0\u5f55\u548c\u5e94\u7528\u914d\u7f6e\u7b49\u3002\\n\\n**5\uff09\u65e0\u7f1d\u8fc1\u79fb**\\n\u4e0e\u4f01\u4e1a\u7248\u7684\u64cd\u4f5c\u754c\u9762\u4fdd\u6301\u4e00\u81f4\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u952e\u8fc1\u79fb\u529f\u80fd\uff0c\u80fd\u5c06\u63a2\u9488\u81ea\u52a8\u66ff\u6362\u6210\u516c\u6709\u4e91\u63a2\u9488\uff0c\u5c06\u6f14\u7ec3\u673a\u5668\u6ce8\u518c\u5230\u4f01\u4e1a\u7248\u4e2d\uff0c\u5e76\u5c06\u6f14\u7ec3\u6570\u636e\u540c\u6b65\u5230\u4f01\u4e1a\u7248\u3002\u8f7b\u677e\u7b80\u5355\u5207\u6362\u5230\u4f01\u4e1a\u7248\u4e2d\u3002\\n\\n**6\uff09\u5b89\u5168**\\n\u591a\u79cd\u6545\u969c\u6062\u590d\u7b56\u7565\uff0c\u4fdd\u8bc1\u4e0b\u53d1\u6f14\u7ec3\u53ef\u6062\u590d\\n\\n**7\uff09\u591a\u73af\u5883\u90e8\u7f72**\\n\u652f\u6301\u4e0d\u540c\u73af\u5883\u4e0b\u7684\u90e8\u7f72\u65b9\u5f0f\uff0c\u5305\u62ec\u4e3b\u673a\u3001docker\u3001k8s\u7b49\\n\\n**8\uff09\u5c42\u6b21\u5206\u660e\u7684\u6f14\u7ec3\u573a\u666f**\\n\u5bf9\u6f14\u7ec3\u573a\u666f\u8fdb\u884c\u5206\u7c7b\u5c55\u793a\uff0c\u5728\u521b\u5efa\u6f14\u7ec3\u65f6\uff0c\u4f1a\u6839\u636e\u9009\u5b9a\u6f14\u7ec3\u76ee\u6807\u4e0d\u540c\uff0c\u800c\u5b9e\u65f6\u5c55\u793a\u4e0d\u540c\u5206\u7c7b\u5c55\u793a\u7684\u53ef\u6f14\u7ec3\u573a\u666f\\n\\n## 4.2 Agent\uff08\u63a2\u9488\uff09\u529f\u80fd\u5347\u7ea7\\n\u65b0\u7248\u672c\u63a2\u9488\uff08Agent\uff09\u76f8\u8f83\u4e8e\u8001\u7248\u672c\uff0c\u6709\u4e86\u8f83\u4e3a\u591a \u7684\u529f\u80fd\u63d0\u5347\uff1a\\n\\n**1\uff09\u652f\u6301\u4e0d\u540c\u73af\u5883\u6f14\u7ec3\u901a\u9053**\\n\u652f\u6301\u5728\u4e0d\u540c\u73af\u5883\u4f5c\u4e3a\u6f14\u7ec3\u547d\u4ee4\u4e0b\u53d1\u901a\u9053\uff0c\u7b80\u5316\u4e86\u8001\u7248\u5728k8s\u73af\u5883\u4e0b\uff0c\u9700\u8981\u6307\u5b9a\u96c6\u7fa4\u7684kubeconfig\u6765\u8fdb\u884c\u6f14\u7ec3\\n\\n**2\uff09\u66f4\u4e3a\u5b8c\u5584\u7684API**\\n\u7edf\u4e00\u4e86\u63a2\u9488\u5bf9\u5916API\u63a5\u53e3\uff0c\u65b9\u4fbf\u6269\u5c55\u4e0e\u5bf9\u63a5\\n\\n**3\uff09\u6570\u636e\u81ea\u52a8\u6536\u96c6\u5e76\u4e0a\u62a5**\\n\u65b0\u589e\u5728k8s\u73af\u5883\u4e0b\uff0c\u5c06k8s\u76f8\u5173\u6570\u636e\u8fdb\u884c\u4e0a\u62a5\u5230\u63a7\u5236\u53f0\u7684\u670d\u52a1\u7aef\uff0c\u7528\u4e8e\u5728k8s\u73af\u5883\u4e0b\uff0c\u65b9\u4fbf\u7528\u6237\u9009\u62e9\u6f14\u7ec3\u76ee\u6807\\n\\n**4\uff09\u63a2\u9488\u81ea\u52a8\u5378\u8f7d**\\n\u65b0\u589e\u4e86\u63a2\u9488\u81ea\u52a8\u5378\u8f7d\u63a5\u53e3\uff0c\u76f4\u63a5\u5728\u63a7\u5236\u53f0\u76f4\u63a5\u63a7\u5236\u63a2\u9488\u5b89\u88c5\u4e0e\u5378\u8f7d\\n\\n**5\uff09\u6301\u7eed\u4fdd\u6d3b**\\n\u589e\u52a0\u63a2\u6d3b\u811a\u672c\uff0c\u4fdd\u969c\u63a2\u9488\u8fdb\u7a0b\u6301\u7eed\u5b58\u6d3b\\n\\n**6\uff09\u591a\u73af\u5883\u90e8\u7f72**\\n\u652f\u6301\u4e0d\u540c\u73af\u5883\u4e0b\u7684\u90e8\u7f72\u65b9\u5f0f\uff0c\u5305\u62ec\u4e3b\u673a\u3001docker\u3001k8s\u7b49\\n\\n# 5. \u603b\u7ed3\\n\u6df7\u6c8c\u5de5\u7a0b -- \u4fdd\u969c\u7cfb\u7edf\u9ad8\u53ef\u7528\u7684\u624b\u6bb5\u4e4b\u4e00\uff0cChaosBlade\u4f5c\u4e3a\u56fd\u5185\u7b2c\u4e00\u5bb6\u5f00\u6e90\u7684\u6df7\u6c8c\u5de5\u7a0b\u5de5\u5177\uff0c\u5f97\u5230\u4e86\u5e7f\u6cdb\u5e94\u7528\uff0c\u57282021\u5e74\u5f00\u6e90ChaosBlade-Box\uff08\u6df7\u6c8c\u5de5\u7a0b\u63a7\u5236\u53f0\uff09\uff0c\u65e8\u5728\u52a9\u529b\u793e\u533a\u7248\u6df7\u6c8c\u5de5\u7a0b\u843d\u5730\uff0c\u7eb3\u7ba1\u4e0d\u540c\u5f00\u6e90\u7684\u6545\u969c\u6ce8\u5165\u5de5\u5177\uff0c\u5efa\u8bbe\u7edf\u4e00\u7684\u6df7\u6c8c\u5de5\u7a0b\u64cd\u4f5c\u5e73\u53f0\u3002\u6b64\u6b21\u65b0\u7684\u7248\u672c\u65e0\u8bba\u662f\u5728\u7528\u6237\u754c\u9762\u7684\u4f7f\u7528\u4e0a\uff0c\u8fd8\u662f\u529f\u80fd\u5b9e\u73b0\u4e0a\u90fd\u6709\u5f88\u591a\u7684\u63d0\u5347\uff0c\u8ba9\u7528\u6237\u66f4\u7b80\u5355\u3001\u66f4\u65b9\u4fbf\u7684\u4f7f\u7528\uff0c\u5e76\u843d\u5730\u6df7\u6c8c\u5de5\u7a0b\u3002\\n\\n\\n# 6. \u63a8\u8350\u793e\u533a\\n\\n\\n[1] chaosblade-box: [https://github.com/chaosblade-io/chaosblade-box](https://github.com/chaosblade-io/chaosblade-box)\\n[2] chaosblade-box-agent: [https://github.com/chaosblade-io/chaosblade-box-agent](https://github.com/chaosblade-io/chaosblade-box-agent)\\n[3] chaosblade: [https://github.com/chaosblade-io/chaosblade](https://github.com/chaosblade-io/chaosblade-box)\\n\\n\u6b22\u8fce\u9489\u9489\u641c\u7d22\u7fa4\u53f7 23177705 \u52a0\u5165 CNCF chaosblade \u793e\u533a\u4ea4\u6d41\u9489\u7fa4\uff01"},{"id":"/2022/03/03/ChaosBlade-From-the-Chaos-Engineering-Experiment-Tool-to-the-Chaos-Engineering-Platform","metadata":{"permalink":"/en/blog/2022/03/03/ChaosBlade-From-the-Chaos-Engineering-Experiment-Tool-to-the-Chaos-Engineering-Platform","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2022-03-03-ChaosBlade-From-the-Chaos-Engineering-Experiment-Tool-to-the-Chaos-Engineering-Platform.md","source":"@site/blog/2022-03-03-ChaosBlade-From-the-Chaos-Engineering-Experiment-Tool-to-the-Chaos-Engineering-Platform.md","title":"ChaosBlade, From the Chaos Engineering Experiment Tool to the Chaos Engineering Platform","description":"\u672c\u6587\u4f1a\u7740\u91cd\u4ecb\u7ecd\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\u5728\u4e91\u539f\u751f\u67b6\u6784\u4e0b\u7684\u843d\u5730\u4e0e\u5b9e\u8df5","date":"2022-03-03T00:00:00.000Z","formattedDate":"March 3, 2022","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":14.23,"hasTruncateMarker":true,"authors":[{"name":"\u8096\u957f\u519b\uff08\u7a79\u8c37\uff0c@xcaspar\uff09","title":"Co-creator of ChaosBlade","url":"https://github.com/xcaspar","imageURL":"https://avatars.githubusercontent.com/u/3992234?s=64&v=4","key":"xcaspar"},{"name":"Sang Jie","title":"Works in the R&D Center of Agricultural Bank of China and is engaged in big data R&D in financial-related systems.","key":"sangjie"}],"frontMatter":{"title":"ChaosBlade, From the Chaos Engineering Experiment Tool to the Chaos Engineering Platform","authors":["xcaspar","sangjie"],"tags":["chaosblade"],"description":"\u672c\u6587\u4f1a\u7740\u91cd\u4ecb\u7ecd\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\u5728\u4e91\u539f\u751f\u67b6\u6784\u4e0b\u7684\u843d\u5730\u4e0e\u5b9e\u8df5","hide_table_of_contents":false},"prevItem":{"title":"\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0 ChaosBlade-Box \u65b0\u7248\u91cd\u78c5\u53d1\u5e03","permalink":"/en/blog/2022/06/24/ChaosBlade-Box-new-release"},"nextItem":{"title":"\u88ab\u4f60\u8d28\u7591\u4ef7\u503c\u7684\u6df7\u6c8c\u5de5\u7a0b\uff0c\u963f\u91cc\u5df4\u5df4\u5df2\u843d\u5730\u5b9e\u8df5\u4e869\u5e74","permalink":"/en/blog/2021/12/08/chaos-engineering-value"}},"content":"ChaosBlade is Alibaba\'s open-source chaos engineering project created in 2019. It has been added to CNCF Sandbox. At first, ChaosBlade was a multi-environment and multi-language chaos engineering experimental tool but developed into a multi-cluster, multi-environment, and multi-language chaos engineering platform called chaosblade-box. The platform supports experimental tool hosting and automatic tool deployment. The user\'s energy is focused on solving high-availability problems in the cloud-native process through chaos engineering and a unified user experiment interface. This article introduces ChaosBlade in detail from three stages, including the abstraction of the chaos experimental model, the open-source process of the chaos experimental tool, and the update of the chaos engineering platform.\\n\x3c!--truncate--\x3e\\n**In this year\'s trusted cloud evaluation, the Alibaba Cloud fault drill platform passed the highest level (advanced certification required by the trusted cloud chaos engineering platform) with the highest score.** \\n\\n# Chaos Experimental Model\\nThe ChaosBlade project covers chaos experimental scenarios, such as basic resources, application services, and container services. In the beginning, the design of the experimental tool considers the unification of scenarios and the model, which facilitates the expansion and accumulation of scenarios and provides a model basis for the platform-hosted experimental tool to realize the unified scenario call. All experimental scenarios in the ChaosBlade project follow this experimental model design, which is described in detail below through the derivation, introduction, significance, and specific application of the experimental model.\\n\\n## 1. Derivation of the Experimental Model\\nChaos experiments mainly include fault simulation. We generally describe faults in the following ways:\\n\\nDisk A mounted on the machine 10.0.0.1 is full, and the service is unavailable.\\nThe slow execution of B Dubbo services on all nodes delays the call of upstream A Dubbo services, resulting in slow user access.\\nAll CPU cores on node B in Kubernetes cluster A are fully utilized, resulting in abnormal pod scheduling in cluster A.\\nThe network of pod D in the Kubernetes cluster C is abnormal, which causes access exceptions in the service related to D.\\nWe can use the following sentence to describe the failure: A certain component on a certain machine (or resources in the cluster, such as node and pod) failed, which caused the related impact. We can also view the fault detail by splitting the description, as shown in the following figure:\\n\\n![](/img/2022-03-03-chaosblade-from-tool-to-platform/b137f6819df734ba681cf37d6005e4a24cbb9af7.png)\\n\\nThese four parts can be used to describe the existing fault scenario. Therefore, we have abstracted a fault scenario model, also known as the chaos experimental model.\\n\\n![](/img/2022-03-03-chaosblade-from-tool-to-platform/795a1dba3eeeff01bcb04e277687f1cc4972a800.png)\\n\\n## 2. An Introduction to the Experimental Model\\nThis experimental model is described in detail below:\\n\\n-**Scope**: The scope of the experiment refers to the machines, clusters, and resources involved in the experiment.\\nTarget: The experimental target refers to the component that bears the experiment. This includes CPU, network, and disk in basic resource scenarios, application components in Java scenarios, such as Dubbo, Redis, RocketMQ, and JVM, and Node, Pod, and the Container itself in container scenarios.\\n-**Matcher**: The experiment rule matcher defines relevant experiment matching rules based on the configured Target. You can configure multiple matchers. Each Target may have its own special matching conditions. For example, Dubbo and gRPC in the RPC field can be matched according to the services provided by the service provider and the services called by the service consumer. Redis in the cache field can be matched according to set and get operations. You can also extend the matcher, such as extending the experiment scenario execution strategy and controlling the experiment trigger time.\\n-**Action**: These are the specific scenarios of an experimental simulation. If the Target is different, the implementation scenarios are also different. For example, disks can simulate scenarios, such as full disk, high disk I/O, or disk hardware failure. Applications can abstract experimental scenarios, such as latency, exceptions, return of specified values (such as error codes and large objects), parameter tampering, and repeated calls. For container services, we can simulate Node, Pod, Container resource exceptions, or basic resource exceptions.\\nThis model can answer the following questions that need to be clarified in implementing chaos experiments:\\n\\n- What is the implementation scope of the chaos experiment?\\n- What is the object of implementing the chaos experiment?\\n- What are the conditions under which the subject triggers the experiment?\\n- What experimental scenarios are implemented?\\n## 3. The Significance of the Experimental Model\\nThe model has the following features:\\n\\n- Concise: It has clear levels and is easy to understand.\\n- General-Purpose: It covers all current fault scenarios, including basic resources, application services, container services, and cloud resources.\\n- Easy to Implement: It is convenient to define clear interface specifications, and the expansion of experimental scenarios is simple to implement.\\n- Language- and Field-Independent: It can be implemented in multiple languages and applied to multiple fields.\\n\\nThis model has the following meanings:\\n\\n- More accurate description of chaos experimental scenarios\\n- A better understanding of chaos experiment injection\\n- Convenient accumulation of existing experimental scenarios\\n- Discovery of more scenarios based on the model\\n- More standardized and concise chaos experimental tools\\n## 4. Application of the Experimental Model\\nThe application of the chaos experimental model is summarized below:\\n\\n- The chaos experimental model parameterizes the experimental scenario variables and normalizes the parameters.\\n- The model can achieve the horizontal expansion of the experimental scenarios in other fields.\\n- The chaos experimental model can be combined with standardization in other fields to facilitate the vertical expansion of scenarios.\\n- Upper-layer scenarios in a field can reuse the scenario that follows the definition of the chaos experimental model.\\n- The scenario description declared by the chaos experimental model can be well-connected to ChaosBlade.\\n- Following the experimental model, the upper chaos experimental platform can be constructed easily.\\n\\nThe following section focuses on ChaosBlade, a chaos engineering tool implemented based on this model.\\n\\n# Chaos Engineering Experiment Tool: ChaosBlade\\nIn the beginning, Alibaba introduced chaos engineering to solve the dependency problem of microservices. Later, chaos engineering was used to verify the steady state of business services and cloud services. Then, it was used to guarantee the business continuity of public cloud and private cloud and verify the stability of cloud-native systems. Alibaba has accumulated rich scenarios and practical experience. At that time, the open-source tools related to chaos engineering had problems, such as scattered scenario capabilities, difficulty getting started, lack of experimental model standards, and difficulty expanding and accumulating scenarios. These problems make it difficult to realize platformization, and it is difficult to include these tools on one platform. Therefore, the execution tool ChaosBlade of chaos engineering experiment was opened. The section below describes it in detail through scenarios, usage methods, architecture design, and examples.\\n\\n## 1. Chaos Experimental Scenario\\nAt the beginning of designing ChaosBlade, the ease of use and the convenience of scenario expansion are considered, which helps everyone use the tool and expand more experimental scenarios according to their needs. Following the chaos experimental model, a unified and concise execution tool was provided. The chaos experimental tool supports system platforms, such as Linux, Windows, Docker, and Kubernetes. It covers applications in Java, Golang, JavaScript, and C++. It involves more than 200 experimental scenarios and more than 3,000 experimental parameters (v1.0.0-GA). The following scenarios are included:\\n\\n- Basic Resources: CPU, memory, network, disk, process, kernel, etc.\\n- Application Services: Databases, caches, messages, JVM, microservices, etc. Any kind of method can be specified to inject various complex experimental scenarios, and any method or a line of code can be specified to inject delay, variable, return value tampering, and other experimental scenarios.\\n- Docker Containers: Experimental scenarios, such as killing containers and CPU, memory, network, disk, and process in containers\\n- Kubernetes Platform: Experimental scenarios, such as CPU, memory, network, disk, and process on nodes, experimental scenarios in Pod network and the Pod itself, such as killing Pod, and experimental scenarios in containers, such as the preceding Docker container\\n- Cloud Resources: Alibaba Cloud ECS downtime and other experimental scenarios\\n## 2. Tool Usage\\n![](/img/2022-03-03-chaosblade-from-tool-to-platform/ca4801527fab0074b2a0fd4d675569e453e3f7e8.png)\\n\\nChaosBlade is a tool that can be used by downloading and decompressing directly. It does not need to be installed. The calling mode it supports includes a CLI mode that directly executes blade commands.\\n\\nFor example, in the figure above about network latency, if you add the -h parameter, you can see a very perfect command prompt. For instance, if I want to call port 9520 to experiment on network packet loss and align the previous experimental model, its target is network, its action is packet loss, and its matcher is to call the remote service port 9520. After successful execution, the experimental results will be returned. Each experimental scenario is regarded as an object, and it will return the UID. This UID is used for subsequent experimental management, such as destroying and querying experiments. To destroy the experiment, that is, to restore the experiment, execute the `blade destroy` command.\\n\\nAnother way to call ChaosBlade is Web mode, which exposes HTTP services by executing server commands. At the upper level, if you build your chaos experimental platform, you can call ChaosBlade directly through HTTP requests.\\n\\n## 3. Tool Architecture Design\\n![](/img/2022-03-03-chaosblade-from-tool-to-platform/16a9118e25ea689b30a88a6a67dd4ba7e1ef8838.png)\\n\\nChaosBlade is packaged into independent projects according to the field, and each project is implemented according to the best practices of each field. This meets the usage habits of each field and establishes the relationship with the chaosblade cli project through the chaos experimental model, making it convenient to use ChaosBlade for uniform calls. The experimental scenarios in each field are described in YAML files based on the chaos experimental model and exposed to the upper chaos experiment platform. The platform automatically senses the changes of the experimental scenario according to the changes in the description files. The platform can also be developed when no new scenarios are needed. This way, the chaos platform can focus more on other parts of the chaos project. The currently included actuator items are listed below:\\n\\n- chaosblade is a chaos experiment management tool. It includes commands for creating experiments, destroying experiments, querying experiments, preparing experiment environments, and revoking experiment environments. It is an execution tool for chaos experiments. The execution methods include CLI and HTTP. It provides complete descriptions of commands, experimental scenarios, and scenario parameters. The operations are concise and clear.\\n- chaosblade-spec-go is the Golang definition of the chaos experimental model, which helps implement scenarios that use the Golang language.\\n- chaosblade-exec-os implements basic resource experimental scenarios, such as CPU, network, memory, and disk.\\n- chaosblade-exec-docker implements Docker container experimental scenarios, standardized by calling the Docker API.\\n- chaosblade-operator implements experimental scenarios on Kubernetes platforms. Chaos experiments are defined by the Kubernetes standard CRD mode. It is very convenient to use Kubernetes resource operations to create, update, and delete experimental scenarios, including using methods, such as kubectl and client-go. It can also be executed using the preceding chaosblade cli.\\n- chaosblade-exec-jvm implements Java application experimental scenarios. It is dynamically mounted using Java Agent technology without any access. It can be used at no cost, supports uninstallation, and can completely recycle every resource created by the Agent.\\n- chaosblade-exec-cplus implements C++ application experimental scenarios. It uses GDB technology to implement method-level and code line-level experimental scenario injection.\\n## 4. Examples\\nAn example of Dubbo microservice is used to introduce the use of ChaosBlade. This microservice Demo involves three-level calls. The consumer calls the provider, and the provider calls the base. The provider also calls the mk-demo database. The provider and the base have two instances.\\n\\n![](/img/2022-03-03-chaosblade-from-tool-to-platform/e203a88f1894dd439c1e31172a99245cc1039d79.png)\\n\\nThe experimental scenario of this example is database call delay. First, we define the monitoring metrics: the number of slow SQL statements and alert information. The expected assumption: the number of slow SQL statements increases, and the DingTalk group receives slow SQL alerts. Next, perform the experiment. We use chaosblade directly. You can look at the lower left part of the figure above. When we inject the calls of MySQL query for demo-provider, if the database is demo and the table name is d_discount, 50% of query operations will be delayed by 600 milliseconds.\\n\\n![](/img/2022-03-03-chaosblade-from-tool-to-platform/2f6a45bd3f203182e552578bf7a6abd261e8c582.png)\\n\\nWe use Alibaba Cloud ARMS for monitoring and alerting. As you can see, the DingTalk group receives an alert soon after performing the chaos experiment. The effect meets the expectation by comparing it with the monitoring metrics defined earlier. However, it should be noted that the results from this instance does not mean it will meet the expectation in the future, so continuous verification by chaos engineering is needed. If slow SQL statements occur, ARMS tracing analysis can be used to troubleshoot and locate them. You can see which statement is slow in execution.\\n\\n# Chaos Engineering Platform: chaosblade-box\\nUsers expect to focus on solving system high availability problems through chaos engineering rather than the selection and deployment of experimental tools. Thus, ChaosBlade is upgraded, and the open-source chaosblade-box, a chaos engineering platform, is provided. The platform hosts mainstream chaos experimental tools, automates the deployment of tools, and implements chaos engineering through a unified operation page.\\n\\n![](/img/2022-03-03-chaosblade-from-tool-to-platform/fad6c07086319b8eea7d555cd2f8a35631756f34.png)\\n\\nThe following section describes chaosblade-box through its features, architecture design, and use cases.\\n\\n## 1. Features\\nIt has the following features:\\n\\n- Support for Open-Source Experimental Tool Hosting: The platform can host mainstream experimental tools in the industry, such as its own chaosblade and external LitmusChaos. The chaos mesh experiment tool will also be hosted in the future.\\n- A Wide Range of Experimental Scenarios: Basic resources (such as CPU, memory, network, disk, process, kernel, and file), application services in multiple languages (such as Java, C++, JavaScript, and Golang), and Kubernetes platform (covering resources such as Container, Pod, and Node)\\n- Automated Deployment of Experimental Tools: Manual deployment of experimental tools is unnecessary. It can realize automatic deployment of experimental tools on hosts or clusters.\\n- Unified User Interface of Chaos Experiments: Users do not need to care about the use of different tools, and they can perform chaos experiments on the unified user interface.\\n- Multi-Dimensional Experiment Mode: It supports experiment orchestration from the dimension of hosts to Kubernetes resources and applications.\\n- Integrated Cloud-Native Ecosystem: It uses Helm for deployment management, integrates Prometheus for monitoring, and supports the hosting of cloud-native experimental tools.\\n## 2. Platform Architecture Design\\n![](/img/2022-03-03-chaosblade-from-tool-to-platform/73a5c9df7f3036da52d543bd6e508570bd68bffa.png)\\n\\nYou can use the console page to automate the deployment of managed tools, such as chaosblade and LitmusChaos, and unify the experimental scenarios according to the chaos experimental model established by the community. You can also divide the target resources according to hosts, Kubernetes, and applications and use the target manager to control them. On the experiment creation page, you can select target resources in a visible way. The platform executes experimental scenarios of different tools by calling chaos executor. You can observe the experiment metrics with access to Prometheus monitoring. Rich experiment reports will be provided in the future. The deployment of chaosblade-box is also very simple.\\n\\nYou can see the details on here.\\n\\n## 3. Instructions\\n![](/img/2022-03-03-chaosblade-from-tool-to-platform/1d6afaff51d1d882f968fbc79647b1bf255b8030.png)\\n\\nAfter the installation and deployment are completed, you can configure the Kubernetes cluster or host information to view the cluster or host data on the Machine List page. Click Experiment Management to create the experiment. The drill dimensions include the host, node, pod, and container. After you select the corresponding dimension, the corresponding resource list appears, and you can select it easily. The drill contains all hosted experimental scenarios. After the experiment is created, you are redirected to the drill details page automatically. Click Execute to jump to the task details page.\\n\\n![](/img/2022-03-03-chaosblade-from-tool-to-platform/2c1341f8817ac6529073c2ea2e7541243995b19e.png)\\n\\nThe page of drill task details displays the basic information of the experiment and the status of the experiment task. You can easily control the experiment and clarify the status of the experiment task.\\n\\n# The Future Planning\\n## 1. ChaosBlade\\nBased on cloud-native, ChaosBlade will provide a chaos engineering platform and chaos engineering experimental tools for multiple clusters, multiple environments, and multiple languages. Experimental tools continue to focus on the richness and stability of experimental scenarios, support more Kubernetes resource scenarios, normalize the experimental scenario standards of application service, and provide a standard implementation for experimental scenarios in multiple languages.\\n\\n## 2. chaosblade-box\\nIn the future, the core functions of the Alibaba Cloud fault drill platform (with Advanced Certification of Chaos Engineering Platform in Trusted Cloud) will be open-sourced and integrated with the existing chaos engineering platform to open more capabilities. At the same time, it simplifies the deployment and implementation of chaos engineering tools. In the future, it will host more chaos experimental tools and be compatible with mainstream platforms. This way, it can implement scenario recommendations, provide integrated business and system monitoring, output experimental reports, and complete closed-loop chaos engineering operations on an easy-to-use basis.\\n\\n# About Authors\\nXiao Changjun (Qionggu) is an Alibaba Technical Expert, Founder and Maintainer of the open-source project ChaosBlade, Head of Alibaba Cloud fault drill platform, an expert of Trusted Cloud Standards, and a chaos engineering expert with years of experience in distributed system architecture and stability construction.\\n\\nSang Jie works in the R&D Center of Agricultural Bank of China and is engaged in big data R&D in financial-related systems."},{"id":"/2021/12/08/chaos-engineering-value","metadata":{"permalink":"/en/blog/2021/12/08/chaos-engineering-value","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2021-12-08-chaos-engineering-value.md","source":"@site/blog/2021-12-08-chaos-engineering-value.md","title":"\u88ab\u4f60\u8d28\u7591\u4ef7\u503c\u7684\u6df7\u6c8c\u5de5\u7a0b\uff0c\u963f\u91cc\u5df4\u5df4\u5df2\u843d\u5730\u5b9e\u8df5\u4e869\u5e74","description":"\u6df7\u6c8c\u5de5\u7a0b\u4ef7\u503c\uff0c\u53ca\u5176\u5728\u963f\u91cc\u5df4\u5df4\u7684\u843d\u5730\u60c5\u51b5","date":"2021-12-08T00:00:00.000Z","formattedDate":"December 8, 2021","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":16.095,"hasTruncateMarker":true,"authors":[{"name":"\u5f20\u4fca\u5b9d"}],"frontMatter":{"title":"\u88ab\u4f60\u8d28\u7591\u4ef7\u503c\u7684\u6df7\u6c8c\u5de5\u7a0b\uff0c\u963f\u91cc\u5df4\u5df4\u5df2\u843d\u5730\u5b9e\u8df5\u4e869\u5e74","author":"\u5f20\u4fca\u5b9d","tags":["chaosblade"],"description":"\u6df7\u6c8c\u5de5\u7a0b\u4ef7\u503c\uff0c\u53ca\u5176\u5728\u963f\u91cc\u5df4\u5df4\u7684\u843d\u5730\u60c5\u51b5","hide_table_of_contents":false},"prevItem":{"title":"ChaosBlade, From the Chaos Engineering Experiment Tool to the Chaos Engineering Platform","permalink":"/en/blog/2022/03/03/ChaosBlade-From-the-Chaos-Engineering-Experiment-Tool-to-the-Chaos-Engineering-Platform"},"nextItem":{"title":"\u6691\u671f2021","permalink":"/en/blog/2021/06/06/summer-2021"}},"content":"\u8f6c\u81ea\uff1ahttps://mp.weixin.qq.com/s/jHopgbHmWCuF0JHv7Z7Erg\\n\\n\u4e3a\u4ec0\u4e48\u963f\u91cc\u5df4\u5df4\u3001\u5de5\u5546\u94f6\u884c\u3001\u4e2d\u56fd\u79fb\u52a8\u3001\u534e\u6cf0\u8bc1\u5238\u2026\u2026\u90fd\u5728\u5173\u6ce8\u6df7\u6c8c\u5de5\u7a0b\uff1f\\n\\n\u81ea\u4ece Netflix \u5f00\u6e90 Chaos Monkey\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u56fd\u5185\u516c\u53f8\u770b\u5230\u4e86\u6df7\u6c8c\u5de5\u7a0b\u5728\u5efa\u7acb\u7cfb\u7edf\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4fe1\u5fc3\u7684\u80fd\u529b\uff0c\u5f00\u59cb\u5c1d\u8bd5\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u63d0\u9ad8\u53ef\u9760\u6027\u3002\u963f\u91cc\u5df4\u5df4\u4f5c\u4e3a\u56fd\u5185\u8f83\u65e9\u5bf9\u5916\u8f93\u51fa\u6df7\u6c8c\u5de5\u7a0b\u80fd\u529b\u7684\u4f01\u4e1a\uff0c\u65e9\u5728 2012 \u5e74\u5c31\u5f00\u59cb\u5728\u7535\u5546\u4e1a\u52a1\u4e0a\uff0c\u5c1d\u8bd5\u901a\u8fc7\u6545\u969c\u6ce8\u5165\u6280\u672f\u53bb\u89e3\u51b3\u5fae\u670d\u52a1\u7684\u4f9d\u8d56\u95ee\u9898\u3002\\n\\n\u5e94\u7528\u5c42\u8ffd\u6c42\u66f4\u5168\u9762\u3001\u66f4\u4fbf\u5229\u3001\u66f4\u5feb\u6377\u7684\u670d\u52a1\uff0c\u5012\u903c\u6280\u672f\u5c42\u9762\u7cfb\u7edf\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u53ef\u4f9b\u89c2\u6d4b\u548c\u6301\u7eed\u7ef4\u62a4\u7684\u96be\u5ea6\u4e0d\u65ad\u52a0\u5927\uff0c\u9519\u7efc\u76f8\u8fde\u7684\u8f6f\u4ef6\u670d\u52a1\u8282\u70b9\u8d8a\u53d1\u4f9d\u8d56\u6280\u672f\u624b\u6bb5\u548c\u80fd\u529b\u3002\u968f\u7740\u5206\u5e03\u5f0f\u548c\u4e91\u539f\u751f\u6280\u672f\u6210\u4e3a\u4e3b\u6d41\u6280\u672f\u8d8b\u52bf\uff0c\u6df7\u6c8c\u5de5\u7a0b\u4e5f\u968f\u4e4b\u5907\u53d7\u5173\u6ce8\u3002\u7531\u4e8e\u6df7\u6c8c\u5de5\u7a0b\u81ea\u8eab\u7279\u6027\uff0c#\u96be\u4ee5\u91cf\u5316\u5ea6\u91cf\u51e0\u4e4e\u6210\u4e3a\u4e1a\u5185\u5171\u8bc6\uff0c\u4f46\u5bf9\u4e8e\u4f01\u4e1a\u6df7\u6c8c\u5de5\u7a0b\u5efa\u8bbe\u7684\u6210\u719f\u5ea6\uff0c\u4e5f\u9700\u8981\u63a2\u8ba8\u8861\u91cf\u6807\u51c6\u3002# \\n\\n\u5982\u4eca\uff0c\u968f\u7740\u4e2d\u56fd\u4fe1\u901a\u9662\u6210\u7acb\u4e86\u56fd\u5185\u9996\u4e2a\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\u5ba4\uff0c\u6df7\u6c8c\u5de5\u7a0b\u5728\u56fd\u5185\u7684\u53d1\u5c55\u8d70\u5230\u4e86\u65b0\u9636\u6bb5\u3002\u4e3a\u6b64\uff0cInfoQ \u548c\u963f\u91cc\u4e91\u8d44\u6df1\u6280\u672f\u4e13\u5bb6\u4e2d\u4ead\uff0c\u804a\u4e86\u804a\u6df7\u6c8c\u5de5\u7a0b\u5728\u963f\u91cc\u5df4\u5df4\u7684\u6280\u672f\u5b9e\u8df5\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n# 9 \u5e74\uff0c\u6df7\u6c8c\u5de5\u7a0b\u5728\u963f\u91cc\u5df4\u5df4\u4ece\u63a2\u7d22\u5230\u5f00\u6e90\\n\\n\u4e0d\u540c\u4f01\u4e1a\u5173\u6ce8\u548c\u5f15\u5165\u6df7\u6c8c\u5de5\u7a0b\u7684\u65f6\u95f4\u4e0d\u540c\uff0c\u4f46\u5f00\u5c40\u7c7b\u4f3c\u3002\u963f\u91cc\u5df4\u5df4\u6700\u5f00\u59cb\u5f15\u5165\u6df7\u6c8c\u5de5\u7a0b\uff0c\u4e5f\u662f\u4e3a\u4e86\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u3002\u636e\u4e2d\u4ead\u4ecb\u7ecd\uff0c\u963f\u91cc\u5df4\u5df4\u63a2\u7d22\u6df7\u6c8c\u5de5\u7a0b\u7684\u65f6\u95f4\u7ebf\u548c Netflix \u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u8fc7 Netflix \u4ece\u57fa\u7840\u8d44\u6e90\u5f00\u59cb\u5b9e\u8df5\uff0c\u963f\u91cc\u5df4\u5df4\u5219\u662f\u4ece\u5e94\u7528\u5c42\u5f00\u59cb\u3002\u963f\u91cc\u5df4\u5df4\u6700\u5f00\u59cb\u662f\u4e3a\u4e86\u89e3\u51b3\u6280\u672f\u67b6\u6784\u53d8\u5316\u548c\u7ec4\u7ec7\u53d8\u5316\u7684\u95ee\u9898\uff0c\u624d\u53bb\u6f14\u8fdb\u4e00\u4e9b\u65b0\u7684\u5b9e\u8df5\u3002\\n\\n![alibaba\u53d1\u5c55\u5386\u7a0b](/img/blog/alibaba-chaos-engineering-roadmap-until-2021.png)\\n\\n\u6df7\u6c8c\u5de5\u7a0b\u4e00\u6b65\u6b65\u8d70\u8fdb\u963f\u91cc\u5df4\u5df4\uff0c\u53ef\u4ee5\u5206\u4e3a\u4e94\u4e2a\u9636\u6bb5\uff1a\\n\\n\u7b2c\u4e00\u4e2a\u9636\u6bb5\u5728 2012 \u5e74\uff0c\u963f\u91cc\u5df4\u5df4\u7535\u5546\u4e1a\u52a1\u9047\u5230\u4e86\u5fae\u670d\u52a1\u4f9d\u8d56\u4e0d\u5408\u7406\u7684\u95ee\u9898\uff0c\u5bfc\u81f4\u6574\u4e2a\u7cfb\u7edf\u67b6\u6784\u51fa\u95ee\u9898\uff0c\u82b1\u4e86\u5f88\u957f\u7684\u65f6\u95f4\u505a\u4f9d\u8d56\u7684\u81ea\u52a8\u8bc6\u522b\u53ca\u6cbb\u7406\uff0c\u6700\u540e\u901a\u8fc7\u6253\u7834\u4e1a\u52a1\u548c\u7a33\u5b9a\u6027\u4e4b\u95f4\u7684\u8fb9\u754c\u3001\u5f15\u5165\u6545\u969c\u6ce8\u5165\u7684\u6280\u672f\uff0c\u89e3\u51b3\u4e86\u5fae\u670d\u52a1\u7684\u95ee\u9898\u3002\\n\\n\u7b2c\u4e8c\u4e2a\u9636\u6bb5\uff0c\u963f\u91cc\u5df4\u5df4\u5f00\u59cb\u5c1d\u8bd5\u505a\u7ebf\u4e0a\u5bb9\u707e\u3001\u5f02\u5730\u591a\u6d3b\u7b49\u5bb9\u707e\u6280\u672f\u3002\u901a\u8fc7\u6bd4\u8f83\u5927\u7684\u65ad\u7f51\u7b49\u673a\u623f\u5207\u6362\u6f14\u7ec3\u7b49\u65b9\u5f0f\uff0c\u89e3\u51b3\u95ee\u9898\u3002\\n\\n\u7b2c\u4e09\u4e2a\u9636\u6bb5\u5728\u4e2d\u4ead\u773c\u91cc\u662f\u91cc\u7a0b\u7891\u7684\u9636\u6bb5\u3002\u5728 2015 \u5e74\u5907\u6218\u53cc\u5341\u4e00\u4e4b\u540e\uff0c\u963f\u91cc\u5df4\u5df4\u6280\u672f\u56e2\u961f\u53d1\u73b0\u6574\u4e2a\u5907\u6218\u7684\u65b9\u6cd5\u53ef\u4ee5\u975e\u5e38\u4f53\u7cfb\u5316\uff1a\u5f53\u7cfb\u7edf\u590d\u6742\u5230\u4e00\u5b9a\u9636\u6bb5\uff0c\u7eb8\u9762\u68b3\u7406\u5df2\u7ecf\u96be\u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u4e00\u79cd\u9006\u5411\u7684\u65b9\u5f0f\u66b4\u9732\u95ee\u9898\uff1f2015-2016 \u5e74\uff0c\u963f\u91cc\u5df4\u5df4\u5f00\u59cb\u53bb\u505a\u7ebf\u4e0a\u6545\u969c\u6f14\u7ec3\uff0c\u4e5f\u662f\u4eca\u5929\u63d0\u5230\u7684\u6df7\u6c8c\u5de5\u7a0b\u7684\u524d\u671f\u9636\u6bb5\u3002\u4e2d\u4ead\u63d0\u5230\uff0c\u5728\u8fd9\u4e2a\u9636\u6bb5\u7684\u6838\u5fc3\u662f\u5e0c\u671b\u501f\u52a9\u6df7\u6c8c\u5de5\u7a0b\u89e3\u51b3\u5206\u5e03\u5f0f\u6280\u672f\uff0c\u4e0d\u53ea\u662f\u5fae\u670d\u52a1\uff0c\u5bf9\u6574\u4e2a\u7ebf\u4e0a\u7a33\u5b9a\u6027\u7684\u95ee\u9898\u505a\u5168\u65b9\u4f4d\u7684\u5ea6\u91cf\uff0c\u5305\u62ec\u5de5\u5177\u7cfb\u7edf\u548c\u76d1\u63a7\u9884\u6848\u7b49\u3002\\n\\n\u7b2c\u56db\u4e2a\u9636\u6bb5\u5f00\u59cb\u4e8e 2018\u5e74\uff0c\u963f\u91cc\u5df4\u5df4\u5f00\u59cb\u505a\u4e24\u4ef6\u4e8b\u60c5\uff1a\u963f\u91cc\u4e91\u6280\u672f\u56e2\u961f\u5f00\u59cb\u5bf9\u4e91\u5e95\u5ea7\u8fdb\u884c\u6df7\u6c8c\u5de5\u7a0b\u63a2\u7d22\uff0c\u63d0\u5347\u57fa\u7840\u8bbe\u65bd\u7684\u97e7\u6027\uff1b\u4f34\u968f\u7740\u963f\u91cc\u5df4\u5df4\u6280\u672f\u4e0a\u4e91\uff0c\u5f00\u59cb\u628a\u5185\u90e8\u7684\u9ad8\u53ef\u7528\u4fdd\u969c\u6280\u672f\uff0c\u901a\u8fc7\u4e91\u7684\u65b9\u5f0f\u5bf9\u5916\u8f93\u51fa\uff0c\u89e3\u51b3\u5ba2\u6237\u5e94\u7528\u9ad8\u53ef\u7528\u7684\u95ee\u9898\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u968f\u7740\u4e91\u670d\u52a1\u4e91\u80fd\u529b\u7684\u5bf9\u5916\u8f93\u51fa\uff0c\u6df7\u6c8c\u5de5\u7a0b\u80fd\u529b\u5f00\u59cb\u670d\u52a1\u5916\u90e8\u5ba2\u6237\u3002\\n\\n\u7b49\u5230\u7b2c\u4e94\u4e2a\u9636\u6bb5\uff0c\u4e5f\u5c31\u662f\u5728 2019 \u5e74 -2021 \u5e74\uff0c\u963f\u91cc\u5df4\u5df4\u5728\u6df7\u6c8c\u5de5\u7a0b\u4e0a\u7684\u63a2\u7d22\u5f00\u59cb\u5206\u4e3a\u4e24\u6761\u7ebf\uff0c\u4e00\u6761\u662f\u5546\u4e1a\u670d\u52a1\u548c\u5f00\u6e90\u4e00\u4f53\u5316\uff0c\u6e05\u6670\u5316\u6280\u672f\u6f14\u8fdb\u8def\u7ebf\u3001\u52a0\u901f\u6280\u672f\u6f14\u8fdb\u901f\u5ea6\uff0c\u4f53\u73b0\u5728\u73b0\u5728\u5c31\u662f\u9762\u5411\u5f00\u53d1\u8005\u7684\u4e00\u7ad9\u5f0f\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0\uff1b\u53e6\u4e00\u6761\u662f\u963f\u91cc\u5df4\u5df4\u96c6\u56e2\u5185\u90e8\u628a\u6df7\u6c8c\u5de5\u7a0b\u91cd\u89c6\u7a0b\u5ea6\u63d0\u5230\u4e00\u4e2a\u7a7a\u524d\u7684\u89c4\u6a21\u3002\\n\\n\u636e\u4e2d\u4ead\u4ecb\u7ecd\uff0c2020 \u5e74\u963f\u91cc\u5df4\u5df4\u505a\u4e86\u751f\u4ea7\u7a81\u88ad\u9879\u76ee\uff0c\u628a\u6240\u6709\u53ef\u80fd\u5f71\u54cd\u9ad8\u53ef\u7528\u7684\u91cd\u5927\u6545\u969c\u56e0\u5b50\uff0c\u5168\u90e8\u90fd\u805a\u5408\u5728\u4e00\u4e2a\u5e73\u53f0\uff0c\u516c\u53f8\u7684\u7ba1\u7406\u5c42\u4f1a\u5728\u4e00\u4e2a\u4e0d\u5b9a\u65f6\u7684\u65f6\u523b\u968f\u673a\u7684\u53bb\u53d1\u8d77\u8fd9\u79cd\u7a81\u88ad\u3002\u8fd9\u6b21\u751f\u4ea7\u7a81\u88ad\u7684\u6838\u5fc3\u8981\u6c42\u662f\uff0c\u88ab\u7a81\u88ad\u4e1a\u52a1\u5177\u5907\u57281\u5206\u949f\u53d1\u73b0\uff0c5\u5206\u949f\u5b9a\u4f4d\uff0c10 \u5206\u949f\u6062\u590d\u3002\\n\\n\u4ed6\u8c08\u5230\uff0c\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0c\u5df2\u7ecf\u628a\u6df7\u6c8c\u5de5\u7a0b\u548c\u963f\u91cc\u5df4\u5df4\u96c6\u56e2\u7684\u4e0a\u4e91\uff0c\u5305\u62ec\u4eba\u5458\u7ec4\u7ec7\u7684\u5e94\u6025\uff0c\u5df2\u7ecf\u5b8c\u5168\u4e32\u8054\u8d77\u6765\uff0c\u5728\u5185\u90e8\u7684\u9636\u6bb5\u6c89\u6dc0\u5230\u4eca\u5929\uff0c\u5176\u5b9e\u5df2\u7ecf\u662f\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u9636\u6bb5\u3002\u636e\u6089\uff0c\u5728\u963f\u91cc\u5df4\u5df4\u5185\u90e8\uff0c\u5c06\u201c\u9ad8\u53ef\u7528\u67b6\u6784\u201d\u548c\u201c\u97e7\u6027\u67b6\u6784\u7ec4\u7ec7\u201d\u5347\u7ea7\u6210\u4e3a\u201c\u5b89\u5168\u751f\u4ea7\u201d\uff0c\u76ee\u524d\u6df7\u6c8c\u5de5\u7a0b\u5df2\u7ecf\u6210\u4e3a\u5b89\u5168\u751f\u4ea7\u7684\u4e00\u4e2a\u57fa\u7840\u80fd\u529b\uff0c\u73b0\u5728\u5185\u90e8\u7684\u5404\u4e2a\u56e2\u961f\u501f\u52a9\u6df7\u6c8c\u5de5\u7a0b\u53bb\u81ea\u53d1\u6027\u5730\u505a\u5782\u76f4\u6f14\u7ec3\u3002\u57fa\u672c\u4e0a\u8986\u76d6\u4e86\u963f\u91cc\u5df4\u5df4\u5185\u90e8\u7684\u51e0\u5343\u4e2a\u5e94\u7528\uff0c\u6240\u6709\u7684\u6838\u5fc3\u4e1a\u52a1\u90fd\u6709\u8986\u76d6\uff0c\u5305\u62ec\u751f\u6001\u516c\u53f8\u5982\u8003\u62c9\u548c\u9ad8\u5fb7\u3002\\n\\n\u201c\u8fc7\u53bb\u5927\u5bb6\u5bf9\u6df7\u6c8c\u5de5\u7a0b\u7684\u7406\u89e3\u4f1a\u6bd4\u8f83\u6d45\uff0c\u4e3b\u8981\u53ef\u80fd\u5c31\u76f4\u63a5\u628a\u5b83\u7b49\u540c\u4e8e\u6545\u969c\u6ce8\u5165\u4e86\uff0c\u51fa\u73b0\u6df7\u6c8c\u5de5\u7a0b\u539f\u5219\u540e\uff0c\u6709\u4e86\u4e00\u4e2a\u76f8\u5bf9\u4e25\u8c28\u7684\u903b\u8f91\u5b9a\u4e49\uff0c\u5982\u679c\u7528\u4e00\u53e5\u8bdd\u6982\u62ec\u7684\u8bdd\uff0c\u6df7\u6c8c\u5de5\u7a0b\u5206\u4e24\u5c42\uff1a\u4e00\u5c42\u662f\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0\uff0c\u4e00\u5c42\u662f\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u8df5\uff0c\u4e24\u5c42\u914d\u5957\u624d\u80fd\u5e2e\u52a9\u4f01\u4e1a\u5b8c\u6574\u8fdb\u884c\u6df7\u6c8c\u5de5\u7a0b\u843d\u5730\u3002\u201d\u4e2d\u4ead\u8c08\u9053\u3002\u201c\u6574\u4f53\u6765\u770b\uff0c\u5bf9\u6df7\u6c8c\u5de5\u7a0b\u7684\u7406\u89e3\u5e94\u8be5\u662f\u5206\u5c42\u7684\uff0c\u6574\u6761\u8109\u7edc\u4e32\u8054\u8d77\u6765\u7684\u8bdd\uff0c\u4f60\u4f1a\u53d1\u73b0\u5176\u5b9e\u6df7\u6c8c\u5de5\u7a0b\u5728\u4f01\u4e1a\u7684\u6574\u4e2a\u6280\u672f\u5468\u671f\u6216\u8005\u7814\u53d1\u5468\u671f\u5f88\u591a\u5730\u65b9\u6709\u6240\u5f71\u54cd\u3002\u201d\\n\\n\u76f8\u8f83\u4e8e\u6d4b\u8bd5\u5173\u6ce8\u7684\u662f\u56fa\u5b9a\u7684\u8f93\u5165\u548c\u8f93\u51fa\u662f\u4ec0\u4e48\uff0c\u6df7\u6c8c\u5de5\u7a0b\u66f4\u52a0\u5f3a\u8c03\u5b9e\u9a8c\u548c\u63a2\u7d22\u3002\u201c\u4e00\u4e2a\u975e\u5e38\u660e\u663e\u7684\u533a\u522b\u662f\uff0c\u6211\u5728\u751f\u4ea7\u533a\u6267\u884c\u5404\u79cd\u5b9e\u9a8c\uff0c\u7136\u540e\u6211\u662f\u4e0d\u5e0c\u671b\u53bb\u6253\u7834\u6211\u5728\u7ebf\u4e0a\u7684\u4e00\u4e2a\u7a33\u6001\u3002\u201d\u4e2d\u4ead\u8c08\u9053\u3002InfoQ \u5728\u7cfb\u5217\u8bbf\u8c08\u4e2d\u4e5f\u53d1\u73b0\uff0c\u76f4\u63a5\u5728\u751f\u4ea7\u73af\u5883\u505a\u6df7\u6c8c\u5de5\u7a0b\u6d4b\u8bd5\uff0c\u9700\u8981\u6301\u8c28\u614e\u6001\u5ea6\uff0c\u8fd9\u662f\u7edd\u5927\u90e8\u5206\u4e1a\u5185\u4e13\u5bb6\u7684\u5171\u8bc6\u3002\\n\\n# \u201c\u6211\u201d\u53ef\u4ee5\u5f15\u5165\u6df7\u6c8c\u5de5\u7a0b\u5417\uff1f\\n\\n\u963f\u91cc\u5df4\u5df4\u7684\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u8df5\u7ecf\u9a8c\u662f\u5426\u53ef\u4ee5\u5957\u7528\u5230\u5176\u4ed6\u4f01\u4e1a\u5462\uff1f\u4ece\u884c\u4e1a\u89d2\u5ea6\u770b\uff0c\u6df7\u6c8c\u5de5\u7a0b\u6280\u672f\u6ca1\u6709\u660e\u663e\u7684\u884c\u4e1a\u9650\u5236\u3002\u5728\u5bf9\u6df7\u6c8c\u5de5\u7a0b\u7684\u62e5\u62b1\u7a0b\u5ea6\u4e0a\uff0c\u4e2d\u4ead\u8ba4\u4e3a\uff0c\u4ece\u5f15\u5165\u76ee\u7684\u548c\u7b56\u7565\u4e0a\u4e3b\u8981\u662f\u4e24\u7c7b\u4f01\u4e1a\uff1a\u4e00\u7c7b\u662f\u4e0e\u963f\u91cc\u5df4\u5df4\u7c7b\u4f3c\u7684\u4e92\u8054\u7f51\u4f01\u4e1a\uff0c\u5173\u6ce8\u7ebf\u4e0a\u6545\u969c\u7684\u5e94\u6025\uff1b\u53e6\u4e00\u7c7b\u662f\u6709\u81ea\u5df1\u7684\u4e91\u6216\u8005\u9636\u6bb5\u6027\u4e0a\u4e91\u7684\u4f01\u4e1a\uff0c\u9762\u5411 C \u7aef\u6216\u653f\u7b56\u6cd5\u89c4\u6709\u8981\u6c42\u7684\u4f01\u4e1a\uff08\u5982\uff1a\u8bc1\u5238\u3001\u94f6\u884c\uff09\u3002\\n\\n\u7531\u4e8e\u6df7\u6c8c\u5de5\u7a0b\u7684\u5c5e\u6027\u548c\u884c\u4e1a\u7279\u6b8a\u6027\uff0c\u5728\u91d1\u878d\u884c\u4e1a\u7684\u5c1d\u8bd5\u8f83\u65e9\u3002\u4e00\u65b9\u9762\uff0c\u91d1\u878d\u884c\u4e1a\u662f\u5bf9\u9ad8\u53ef\u7528\u4e25\u8c28\u6027\u6709\u7740\u9ad8\u8981\u6c42\u7684\u884c\u4e1a\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u91d1\u878d\u884c\u4e1a\u6b63\u5728\u9762\u4e34\u8f6c\u578b\u3002\u201c\u6240\u4ee5\u76ee\u524d\u6df7\u6c8c\u5de5\u7a0b\u3001\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u6216\u8005\u5176\u4ed6\u65b9\u9762\u7684\u67b6\u6784\u5347\u7ea7\uff0c\u80cc\u540e\u90fd\u9700\u8981\u8fd9\u6837\u4e00\u4e2a\u6293\u624b\u6765\u914d\u5408\uff0c\u6240\u4ee5\u6df7\u6c8c\u5de5\u7a0b\u662f\u6bd4\u8f83\u5408\u9002\u3002\u201d\u4e2d\u4ead\u544a\u8bc9 InfoQ\uff1a\u201c\u5bf9\u4e92\u8054\u7f51\u4e1a\u52a1\u800c\u8a00\uff0c\u7ebf\u4e0a\u53ef\u4ee5\u5206\u9636\u6bb5\u6765\u8bf4\uff0c\u4ece\u7206\u70b8\u534a\u5f84\u6765\u8bb2\uff0c\u9636\u6bb5\u6027\u7684\u5efa\u8bbe\uff0c\u914d\u5408\u73af\u5883\u6280\u672f\u5355\u5143\u5316\u3002\u201d\\n\\n\u4e0d\u6562\u5f15\u5165\u6df7\u6c8c\u5de5\u7a0b\uff0c\u5927\u591a\u6570\u4f01\u4e1a\u7684\u987e\u8651\u5728\u4e8e\uff0c\u4e0d\u540c\u90e8\u95e8\u5bf9\u6df7\u6c8c\u5de5\u7a0b\u7684\u8ba4\u77e5\u4e0d\u6e05\u6670\uff0c\u62c5\u5fe7\u843d\u5730\u7684\u7ed3\u679c\u3002\u4e2d\u4ead\u5efa\u8bae\u60f3\u8981\u5f15\u5165\u6df7\u6c8c\u5de5\u7a0b\u7684\u4f01\u4e1a\uff0c\u53ef\u4ee5\u5148\u56f4\u7ed5\u4f01\u4e1a\u7279\u70b9\u505a\u9488\u5bf9\u6027\u5b9e\u9a8c\uff0c\u5185\u90e8\u8981\u6709\u660e\u786e\u7684\u7ec4\u7ec7\uff0c\u77e5\u9053\u5982\u4f55\u914d\u5408\u6218\u7565\u843d\u5730\u67d0\u9879\u7684\u65f6\u95f4\uff0c\u4e0d\u518d\u8d70\u201c\u8001\u8def\u201d\uff0c\u5bf9\u6df7\u6c8c\u5de5\u7a0b\u6301\u6709\u53d1\u73b0\u6545\u969c\u3001\u53d1\u73b0 bug \u7684\u6001\u5ea6\uff0c\u800c\u662f\u4ece\u7cfb\u7edf\u7ba1\u7406\u89d2\u5ea6\u60f3\u8981\u5ea6\u91cf\u5168\u5c40\u7a33\u5b9a\u6027\u80fd\u529b\u3002\\n\\n\u4ece\u6280\u672f\u57fa\u7840\u3001\u7ec4\u7ec7\u67b6\u6784\u3001\u6d41\u7a0b\u5236\u5ea6\u548c\u6280\u672f\u3001\u4eba\u624d\u50a8\u5907\u4e0a\u6765\u8bf4\uff0c\u6df7\u6c8c\u5de5\u7a0b\u5bf9\u4f01\u4e1a\u5f15\u5165\u6ca1\u6709\u592a\u591a\u524d\u7f6e\u8981\u6c42\u3002\u4e2d\u4ead\u8c08\u9053\uff1a\u201c\u5bf9\u4f01\u4e1a\u7684\u6280\u672f\u67b6\u6784\u6ca1\u6709\u7279\u522b\u7684\u8981\u6c42\u3002\u6df7\u6c8c\u5de5\u7a0b\u7684\u524d\u63d0\u8981\u6c42\u662f\u9700\u8981\u5bf9\u4f01\u4e1a\u7a33\u6001\u7684\u89c2\u5bdf\u6307\u6807\u6709\u4e00\u4e2a\u51c6\u786e\u7684\u63cf\u8ff0\uff0c\u6240\u4ee5\u9700\u8981\u4f01\u4e1a\u5728\u53ef\u89c2\u6d4b\u6027\u4e0a\u6709\u4e00\u5b9a\u7684\u79ef\u7d2f\uff0c\u6709\u4e00\u4e9b\u57fa\u7840\u76d1\u63a7\u5c31\u53ef\u4ee5\u4e86\u3002\u201d\u6df7\u6c8c\u5de5\u7a0b\u4e3b\u8981\u89e3\u51b3\u4e24\u4e2a\u5c42\u9762\u7684\u95ee\u9898\uff1a\u5355\u673a\u7684\u7cfb\u7edf\u8bbe\u8ba1\u548c\u5468\u8fb9\u73af\u5883\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u78c1\u76d8\u3001\u5355\u673a\u7f51\u7edc\u7b49\uff1b\u96c6\u7fa4\u4e4b\u95f4\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u53ea\u8981\u4f01\u4e1a\u672c\u8eab\u652f\u6301\u4e00\u5b9a\u7684\u5206\u5e03\u5f0f\u5316\uff0c\u5c31\u53ef\u4ee5\u843d\u5730\u3002\\n\\n\u636e\u4ed6\u4ecb\u7ecd\uff0c\u5728\u963f\u91cc\u5df4\u5df4\u5185\u90e8\u6709\u4e00\u4e2a\u5236\u5ea6\uff1a\u7b2c\u4e00\uff0c\u88ab\u6f14\u7ec3\u8fc7\u7684\u6240\u6709\u53d1\u751f\u7684\u6545\u969c\uff0c\u90fd\u8981\u5177\u5907\u7ebf\u4e0a\u53ef\u6f14\u7ec3\u7684\u673a\u5236\uff0c\u771f\u6b63\u9a8c\u8bc1\u662f\u5426\u53ef\u4ee5\u6062\u590d\uff1b\u7b2c\u4e8c\uff0c\u6240\u6709\u5fae\u670d\u52a1\u7684\u67b6\u6784\u6216\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u67b6\u6784\uff0c\u4e00\u7ea7\u6216\u6838\u5fc3\u7ea7\u5e94\u7528\u4e0e\u975e\u6838\u5fc3\u7ea7\u522b\u7684\u5e94\u7528\u7684\u5173\u7cfb\u4e0d\u80fd\u662f\u5f3a\u4f9d\u8d56\uff0c\u9700\u8981\u6709\u81ea\u5df1\u7684\u9884\u6848\uff1b\u7b2c\u4e09\uff0c\u4ece\u7ec4\u7ec7\u7684\u89d2\u5ea6\u6709\u4e00\u5b9a\u7684\u9a8c\u6536\uff0c\u6bd4\u5982\u8bf4\u76d1\u63a7\u53d1\u73b0\u7387\u3001\u95ee\u9898\u5904\u7406\u7387\u7b49\uff0c\u9700\u8981\u5728\u4e00\u4e2a\u91cf\u5316\u7684\u6570\u5b57\u4e4b\u95f4\u3002\u4e2d\u4ead\u8c08\u5230\uff0c\u53ea\u8fd9\u4e09\u6761\u5236\u5ea6\uff0c\u4f01\u4e1a\u4ece\u5f15\u5165\u5230\u843d\u5730\u5c31\u9700\u8981\u8fdb\u884c\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e86\u3002\\n\\n# \u76f8\u8f85\u76f8\u6210\u7684\u6df7\u6c8c\u5de5\u7a0b\u548c\u4e91\u539f\u751f\\n\\n\u7ecf\u8fc7\u591a\u5e74\u7684\u53d1\u5c55\uff0c\u76ee\u524d\u4ece\u6280\u672f\u7684\u89d2\u5ea6\uff0c\u884c\u4e1a\u5185\u5df2\u7ecf\u6709\u4e86\u4e00\u4e9b\u901a\u7528\u7684\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\u89e3\u51b3\u65b9\u6848\u4f9b\u4f01\u4e1a\u9009\u62e9\u3002\u53ef\u4ee5\u770b\u5230\u7684\u662f\uff0c\u6df7\u6c8c\u5de5\u7a0b\u7684\u5b9e\u9a8c\u548c\u4e91\u5bc6\u5207\u76f8\u5173\u3002\u968f\u7740\u4e91\u670d\u52a1\u6e17\u900f\u5230\u5404\u884c\u5404\u4e1a\uff0c\u9010\u6e10\u53d1\u5c55\u6210\u4e3a\u65b0\u7684\u884c\u4e1a\u57fa\u7840\u8bbe\u65bd\uff0c\u5bf9\u4e91\u670d\u52a1\u7684\u97e7\u6027\u63d0\u51fa\u4e86\u66f4\u9ad8\u8981\u6c42\uff0c\u800c\u6df7\u6c8c\u5de5\u7a0b\u88ab\u9a8c\u8bc1\u53ef\u4ee5\u6709\u6548\u68c0\u9a8c\u4e91\u539f\u751f\u7cfb\u7edf\u7684\u97e7\u6027\u67b6\u6784\u3002\\n\\n\u201c\u97e7\u6027\u67b6\u6784\u7684\u524d\u63d0\u662f\u5148\u8981\u5bf9\u67b6\u6784\u6709\u4e00\u4e2a\u7406\u89e3\uff0c\u4e0d\u7ba1\u662f Java \u8bed\u8a00\u4f53\u7cfb\uff0c\u8fd8\u662f GO \u8bed\u8a00\u4f53\u7cfb\uff0c\u963f\u91cc\u4e91\u5e2e\u52a9\u5ba2\u6237\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u642d\u5efa\u6574\u4e2a\u67b6\u6784\uff0c\u7b2c\u4e8c\u4ef6\u4e8b\u662f\u5c1d\u8bd5\u628a\u5185\u90e8\u53d1\u751f\u8fc7\u7684\u6545\u969c\u3001\u5728\u884c\u4e1a\u770b\u5230\u7684\u6545\u969c\uff0c\u4ee5\u4e13\u5bb6\u7ecf\u9a8c\u7684\u65b9\u5f0f\u56fa\u5316\u5728\u5e73\u53f0\u4e2d\uff0c\u7ed3\u5408\u67b6\u6784\u505a\u9488\u5bf9\u6027\u6f14\u7ec3\u65b9\u6848\u7684\u63a8\u8350\u3002\u5f53\u4f01\u4e1a\u628a\u8fd9\u4e9b\u573a\u666f\u90fd\u9a8c\u6536\uff0c\u4f01\u4e1a\u7cfb\u7edf\u7684\u97e7\u6027\u5c31\u8fbe\u5230\u4e86\u4e00\u5b9a\u7684\u6c34\u5e73\u3002\u201d\u4e2d\u4ead\u8c08\u9053\u3002\\n\\n\u5728\u4f01\u4e1a\u4e0a\u4e91\u65e9\u671f\uff0c\u53ef\u4ee5\u5728\u4e0a\u4e91\u524d\u540e\u7684\u5e73\u884c\u73af\u5883\u4e0b\uff0c\u9488\u5bf9\u6027\u5730\u505a\u6df7\u6c8c\u5de5\u7a0b\u573a\u666f\u5b9e\u9a8c\uff0c\u89c2\u6d4b\u6574\u4e2a\u67b6\u6784\u7684\u53cd\u5e94\u662f\u5426\u4e00\u81f4\uff0c\u8fdb\u800c\u4e3a\u4f01\u4e1a\u4f7f\u7528\u4e91\u670d\u52a1\u3001\u8003\u91cf\u67b6\u6784\u7684\u5bb9\u707e\u80fd\u529b\u63d0\u4f9b\u53ef\u5224\u65ad\u7684\u4f9d\u636e\u3002\u5728\u4f01\u4e1a\u4e0a\u4e91\u540e\uff0c\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\u53ef\u4ee5\u5e2e\u52a9\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u68c0\u9a8c\u4e91\u670d\u52a1\u3002\u4e2d\u4ead\u89e3\u91ca\u9053\uff1a\u201c\u5927\u5bb6\u4f1a\u5173\u6ce8\u7528\u4e91\u59ff\u52bf\u662f\u5426\u6b63\u786e\uff0c\u6bd4\u5982\u8bf4\u5bb9\u5668\u4e2d\u95f4\u4ef6\uff0c\u6765\u53bb\u770b\u4f01\u4e1a\u662f\u4e0d\u662f\u6309\u7167\u4e91\u7684\u6700\u4f73\u5b9e\u8df5\u3002\u201d\\n\\n\u65e0\u53ef\u8bb3\u8a00\uff0c\u5bf9\u4e8e\u6df7\u6c8c\u5de5\u7a0b\u7684\u4ef7\u503c\uff0c\u76ee\u524d\u5728\u4e1a\u5185\u8fd8\u6ca1\u6709\u4e00\u4e2a\u660e\u786e\u7684\u5ea6\u91cf\u6807\u51c6\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u6709\u6548\u4f50\u8bc1\u3002\u636e\u4e2d\u4ead\u4ecb\u7ecd\uff0c\u4e00\u65b9\u9762\u53ef\u4ee5\u5148\u9009\u5b9a\u4e00\u4e2a\u573a\u666f\uff0c\u4ece\u7ed3\u679c\u4e0a\u770b\uff0c\u6df7\u6c8c\u5de5\u7a0b\u53ef\u4ee5\u4fdd\u8bc1\u573a\u666f\u4e0d\u52a3\u5316\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u5ea6\u91cf\u7ec4\u7ec7\u8fdb\u884c\u7a81\u88ad\uff0c\u4e0d\u7ba1\u7cfb\u7edf\u67b6\u6784\u548c\u4eba\u5458\u67b6\u6784\u600e\u4e48\u53d8\uff0c\u76d1\u63a7\u7ed3\u679c\u90fd\u5728\u5408\u7406\u7684\u8303\u56f4\u5185\u3002\u603b\u4f53\u800c\u8a00\uff0c\u6df7\u6c8c\u5de5\u7a0b\u7684\u6838\u5fc3\u5c31\u662f\u589e\u5f3a\u4fe1\u5fc3\uff0c\u4fdd\u8bc1\u7cfb\u7edf\u5728\u67d0\u4e2a\u573a\u666f\u4e0b\u7684\u80fd\u529b\u4e0d\u9000\u5316\u3002\u53ea\u8981\u8fd9\u4e2a\u7ec4\u7ec7\u6709\u5ea6\u91cf\u201c\u7279\u5b9a\u573a\u666f\u4e0b\u80fd\u529b\u662f\u5426\u9000\u5316\u201d\u7684\u6307\u6807\uff0c\u6df7\u6c8c\u5de5\u7a0b\u7684\u4ef7\u503c\u5c31\u663e\u800c\u6613\u89c1\u4e86\u3002\\n\\n> \u5609\u5bbe\u4ecb\u7ecd\uff1a\\n\\n> \u4e2d\u4ead\uff0c2011 \u5e74\u52a0\u5165\u963f\u91cc\u9ad8\u53ef\u7528\u67b6\u6784\u56e2\u961f\uff0c\u4e3b\u5bfc\u963f\u91cc\u6df7\u6c8c\u5de5\u7a0b\u9886\u57df\u89c4\u6a21\u5316\u5b9e\u8df5\u843d\u5730\u3002\u76ee\u524d\u4efb\u5168\u5c40\u9ad8\u53ef\u7528 & \u6df7\u6c8c\u5de5\u7a0b\u56e2\u961f\u6280\u672f\u8d1f\u8d23\u4eba\uff0c\u8d1f\u8d23\u5f02\u5730\u591a\u6d3b\u548c\u6df7\u6c8c\u5de5\u7a0b\u9886\u57df\u7684\u6280\u672f\u3002QCon \u5927\u4f1a\u51fa\u54c1\u4eba\uff0c\u6df7\u6c8c\u5de5\u7a0b\u5e03\u9053\u5e08\u3002"},{"id":"/2021/06/06/summer-2021","metadata":{"permalink":"/en/blog/2021/06/06/summer-2021","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2021-06-06-summer-2021.md","source":"@site/blog/2021-06-06-summer-2021.md","title":"\u6691\u671f2021","description":"\u5f00\u6e90\u8f6f\u4ef6\u4f9b\u5e94\u94fe\u70b9\u4eae\u8ba1\u5212","date":"2021-06-06T00:00:00.000Z","formattedDate":"June 6, 2021","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":5.82,"hasTruncateMarker":true,"authors":[{"name":"\u53f6\u98de","title":"ChaosBlade PMC","url":"https://github.com/tiny-x","imageURL":"https://avatars.githubusercontent.com/u/29175949?v=4"}],"frontMatter":{"title":"\u6691\u671f2021","author":"\u53f6\u98de","author_title":"ChaosBlade PMC","author_url":"https://github.com/tiny-x","author_image_url":"https://avatars.githubusercontent.com/u/29175949?v=4","tags":["chaosblade"],"description":"\u5f00\u6e90\u8f6f\u4ef6\u4f9b\u5e94\u94fe\u70b9\u4eae\u8ba1\u5212","hide_table_of_contents":false},"prevItem":{"title":"\u88ab\u4f60\u8d28\u7591\u4ef7\u503c\u7684\u6df7\u6c8c\u5de5\u7a0b\uff0c\u963f\u91cc\u5df4\u5df4\u5df2\u843d\u5730\u5b9e\u8df5\u4e869\u5e74","permalink":"/en/blog/2021/12/08/chaos-engineering-value"},"nextItem":{"title":"\u6df7\u6c8c\u5de5\u7a0b\u4ecb\u7ecd\u4e0e\u5b9e\u8df5","permalink":"/en/blog/2021/05/21/chaos-engineering"}},"content":"\u6b22\u8fce\u53c2\u52a0[\u5f00\u6e90\u8f6f\u4ef6\u4f9b\u5e94\u94fe\u70b9\u4eae\u8ba1\u5212](https://summer.iscas.ac.cn/help/) - \u6691\u671f 2021\uff08\u4ee5\u4e0b\u7b80\u79f0 \u6691\u671f 2021\uff09\u662f\u7531 \u4e2d\u56fd\u79d1\u5b66\u9662\u8f6f\u4ef6\u7814\u7a76\u6240 \u4e0e openEuler \u793e\u533a \u5171\u540c\u4e3e\u529e\u7684\u4e00\u9879\u9762\u5411\u9ad8\u6821\u5b66\u751f\u7684\u6691\u671f\u6d3b\u52a8\uff0c\u65e8\u5728\u9f13\u52b1\u5728\u6821\u5b66\u751f\u79ef\u6781\u53c2\u4e0e\u5f00\u6e90\u8f6f\u4ef6\u7684\u5f00\u53d1\u7ef4\u62a4\uff0c\u4fc3\u8fdb\u4f18\u79c0\u5f00\u6e90\u8f6f\u4ef6\u793e\u533a\u7684\u84ec\u52c3\u53d1\u5c55\u3002\u6211\u4eec\u5c06\u8054\u5408\u5404\u5927\u5f00\u6e90\u793e\u533a\uff0c\u9488\u5bf9\u91cd\u8981\u5f00\u6e90\u8f6f\u4ef6\u7684\u5f00\u53d1\u4e0e\u7ef4\u62a4\u63d0\u4f9b\u9879\u76ee\uff0c\u5e76\u5411\u5168\u7403\u9ad8\u6821\u5b66\u751f\u5f00\u653e\u62a5\u540d\u3002\\n\x3c!--truncate--\x3e\\n## \u76ee\u5f55\\n- [\u4efb\u52a1\u80cc\u666f](#\u4efb\u52a1\u80cc\u666f)\\n- [\u4efb\u52a1\u6e05\u5355](#\u4efb\u52a1\u6e05\u5355)\\n- [\u8054\u7cfb\u65b9\u5f0f](#\u8054\u7cfb\u65b9\u5f0f)\\n\\n## \u4efb\u52a1\u80cc\u666f\\n**\u5c06 ChaosBlade \u4e8b\u4ef6\u5bfc\u51fa\u5230 SkyWalking & Prometheus**\\n\\n\u901a\u5e38\uff0c\u7cfb\u7edf\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4f1a\u53d1\u751f\u5f88\u591a\u4e8b\u4ef6\uff0c\u5982\u8fdb\u7a0b\u5f02\u5e38\u3001\u91cd\u542f\u3001\u6df7\u6c8c\u5b9e\u9a8c\u7b49\u3002\u4e8b\u4ef6\u7684\u53d1\u751f\u53ef\u80fd\u4f1a\u5f71\u54cd\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u8f93\u51fa\u6df7\u6c8c\u5b9e\u9a8c\u7684\u4e8b\u4ef6\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5c06\u4e8b\u4ef6\u5bfc\u5165\u5230 SkyWalking \u548c Prometheus \uff0c\u7528\u4e8e\u540e\u7eed\u7cfb\u7edf\u5206\u6790\u7edf\u8ba1\u7b49\u573a\u666f\u7684\u4f7f\u7528\u3002\\n\\n**chaosblade-box \u652f\u6301\u6f14\u7ec3\u5de5\u5177 chaos-mesh**\\n\\nchaosblade-box \u662f\u4e00\u4e2a\u573a\u666f\u4e30\u5bcc\u7684\u6df7\u6c8c\u5de5\u7a0b\u5e73\u53f0\uff0cchaosblade-box \u7684\u51fa\u751f\u5c31\u5305\u542b\u4e86\u5de5\u5177\u5e02\u573a\u548c\u62d3\u5c55\u6f14\u7ec3\u5de5\u5177\u7684\u80fd\u529b\uff0c\u76ee\u524d\u5305\u542b\u6f14\u7ec3\u5de5\u5177 chaosblade \u548c litmuschaos\uff0c\u672c\u6b21\u4efb\u52a1\u6211\u4eec\u9700\u8981\u62d3\u5c55\u5bf9 chaos-mesh \u6f14\u7ec3\u5de5\u5177\u7684\u652f\u6301\u3002\\n\\n## \u4efb\u52a1\u6e05\u5355\\n\\n\u672c\u6b21\u201c\u6691\u671f2021\u201d\u603b\u5171\u6709\u4e24\u4e2a\u4efb\u52a1\uff0c\u5206\u522b\u662f\uff1a\\n- \u4efb\u52a1\u4e00\uff1a[\u5c06 ChaosBlade \u4e8b\u4ef6\u5bfc\u51fa\u5230 SkyWalking & Prometheus](https://github.com/chaosblade-io/chaosblade/issues/499)\\n- \u4efb\u52a1\u4e8c\uff1a[chaosblade-box \u652f\u6301\u6f14\u7ec3\u5de5\u5177 chaos-mesh](https://github.com/chaosblade-io/chaosblade/issues/498)\\n\\n\u5728\u4e0a\u4e00\u8282\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u4efb\u52a1\u7684\u80cc\u666f\uff0c\u4e0b\u9762\u5c0f\u8282\u4e2d\u6211\u4eec\u5c06\u4ee5\u201c\u4efb\u52a1\u4e00\u201d\u548c\u201c\u4efb\u52a1\u4e8c\u201d\u6765\u533a\u5206\u4efb\u52a1\u3002\\n\\n### \u4efb\u52a1\u4e00\\n\u672c\u6b21\u4efb\u52a1\u4e3b\u8981\u5728 chaosblade \u548c chaosblade-operator \u9879\u76ee\u7f16\u7801\u5373\u53ef\uff0cGithub \u5730\u5740:\\n\\n- chaosblade: https://github.com/chaosblade-io/chaosblade\\n- chaosblade-operator: https://github.com/chaosblade-io/chaosblade-operator\\n\\n#### \u8981\u6c42\u7684\u6280\u80fd\\n\\n- Golang, Kubernetes\\n\\n#### \u53c2\u8003\u8d44\u6599\\n- [chaosblade \u65b0\u624b\u6307\u5357](https://github.com/chaosblade-io/chaosblade/wiki/%E6%96%B0%E6%89%8B%E6%8C%87%E5%8D%97 )\\n- [chaosblade-operator \u5b9e\u73b0\u65b9\u6848](https://github.com/chaosblade-io/chaosblade/blob/master/CLOUDNATIVE.md)\\n- [skywalking \u4e8b\u4ef6\u76f8\u5173](https://github.com/chaosblade-io/chaosblade/issues/495)\\n- [prometheus \u81ea\u5b9a\u4e49exporter](https://prometheus.io/docs/instrumenting/writing_exporters/)\\n\\n#### \u4efb\u52a1\u5185\u5bb9\\n- \u5728 chaosblade cli \u6267\u884c\u5668\u4e0a\u4e0b\u6587\u57cb\u70b9\uff0c\u5c06\u6f14\u7ec3\u521b\u5efa\u3001\u6f14\u7ec3\u6062\u590d\u3001Java Agent \u6302\u8f7d\u7b49\u4e8b\u4ef6\u5bfc\u51fa\u5230 SkyWalking\\n- \u5728 chaosblade cli \u6267\u884c\u5668\u4e0a\u4e0b\u6587\u57cb\u70b9\uff0c\u5c06\u6f14\u7ec3\u521b\u5efa\u3001\u6f14\u7ec3\u6062\u590d\u3001Java Agent \u6302\u8f7d\u7b49\u4e8b\u4ef6\u5bfc\u51fa\u5230 Prometheus\\n- \u5728 chaosblade-operator \u5bf9 crd \u76d1\u542c\u5668\u57cb\u70b9\uff0c\u5c06 crd \u72b6\u6001\u7684\u53d8\u66f4\u4e8b\u4ef6\u5bfc\u51fa\u5230 SkyWalking \u548c Prometheus\\n\\n#### \u5b9e\u73b0\u6b65\u9aa4\\n- \u5728 chaosblade exec \u5305\u4e0b\u9762\u5206\u522b\u5305\u542b\u5f88\u591a\u6267\u884c\u5668\u6709 os\u3001jvm\u3001docker \u7b49\uff0c\u9700\u8981\u5bf9\u6267\u884c\u5668\u7684\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c\uff0c\u6765\u6f14\u7ec3\u6267\u884c\u3001\u6f14\u7ec3\u6062\u590d\u7b49\u4e8b\u4ef6\\n- \u5728 chaosblade-operator \u9879\u76ee\u4e0b\u76d1\u542c\u4e86 blade \u81ea\u5b9a\u4e49\u8d44\u6e90\u72b6\u6001\u7684\u53d8\u66f4\uff0c\u9700\u8981\u5c06 blade \u72b6\u6001\u7684\u53d8\u66f4\u4e8b\u4ef6\u5bfc\u51fa\u3002\\n\\n#### \u5de5\u4f5c\u91cf\\n\\n|  \u4efb\u52a1   | \u5de5\u4f5c\u91cf  |\\n|  ----  | ----  |\\n| \u4e86\u89e3\u6df7\u6c8c\u5de5\u7a0b\u548c ChaosBlade\uff0c\u80fd\u591f\u4f7f\u7528 ChaosBlade \u5bf9\u4e3b\u673a\u548c K8S \u6ce8\u5165\u6545\u969c | 5 |\\n| \u53ef\u4ee5\u5c1d\u8bd5\u642d\u5efa minikube \uff0c\u5b89\u88c5 chaosblade-operator\uff0c\u4e86\u89e3 Operator \u5b9e\u73b0 | 3 |\\n| \u4e86\u89e3 SkyWalking \u548c Prometheus | 5 |\\n| \u719f\u6089 Prometheus \u7684 exporter  | 5 |\\n| \u4e86\u89e3 SkyWalking \u7684\u4e8b\u4ef6\u5bfc\u5165\u65b9\u5f0f\uff0c\u53ef\u81ea\u884c\u9009\u62e9\u4e00\u79cd\u65b9\u6848\uff0c\u53c2\u8003 [ISSUE](https://github.com/chaosblade-io/chaosblade/issues/495)  | 5 |\\n| \u719f\u6089 chaosblade \u6267\u884c\u5668\u7684\u6a21\u578b\u5b9a\u4e49 | 3 |\\n| \u5728 chaosblade cli \u6267\u884c\u5668\u4e0a\u4e0b\u6587\u57cb\u70b9\uff0c\u5c06\u6f14\u7ec3\u521b\u5efa\u3001\u6f14\u7ec3\u6062\u590d\u3001Java Agent \u6302\u8f7d\u7b49\u4e8b\u4ef6\u5bfc\u51fa\u5230 SkyWalking | 5 |\\n| \u5728 chaosblade cli \u6267\u884c\u5668\u4e0a\u4e0b\u6587\u57cb\u70b9\uff0c\u5c06\u6f14\u7ec3\u521b\u5efa\u3001\u6f14\u7ec3\u6062\u590d\u3001Java Agent \u6302\u8f7d\u7b49\u4e8b\u4ef6\u5bfc\u51fa\u5230 Prometheus | 5 |\\n| \u5728 chaosblade operator \u5bf9 crd \u76d1\u542c\u5668\u57cb\u70b9\uff0c\u5c06 crd \u72b6\u6001\u7684\u53d8\u66f4\u4e8b\u4ef6\u5bfc\u51fa\u5230 SkyWalking \u548c Prometheus  | 5 |\\n| \u5355\u5143\u6d4b\u8bd5 | 3 |\\n| \u96c6\u6210\u6d4b\u8bd5 | 5 |\\n| PR \u4ea4\u4ed8 | 2 |\\n\\n### \u4efb\u52a1\u4e8c\\n\u672c\u6b21\u4efb\u52a1\u4e3b\u8981\u5728 chaosblade-box \u7f16\u7801\u5373\u53ef\uff0cGithub \u5730\u5740\uff1ahttps://github.com/chaosblade-io/chaosblade-box \uff0c\u53ef\u4ee5 litmuschaos \u662f\u5982\u4f55\u63a5\u5165\u5230 chaosblade-box \u7684\u3002\\n\\n#### \u8981\u6c42\u7684\u6280\u80fd\\n\\n- java\\n\\n#### \u53c2\u8003\u8d44\u6599\\n- [chaosblade-box \u7528\u6237\u624b\u518c](https://www.yuque.com/docs/share/bc9ad412-6f96-463b-b72d-6773b5fb5ea3?# )\\n- [chaosblade-box \u5f00\u53d1\u624b\u518c](https://www.yuque.com/docs/share/fa43fd1e-9de0-4f55-900b-08ab4e8cf06a?# )\\n- [chaos-mesh \u6587\u6863](https://chaos-mesh.org/docs)\\n\\n#### \u4efb\u52a1\u5185\u5bb9\\n- \u6dfb\u52a0 chaos-mesh \u573a\u666f\u89e3\u6790\\n- \u6dfb\u52a0 chaos-mesh \u6f14\u7ec3\u6267\u884c\u5668\\n\\n#### \u5b9e\u73b0\u6b65\u9aa4\\n- \u5728\u6a21\u5757 chaosblade-box-scenario\u4e0b\u6dfb\u52a0\u4e00\u4e2a chaosblade-box-scenario-chaosmesh \u7684\u5b9e\u73b0\u3002\\n- \u5728\u6a21\u5757 chaosblade-box-invoker \u4e0b\u6dfb\u52a0\u4e00\u4e2a chaosblade-box-invoker-chaosmesh-kubeapi \u5b9e\u73b0\u3002\\n\\n#### \u5de5\u4f5c\u91cf\\n\\n|  \u4efb\u52a1   | \u5de5\u4f5c\u91cf  |\\n|  ----  | ----  |\\n| \u4e86\u89e3 chaosblade-box\uff0c\u5e76\u4e14\u80fd\u90e8\u7f72\u548c\u4f7f\u7528 | 5 |\\n| \u4e86\u89e3 chaos-mesh\uff0c\u80fd\u4f7f\u7528 chaos-mesh \u6ce8\u5165\u6545\u969c | 5 |\\n| \u4e86\u89e3 chaosblade-box \u7684\u5de5\u5177\u5e02\u573a\u8bbe\u8ba1\uff0c\u8003\u8651\u5982\u4f55\u63a5\u5165 chaos-mesh | 3 |\\n| \u719f\u6089 chaos-mesh \u7684\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u548c CRD \u5b9a\u4e49 | 5 |\\n| \u5728 chaosblade-box \u89e3\u6790 chaos-mesh \u7684\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u548c CRD  | 5 |\\n| \u719f\u6089 chaos-mesh \u7684\u6f14\u7ec3\u521b\u5efa\u7684\u6d41\u7a0b | 5 |\\n| \u5728 chaosblade-box \u521b\u5efa chaos-mesh \u7684\u6f14\u7ec3  | 5 |\\n| \u5355\u5143\u6d4b\u8bd5 | 3 |\\n| \u96c6\u6210\u6d4b\u8bd5 | 5 |\\n| PR \u4ea4\u4ed8 | 2 |\\n\\n## \u8054\u7cfb\u65b9\u5f0f\\n- ChaosBlade \u9489\u9489\u8ba8\u8bba\u7fa4\u53f7\uff1a23177705\\n- \u90ae\u7bb1\uff1achaosblade.io.01@gmail.com"},{"id":"/2021/05/21/chaos-engineering","metadata":{"permalink":"/en/blog/2021/05/21/chaos-engineering","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2021-05-21-chaos-engineering.md","source":"@site/blog/2021-05-21-chaos-engineering.md","title":"\u6df7\u6c8c\u5de5\u7a0b\u4ecb\u7ecd\u4e0e\u5b9e\u8df5","description":"\u672c\u6587\u4f1a\u7740\u91cd\u4ecb\u7ecd\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\uff0c\u4e3a\u4ec0\u4e48\u9700\u8981\u6df7\u6c8c\u5de5\u7a0b\u4ee5\u53ca\u6df7\u6c8c\u5de5\u7a0b\u76f8\u5173\u5de5\u5177\u4e0e\u5b9e\u8df5\u3002","date":"2021-05-21T00:00:00.000Z","formattedDate":"May 21, 2021","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":14.595,"hasTruncateMarker":true,"authors":[{"name":"\u8096\u957f\u519b\uff08\u7a79\u8c37\uff0c@xcaspar\uff09","title":"Co-creator of ChaosBlade","url":"https://github.com/xcaspar","imageURL":"https://avatars.githubusercontent.com/u/3992234?s=64&v=4"}],"frontMatter":{"title":"\u6df7\u6c8c\u5de5\u7a0b\u4ecb\u7ecd\u4e0e\u5b9e\u8df5","author":"\u8096\u957f\u519b\uff08\u7a79\u8c37\uff0c@xcaspar\uff09","author_title":"Co-creator of ChaosBlade","author_url":"https://github.com/xcaspar","author_image_url":"https://avatars.githubusercontent.com/u/3992234?s=64&v=4","tags":["chaosblade"],"description":"\u672c\u6587\u4f1a\u7740\u91cd\u4ecb\u7ecd\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\uff0c\u4e3a\u4ec0\u4e48\u9700\u8981\u6df7\u6c8c\u5de5\u7a0b\u4ee5\u53ca\u6df7\u6c8c\u5de5\u7a0b\u76f8\u5173\u5de5\u5177\u4e0e\u5b9e\u8df5\u3002","hide_table_of_contents":false},"prevItem":{"title":"\u6691\u671f2021","permalink":"/en/blog/2021/06/06/summer-2021"},"nextItem":{"title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e94\uff09","permalink":"/en/blog/2020/08/06/chaosblade-start-5"}},"content":"\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u67b6\u6784\u4e0b\uff0c\u670d\u52a1\u95f4\u7684\u4f9d\u8d56\u65e5\u76ca\u590d\u6742\uff0c\u5f88\u96be\u8bc4\u4f30\u5355\u4e2a\u670d\u52a1\u6545\u969c\u5bf9\u6574\u4e2a\u7cfb\u7edf\u7684\u5f71\u54cd\uff0c\u5e76\u4e14\u8bf7\u6c42\u94fe\u8def\u957f\uff0c\u76d1\u63a7\u544a\u8b66\u7684\u4e0d\u5b8c\u5584\u5bfc\u81f4\u53d1\u73b0\u95ee\u9898\u3001\u5b9a\u4f4d\u95ee\u9898\u96be\u5ea6\u589e\u5927\uff0c\u540c\u65f6\u4e1a\u52a1\u548c\u6280\u672f\u8fed\u4ee3\u5feb\uff0c\u5982\u4f55\u6301\u7eed\u4fdd\u969c\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u548c\u9ad8\u53ef\u7528\u6027\u53d7\u5230\u5f88\u5927\u7684\u6311\u6218\u3002\u6211\u4eec\u77e5\u9053\u53d1\u751f\u6545\u969c\u7684\u90a3\u4e00\u523b\u4e0d\u662f\u7531\u4f60\u6765\u9009\u62e9\u7684\uff0c\u800c\u662f\u90a3\u4e00\u523b\u6765\u9009\u62e9\u4f60\uff0c\u4f60\u80fd\u505a\u7684\u5c31\u662f\u4e3a\u4e4b\u505a\u597d\u51c6\u5907\u3002\u6240\u4ee5\u6784\u5efa\u7a33\u5b9a\u6027\u7cfb\u7edf\u5f88\u91cd\u8981\u7684\u4e00\u73af\u662f\u6df7\u6c8c\u5de5\u7a0b\uff0c\u5728\u53ef\u63a7\u8303\u56f4\u6216\u73af\u5883\u4e0b\uff0c\u901a\u8fc7\u6545\u969c\u6ce8\u5165\uff0c\u6765\u6301\u7eed\u63d0\u5347\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u548c\u9ad8\u53ef\u7528\u80fd\u529b\u3002  \\n\u672c\u6587\u4f1a\u7740\u91cd\u4ecb\u7ecd\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\uff0c\u4e3a\u4ec0\u4e48\u9700\u8981\u6df7\u6c8c\u5de5\u7a0b\u4ee5\u53ca\u6df7\u6c8c\u5de5\u7a0b\u76f8\u5173\u5de5\u5177\u4e0e\u5b9e\u8df5\u3002\u5982\u6709\u9057\u6f0f\u6216\u9519\u8bef\uff0c\u6b22\u8fce\u8865\u5145\u6307\u6b63\u3002\\n\x3c!--truncate--\x3e\\n\\n## \u76ee\u5f55\\n\\n- [\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b](#\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b)\\n- [\u4e3a\u4ec0\u4e48\u9700\u8981\u6df7\u6c8c\u5de5\u7a0b](#\u4e3a\u4ec0\u4e48\u9700\u8981\u6df7\u6c8c\u5de5\u7a0b)\\n- [\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u65bd\u539f\u5219](#\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u65bd\u539f\u5219)\\n- [\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u65bd\u6b65\u9aa4](#\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u65bd\u6b65\u9aa4)\\n- [\u63a8\u8350\u5de5\u5177&\u4ea7\u54c1](#\u63a8\u8350\u5de5\u5177\u4ea7\u54c1)\\n- [\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u8df5\u6848\u4f8b](#\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u8df5\u6848\u4f8b)\\n- [\u76f8\u5173\u6587\u7ae0&\u4ea4\u6d41\u7fa4](#\u76f8\u5173\u6587\u7ae0\u4ea4\u6d41\u7fa4)\\n- [\u52a0\u5165\u6211\u4eec](#\u52a0\u5165\u6211\u4eec)\\n\\n## \u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\\n\u6df7\u6c8c\u5de5\u7a0b\u662f\u5728 [\u6df7\u6c8c\u5de5\u7a0b\u7406\u8bba](https://principlesofchaos.org/) \u4e00\u6587\u4e2d\u63d0\u51fa\uff0c\u4f46\u5728 2010 \u5e74 Netflix \u4ece\u7269\u7406\u673a\u57fa\u7840\u8bbe\u65bd\u8fc1\u79fb\u5230 AWS \u8fc7\u7a0b\u4e2d\uff0c\u4e3a\u4fdd\u8bc1 EC2 \u5b9e\u4f8b\u6545\u969c\u4e0d\u4f1a\u5bf9\u4e1a\u52a1\u9020\u6210\u5f71\u54cd\uff0c\u5176\u56e2\u961f\u5f00\u53d1\u51fa\u4e86\u6740 EC2 \u5b9e\u4f8b\u7684\u5de5\u5177\uff0c\u8fd9\u4e5f\u662f\u6df7\u6c8c\u5de5\u7a0b\u7684\u96cf\u5f62\u3002\u5728 2015 \u5e74\u793e\u533a\u53d1\u5e03\u300a\u6df7\u6c8c\u5de5\u7a0b\u7406\u8bba\u300b\u4e00\u6587\u540e\uff0c\u6df7\u6c8c\u5de5\u7a0b\u5f00\u59cb\u5feb\u901f\u53d1\u5c55\u3002  \\n\u6df7\u6c8c\u5de5\u7a0b\u662f\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e0a\u8fdb\u884c\u5b9e\u9a8c\u7684\u5b66\u79d1\uff0c\u65e8\u5728\u63d0\u5347\u7cfb\u7edf\u5bb9\u9519\u6027\uff0c\u5efa\u7acb\u7cfb\u7edf\u62b5\u5fa1\u751f\u4ea7\u73af\u5883\u4e2d\u53d1\u751f\u4e0d\u53ef\u9884\u77e5\u95ee\u9898\u7684\u4fe1\u5fc3\u3002\u201d\u6253\u4e0d\u5012\u6211\u7684\u5fc5\u4f7f\u6211\u5f3a\u5927\u201c\uff0c\u5c3c\u91c7\u7684\u8fd9\u53e5\u8bdd\u5f88\u597d\u4e86\u8be0\u91ca\u4e86\u6df7\u6c8c\u5de5\u7a0b\u53cd\u8106\u5f31\u7684\u601d\u60f3\u3002\\n\\n## \u4e3a\u4ec0\u4e48\u9700\u8981\u6df7\u6c8c\u5de5\u7a0b\\n\u5206\u5e03\u5f0f\u7cfb\u7edf\u65e5\u76ca\u590d\u6742\uff0c\u800c\u4e14\u5728\u7cfb\u7edf\u9010\u6e10\u4e91\u5316\u7684\u80cc\u666f\u4e0b\uff0c\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u53d7\u5230\u5f88\u5927\u7684\u6311\u6218\u3002\u8fd9\u91cc\u4ece\u56db\u4e2a\u89d2\u8272\u6765\u8bf4\u660e\u6df7\u6c8c\u5de5\u7a0b\u7684\u91cd\u8981\u6027\u3002\\n- \u5bf9\u4e8e\u67b6\u6784\u5e08\u6765\u8bf4\uff0c\u53ef\u4ee5\u9a8c\u8bc1\u7cfb\u7edf\u67b6\u6784\u7684\u5bb9\u9519\u80fd\u529b\uff0c\u6bd4\u5982\u9a8c\u8bc1\u73b0\u5728\u63d0\u5021\u7684\u9762\u5411\u5931\u8d25\u8bbe\u8ba1\u7684\u7cfb\u7edf\uff1b\\n- \u5bf9\u4e8e\u5f00\u53d1\u548c\u8fd0\u7ef4\uff0c\u53ef\u4ee5\u63d0\u9ad8\u6545\u969c\u7684\u5e94\u6025\u6548\u7387\uff0c\u5b9e\u73b0\u6545\u969c\u544a\u8b66\u3001\u5b9a\u4f4d\u3001\u6062\u590d\u7684\u6709\u6548\u548c\u9ad8\u6548\u6027\u3002\\n- \u5bf9\u4e8e\u6d4b\u8bd5\u6765\u8bf4\uff0c\u53ef\u4ee5\u5f25\u8865\u4f20\u7edf\u6d4b\u8bd5\u65b9\u6cd5\u7559\u4e0b\u7684\u7a7a\u767d\uff0c\u4e4b\u524d\u7684\u6d4b\u8bd5\u65b9\u6cd5\u57fa\u672c\u4e0a\u662f\u4ece\u7528\u6237\u7684\u89d2\u5ea6\u53bb\u505a\uff0c\u800c\u6df7\u6c8c\u5de5\u7a0b\u662f\u4ece\u7cfb\u7edf\u7684\u89d2\u5ea6\u8fdb\u884c\u6d4b\u8bd5\uff0c\u964d\u4f4e\u6545\u969c\u590d\u53d1\u7387\u3002\\n- \u5bf9\u4e8e\u4ea7\u54c1\u548c\u8bbe\u8ba1\uff0c\u901a\u8fc7\u6df7\u6c8c\u4e8b\u4ef6\u67e5\u770b\u4ea7\u54c1\u7684\u8868\u73b0\uff0c\u63d0\u5347\u5ba2\u6237\u4f7f\u7528\u4f53\u9a8c\u3002\u6240\u4ee5\u8bf4\u6df7\u6c8c\u5de5\u7a0b\u9762\u5411\u7684\u4e0d\u4ec5\u4ec5\u662f\u5f00\u53d1\u3001\u6d4b\u8bd5\uff0c\u62e5\u6709\u6700\u597d\u7684\u5ba2\u6237\u4f53\u9a8c\u662f\u6bcf\u4e2a\u4eba\u7684\u76ee\u6807\\n\u6240\u4ee5\u5b9e\u65bd\u6df7\u6c8c\u5de5\u7a0b\uff0c\u53ef\u4ee5\u63d0\u65e9\u53d1\u73b0\u751f\u4ea7\u73af\u5883\u4e0a\u7684\u95ee\u9898\uff0c\u5e76\u4e14\u53ef\u4ee5\u4ee5\u6218\u517b\u6218\uff0c\u63d0\u5347\u6545\u969c\u5e94\u6025\u6548\u7387\u548c\u53ef\u4ee5\u4f7f\u7528\u4f53\u9a8c\uff0c\u9010\u6e10\u5efa\u8bbe\u9ad8\u53ef\u7528\u7684\u97e7\u6027\u7cfb\u7edf\u3002\\n\\n## \u6df7\u6c8c\u5de5\u7a0b\u5b9e\u65bd\u539f\u5219\\n![chaos-eng-rules](https://user-images.githubusercontent.com/3992234/63409822-858d2f80-c424-11e9-9aac-58f34a0f5c6d.png)\\n\\n- \u7b2c\u4e00\u6761\uff1a\u201d\u5efa\u7acb\u4e00\u4e2a\u56f4\u7ed5\u7a33\u5b9a\u72b6\u6001\u884c\u4e3a\u7684\u5047\u8bf4\u201c\uff0c\u5176\u5305\u542b\u4e24\u4e2a\u542b\u4e49\uff0c\u4e00\u4e2a\u662f\u5b9a\u4e49\u80fd\u76f4\u63a5\u53cd\u5e94\u4e1a\u52a1\u670d\u52a1\u7684\u76d1\u63a7\u6307\u6807\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u91cc\u7684\u76d1\u63a7\u6307\u6807\u5e76\u4e0d\u662f\u7cfb\u7edf\u8d44\u6e90\u6307\u6807\uff0c\u6bd4\u5982CPU\u3001\u5185\u5b58\u7b49\uff0c\u8fd9\u91cc\u7684\u76d1\u63a7\u6307\u6807\u662f\u80fd\u76f4\u63a5\u8861\u91cf\u7cfb\u7edf\u670d\u52a1\u8d28\u91cf\u7684\u4e1a\u52a1\u76d1\u63a7\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e00\u4e2a\u8c03\u7528\u5ef6\u8fdf\u6545\u969c\uff0c\u8bf7\u6c42\u7684 RT \u4f1a\u53d8\u957f\uff0c\u5bf9\u4e0a\u5c42\u4ea4\u6613\u91cf\u9020\u6210\u4e0b\u8dcc\u7684\u5f71\u54cd\uff0c\u90a3\u4e48\u8fd9\u91cc\u4ea4\u6613\u91cf\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u76d1\u63a7\u6307\u6807\u3002\u8fd9\u6761\u539f\u5219\u7684\u53e6\u4e00\u4e2a\u542b\u4e49\u662f\u6545\u969c\u89e6\u53d1\u65f6\uff0c\u5bf9\u7cfb\u7edf\u884c\u4e3a\u4f5c\u51fa\u5047\u8bbe\u4ee5\u53ca\u76d1\u63a7\u6307\u6807\u7684\u9884\u671f\u53d8\u5316\u3002\\n- \u7b2c\u4e8c\u6761\u6307\u6a21\u62df\u751f\u4ea7\u73af\u5883\u4e2d\u771f\u5b9e\u7684\u6216\u6709\u7406\u8bba\u4f9d\u636e\u7684\u6545\u969c\u573a\u666f\uff0c\u6bd4\u5982\u4f9d\u8d56\u7684\u670d\u52a1\u8c03\u7528\u5ef6\u8fdf\u3001\u8d85\u65f6\u3001\u5f02\u5e38\u7b49\u3002\\n- \u7b2c\u4e09\u6761\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u8fd0\u884c\u5b9e\u9a8c\uff0c\u4f46\u4e5f\u4e0d\u662f\u8bf4\u5fc5\u987b\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u6267\u884c\uff0c\u53ea\u662f\u5b9e\u9a8c\u73af\u5883\u8d8a\u771f\u5b9e\uff0c\u6df7\u6c8c\u5de5\u7a0b\u8d8a\u6709\u4ef7\u503c\uff0c\u4f46\u5982\u679c\u77e5\u9053\u7cfb\u7edf\u5728\u67d0\u4e2a\u6545\u969c\u573a\u666f\u4e0b\u4e0d\u5177\u5907\u5bb9\u707e\u80fd\u529b\uff0c\u4e0d\u53ef\u4ee5\u6267\u884c\u6b64\u6df7\u6c8c\u5b9e\u9a8c\uff0c\u907f\u514d\u8d44\u635f\u53d1\u751f\u3002\\n- \u7b2c\u56db\u6761\uff0c\u6301\u7eed\u7684\u6267\u884c\u624d\u80fd\u6301\u7eed\u7684\u964d\u4f4e\u6545\u969c\u590d\u53d1\u7387\u548c\u63d0\u524d\u53d1\u73b0\u6545\u969c\uff0c\u6240\u4ee5\u9700\u8981\u6301\u7eed\u7684\u81ea\u52a8\u5316\u8fd0\u884c\u8bd5\u9a8c\u3002\\n- \u6700\u540e\u4e00\u4e2a\uff0c\u6df7\u6c8c\u5de5\u7a0b\u5f88\u91cd\u8981\u7684\u4e00\u70b9\u662f\u63a7\u5236\u7206\u70b8\u534a\u5f84\uff0c\u4e5f\u5c31\u662f\u8bd5\u9a8c\u5f71\u54cd\u9762\uff0c\u9632\u6b62\u9884\u671f\u5916\u7684\u8d44\u635f\u53d1\u751f\uff0c\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u9694\u79bb\u6216\u8005\u6545\u969c\u6ce8\u5165\u5de5\u5177\u63d0\u4f9b\u7684\u914d\u7f6e\u7c92\u5ea6\u6765\u63a7\u5236\u3002\\n\\n## \u6df7\u6c8c\u5de5\u7a0b\u5b9e\u65bd\u6b65\u9aa4\\n- \u5236\u8ba2\u6df7\u6c8c\u5b9e\u9a8c\u8ba1\u5212\\n- \u5b9a\u4e49\u7cfb\u7edf\u7a33\u6001\u6307\u6807\\n- \u505a\u51fa\u7cfb\u7edf\u5bb9\u9519\u884c\u4e3a\u5047\u8bbe\\n- \u6267\u884c\u6df7\u6c8c\u5b9e\u9a8c\\n- \u68c0\u67e5\u7cfb\u7edf\u7a33\u6001\u6307\u6807\\n- \u8bb0\u5f55&\u6062\u590d\u6df7\u6c8c\u5b9e\u9a8c\\n- \u4fee\u590d\u53d1\u73b0\u7684\u95ee\u9898\\n- \u81ea\u52a8\u5316\u6301\u7eed\u8fdb\u884c\u9a8c\u8bc1\\n\\n## \u63a8\u8350\u5de5\u5177\u4ea7\u54c1\\n![awesome-chaos-engineering.png](https://user-images.githubusercontent.com/3992234/63409859-9473e200-c424-11e9-89bc-09eff69dd390.jpg)\\n\u5927\u5bb6\u53ef\u4ee5\u4ece\u5de5\u5177\u7684\u573a\u666f\u4e30\u5bcc\u5ea6\u3001\u7c7b\u578b\u3001\u6613\u7528\u6027\u7b49\u65b9\u9762\u6765\u9009\u62e9\u4e00\u6b3e\u5408\u9002\u7684\u5de5\u5177\uff0cawesome-chaos-engineering Github \u9879\u76ee\u6536\u7eb3\u4e86\u4e00\u4e9b\u5f00\u6e90\u7684\u6df7\u6c8c\u5de5\u7a0b\u5de5\u5177\uff0c\u5728 CNCF Landscape \u4e2d\u6df7\u6c8c\u5de5\u7a0b\u4f5c\u4e3a\u5355\u72ec\u7684\u4e00\u4e2a\u9886\u57df\u5b58\u5728\uff0c\u5e76\u4e14\u6536\u7eb3\u4e86\u4e00\u4e9b\u4e3b\u6d41\u7684\u5de5\u5177\uff0c\u5305\u542b\u963f\u91cc\u5df4\u5df4\u5f00\u6e90\u7684 ChaosBlade \u5de5\u5177\u548c AHAS \u963f\u91cc\u4e91\u4ea7\u54c1\u3002\\n![cncf-landscape.png](https://user-images.githubusercontent.com/3992234/63409944-b705fb00-c424-11e9-887f-5e057b31536a.jpg)\\n\u4e0b\u6587\u91cd\u70b9\u4ecb\u7ecd ChaosBlade \u53ca\u5176\u76f8\u5173\u5b9e\u8df5\u3002\\n\\n### ChaosBlade\\n\\nChaosBlade \u4e2d\u6587\u540d\u6df7\u6c8c\u4e4b\u5203\uff0c\u662f\u4e00\u6b3e\u6df7\u6c8c\u5b9e\u9a8c\u5b9e\u65bd\u5de5\u5177\uff0c\u652f\u6301\u4e30\u5bcc\u7684\u5b9e\u9a8c\u573a\u666f\uff0c\u6bd4\u5982\u5e94\u7528\u3001\u5bb9\u5668\u3001\u57fa\u7840\u8d44\u6e90\u7b49\u3002\u5de5\u5177\u4f7f\u7528\u7b80\u5355\uff0c\u6269\u5c55\u65b9\u4fbf\uff0c\u5176\u9075\u5faa\u793e\u533a\u63d0\u51fa\u7684\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u3002Github \u5730\u5740\uff1ahttps://github.com/chaosblade-io/chaosblade\\n\\n#### \u529f\u80fd\u548c\u7279\u70b9\\n**\u573a\u666f\u4e30\u5bcc\u5ea6\u9ad8**\\nChaosBlade \u652f\u6301\u7684\u6df7\u6c8c\u5b9e\u9a8c\u573a\u666f\u4e0d\u4ec5\u8986\u76d6\u57fa\u7840\u8d44\u6e90\uff0c\u5982 CPU \u6ee1\u8f7d\u3001\u78c1\u76d8 IO \u9ad8\u3001\u7f51\u7edc\u5ef6\u8fdf\u7b49\uff0c\u8fd8\u5305\u62ec\u8fd0\u884c\u5728 JVM \u4e0a\u7684\u5e94\u7528\u5b9e\u9a8c\u573a\u666f\uff0c\u5982 Dubbo \u8c03\u7528\u8d85\u65f6\u548c\u8c03\u7528\u5f02\u5e38\u3001\u6307\u5b9a\u65b9\u6cd5\u5ef6\u8fdf\u6216\u629b\u5f02\u5e38\u4ee5\u53ca\u8fd4\u56de\u7279\u5b9a\u503c\u7b49\uff0c\u540c\u65f6\u6d89\u53ca\u5bb9\u5668\u76f8\u5173\u7684\u5b9e\u9a8c\uff0c\u5982\u6740\u5bb9\u5668\u3001\u6740 Pod\u3002\u540e\u7eed\u4f1a\u6301\u7eed\u7684\u589e\u52a0\u5b9e\u9a8c\u573a\u666f\u3002\\n\\n**\u4f7f\u7528\u7b80\u6d01\uff0c\u6613\u4e8e\u7406\u89e3**\\nChaosBlade \u901a\u8fc7 CLI \u65b9\u5f0f\u6267\u884c\uff0c\u5177\u6709\u53cb\u597d\u7684\u547d\u4ee4\u63d0\u793a\u529f\u80fd\uff0c\u53ef\u4ee5\u7b80\u5355\u5feb\u901f\u7684\u4e0a\u624b\u4f7f\u7528\u3002\u547d\u4ee4\u7684\u4e66\u5199\u9075\u5faa\u963f\u91cc\u5df4\u5df4\u96c6\u56e2\u5185\u591a\u5e74\u6545\u969c\u6d4b\u8bd5\u548c\u6f14\u7ec3\u5b9e\u8df5\u62bd\u8c61\u51fa\u7684\u6545\u969c\u6ce8\u5165\u6a21\u578b\uff0c\u5c42\u6b21\u6e05\u6670\uff0c\u6613\u4e8e\u9605\u8bfb\u548c\u7406\u89e3\uff0c\u964d\u4f4e\u4e86\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u65bd\u7684\u95e8\u69db\u3002\\n\\n**\u52a8\u6001\u52a0\u8f7d\uff0c\u65e0\u4fb5\u5165**\\nChaosBlade\u91c7\u7528\u52a8\u6001\u6545\u969c\u6ce8\u5165\u7684\u65b9\u5f0f\uff0c\u6267\u884c\u6df7\u6c8c\u5b9e\u9a8c\u65f6\u7528\u6237\u7cfb\u7edf\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u7cfb\u7edf\u6539\u9020\u6216\u53d1\u5e03\uff0c\u5f00\u7bb1\u5373\u7528\u3002\\n\\n**\u573a\u666f\u6269\u5c55\u65b9\u4fbf**\\n\u6240\u6709\u7684 ChaosBlade \u5b9e\u9a8c\u6267\u884c\u5668\u540c\u6837\u9075\u5faa\u4e0a\u8ff0\u63d0\u5230\u7684\u6545\u969c\u6ce8\u5165\u6a21\u578b\uff0c\u4f7f\u5b9e\u9a8c\u573a\u666f\u6a21\u578b\u7edf\u4e00\uff0c\u4fbf\u4e8e\u5f00\u53d1\u548c\u7ef4\u62a4\u3002\u6a21\u578b\u672c\u8eab\u901a\u4fd7\u6613\u61c2\uff0c\u5b66\u4e60\u6210\u672c\u4f4e\uff0c\u53ef\u4ee5\u4f9d\u636e\u6a21\u578b\u65b9\u4fbf\u5feb\u6377\u7684\u6269\u5c55\u66f4\u591a\u7684\u6df7\u6c8c\u5b9e\u9a8c\u573a\u666f\u3002\\n\\n#### \u4f7f\u7528\u65b9\u5f0f\\n\u5728 ChaosBlade Release \u9875\u9762\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684\u5305\uff0c\u89e3\u538b\u5373\u7528\u3002\u5982\u521b\u5efa\u4e00\u4e2a CPU \u6ee1\u8f7d\u5b9e\u9a8c\uff0c\u547d\u4ee4\u4e3a\uff1a\\n```\\nblade create cpu fullload\\n```\\n\u5177\u4f53\u4f7f\u7528\u65b9\u5f0f\u53ef\u8be6\u89c1\uff1a[ChaosBlade \u65b0\u624b\u6307\u5357](https://github.com/chaosblade-io/chaosblade/wiki/%E6%96%B0%E6%89%8B%E6%8C%87%E5%8D%97)\\n\\n\u4e2d\u6587\u4f7f\u7528\u6587\u6863\uff1a[\u5e2e\u52a9\u6587\u6863](https://chaosblade-io.gitbook.io/chaosblade-help-zh-cn/)\\n\\n#### \u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\\n![](https://user-images.githubusercontent.com/3992234/63409808-80c87b80-c424-11e9-9fa8-26b52e1fef73.jpg)\\n\u8be5\u6a21\u578b\u5206\u56db\u6b21\uff0c\u5c42\u5c42\u9012\u8fdb\uff0c\u5f88\u6e05\u6670\u7684\u8868\u8fbe\u51fa\u5bf9\u4ec0\u4e48\u7ec4\u4ef6\u505a\u5b9e\u9a8c\uff0c\u5b9e\u9a8c\u8303\u56f4\u662f\u4ec0\u4e48\uff0c\u5b9e\u9a8c\u89e6\u53d1\u7684\u5339\u914d\u89c4\u5219\u6709\u54ea\u4e9b\uff0c\u6267\u884c\u4ec0\u4e48\u5b9e\u9a8c\u3002\u8be5\u6a21\u578b\u7b80\u6d01\u3001\u901a\u7528\uff0c\u8bed\u8a00\u9886\u57df\u65e0\u5173\u3001\u6613\u4e8e\u5b9e\u73b0\u3002\u963f\u91cc\u96c6\u56e2\u5185\u7684 C++\u3001NodeJS\u3001Dart \u5e94\u7528\u4ee5\u53ca\u5bb9\u5668\u5e73\u53f0\u7684\u5b9e\u9a8c\u573a\u666f\u90fd\u57fa\u4e8e\u6b64\u6a21\u578b\u5b9e\u73b0\u3002\u6b64\u6a21\u578b\u5177\u6709\u5f88\u91cd\u8981\u7684\u610f\u4e49\uff0c\u4f9d\u636e\u6b64\u6a21\u578b\u53ef\u4ee5\u66f4\u7cbe\u51c6\u7684\u63cf\u8ff0\u3001\u66f4\u597d\u7684\u7406\u89e3\u3001\u66f4\u65b9\u4fbf\u6c89\u6dc0\u5b9e\u9a8c\u573a\u666f\u4ee5\u53ca\u53d1\u6398\u66f4\u591a\u7684\u573a\u666f\u3002\u4f9d\u636e\u6b64\u6a21\u578b\u5b9e\u73b0\u7684\u5de5\u5177\u66f4\u52a0\u89c4\u8303\u3001\u7b80\u6d01\u3002\u5b9e\u9a8c\u6a21\u578b\u4ecb\u7ecd\u53ef\u8be6\u89c1\uff1a[\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u4ecb\u7ecd](https://github.com/chaosblade-io/chaosblade/wiki/%E6%B7%B7%E6%B2%8C%E5%AE%9E%E9%AA%8C%E6%A8%A1%E5%9E%8B)\u3002\\n\\n## \u6df7\u6c8c\u5de5\u7a0b\u5b9e\u8df5\u6848\u4f8b\\n![Screen Shot 2019-08-21 at 2.44.42 P](https://user-images.githubusercontent.com/3992234/63409672-35ae6880-c424-11e9-8a93-f4b10bdf6afb.png)\\n\u6b64\u62d3\u6251\u56fe\u6765\u81ea\u4e8e\u963f\u91cc\u4e91 AHAS \u4ea7\u54c1\u67b6\u6784\u611f\u77e5\u529f\u80fd\uff0c\u53ef\u81ea\u52a8\u611f\u77e5\u67b6\u6784\u62d3\u6251\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c55\u793a\u8fdb\u7a0b\u3001\u7f51\u7edc\u3001\u8282\u70b9\u7b49\u6570\u636e\u3002\u8fd9\u4e2a\u5206\u5e03\u5f0f\u670d\u52a1 Demo \u5206\u4e09\u7ea7\u8c03\u7528\uff0cconsumer \u8c03\u7528 provider\uff0cprovider \u8c03\u7528 base\uff0c\u540c\u65f6 provider \u8fd8\u8c03\u7528 mk-demo \u6570\u636e\u5e93\uff0cprovider \u548c base \u670d\u52a1\u5177\u6709\u4e24\u4e2a\u5b9e\u4f8b\uff0c\u5728 AHAS \u67b6\u6784\u62d3\u6251\u56fe\u4e0a\uff0c\u6211\u4eec\u70b9\u51fb\u4e00\u4e2a\u5b9e\u4f8b\u8282\u70b9\uff0c\u53ef\u4ee5\u5230\u975e\u5e38\u6e05\u6670\u7684\u8c03\u7528\u5173\u7cfb\u3002\u6211\u4eec\u540e\u9762\u7ed3\u5408\u8fd9\u4e2a Demo \u53bb\u8bb2\u89e3\u5b9e\u8df5\u3002\\n\\n### \u9a8c\u8bc1\u76d1\u63a7\u544a\u8b66\\n![Screen Shot 2019-08-21 at 2.43.36 P](https://user-images.githubusercontent.com/3992234/63409252-63df7880-c423-11e9-9b39-13e9e5dca075.png)  \\n![Screen Shot 2019-08-21 at 2.43.58 P](https://user-images.githubusercontent.com/3992234/63409276-6e017700-c423-11e9-945d-4312005ba27e.png)\\n\u6848\u4f8b\u4e00\uff0c\u6211\u4eec\u9a8c\u8bc1\u7cfb\u7edf\u7684\u76d1\u63a7\u544a\u8b66\u6027\u6709\u6548\u6027\u3002\u6309\u7167\u524d\u9762\u63d0\u5230\u7684\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u65bd\u6b65\u9aa4\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6848\u4f8b\u6267\u884c\u7684\u5b9e\u9a8c\u573a\u666f\u662f\u6570\u636e\u5e93\u8c03\u7528\u5ef6\u8fdf\uff0c\u6211\u4eec\u5148\u5b9a\u4e49\u76d1\u63a7\u6307\u6807\uff1a\u6162 SQL \u6570\u548c\u544a\u8b66\u4fe1\u606f\uff0c\u505a\u51fa\u671f\u671b\u5047\u8bbe\uff1a\u6162 SQL \u6570\u589e\u52a0\uff0c\u9489\u9489\u7fa4\u6536\u5230\u6162 SQL \u544a\u8b66\u3002\u63a5\u4e0b\u6765\u6267\u884c\u5b9e\u9a8c\u3002\u6211\u4eec\u76f4\u63a5\u4f7f\u7528 ChaosBlade \u5de5\u5177\u6267\u884c\uff0c\u53ef\u4ee5\u770b\u4e0b\u5de6\u4e0b\u89d2\uff0c\u6211\u4eec\u5bf9 demo-provider \u6ce8\u5165\u8c03\u7528 mysql \u67e5\u8be2\u65f6\uff0c\u82e5\u6570\u636e\u5e93\u662f demo \u4e14\u8868\u540d\u662f d_discount\uff0c\u5219\u5bf9 50% \u7684\u67e5\u8be2\u64cd\u4f5c\u5ef6\u8fdf 600 \u6beb\u79d2\u3002\u6211\u4eec\u4f7f\u7528\u963f\u91cc\u4e91\u4ea7\u54c1 ARMS \u505a\u76d1\u63a7\u544a\u8b66\u3002\u5927\u5bb6\u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u6267\u884c\u5b8c\u6df7\u6c8c\u5b9e\u9a8c\u540e\uff0c\u5f88\u5feb\u9489\u9489\u7fa4\u91cc\u5c31\u6536\u5230\u4e86\u62a5\u8b66\u3002\u6240\u4ee5\u6211\u4eec\u5bf9\u6bd4\u4e0b\u4e4b\u524d\u5b9a\u4e49\u7684\u76d1\u63a7\u6307\u6807\uff0c\u662f\u7b26\u5408\u9884\u671f\u7684\u3002\u4f46\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u6b21\u7b26\u5408\u9884\u671f\u5e76\u4e0d\u4ee3\u8868\u4ee5\u540e\u4e5f\u7b26\u5408\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u6301\u7eed\u6027\u7684\u9a8c\u8bc1\u3002\u51fa\u73b0\u6162 SQL\uff0c\u53ef\u901a\u8fc7 ARMS \u7684 [\u94fe\u8def\u8ffd\u8e2a](https://help.aliyun.com/document_detail/63796.html) \u6765\u6392\u67e5\u5b9a\u4f4d\uff0c\u53ef\u4ee5\u5f88\u6e05\u695a\u7684\u770b\u51fa\u54ea\u6761\u8bed\u53e5\u6267\u884c\u6162\u3002\\n\\n### \u6848\u4f8b\u4e8c\\n![Screen Shot 2019-08-21 at 2.44.07 P](https://user-images.githubusercontent.com/3992234/63409297-778adf00-c423-11e9-9179-d991eab7b6db.png)\\n\u524d\u9762\u8bb2\u4e86\u4e00\u4e2a\u7b26\u5408\u9884\u671f\u7684\u6848\u4f8b\uff0c\u6211\u4eec\u518d\u6765\u770b\u4e00\u4e2a\u4e0d\u7b26\u5408\u9884\u671f\u7684\u3002\u6b64\u6848\u4f8b\u662f\u9a8c\u8bc1\u7cfb\u7edf\u5f02\u5e38\u5b9e\u4f8b\u9694\u79bb\u7684\u80fd\u529b\uff0c\u6211\u4eec\u7684 Demo \u4e2d consumer \u8c03\u7528 provider \u670d\u52a1\uff0cprovider \u670d\u52a1\u5177\u6709\u4e24\u4e2a\u5b9e\u4f8b\uff0c\u6211\u4eec\u5bf9\u5176\u4e2d\u4e00\u4e2a\u6ce8\u5165\u5ef6\u8fdf\u6545\u969c\uff0c\u76d1\u63a7\u6307\u6807\u662f consumer \u7684 QPS\uff0c\u7a33\u6001\u5728 510 \u5de6\u53f3\u3002\u6211\u4eec\u505a\u7684\u5bb9\u9519\u5047\u8bbe\u662f\u7cfb\u7edf\u4f1a\u81ea\u52a8\u9694\u79bb\u6216\u4e0b\u7ebf\u51fa\u95ee\u9898\u7684\u670d\u52a1\u5b9e\u4f8b\uff0c\u9632\u6b62\u8bf7\u6c42\u8def\u7531\u7684\u6b64\u5b9e\u4f8b\uff0c\u6240\u6709 QPS \u4f1a\u6709\u77ed\u6682\u7684\u4e0b\u8dcc\uff0c\u4f46\u5f88\u5feb\u4f1a\u6062\u590d\u3002\u8fd9\u4e2a\u6848\u4f8b\uff0c\u6211\u4eec\u4f7f\u7528\u963f\u91cc\u4e91 AHAS \u6df7\u6c8c\u5b9e\u9a8c\u5e73\u53f0\u6765\u6267\u884c\uff0c\u6211\u4eec\u5bf9 demo-provider-1 \u6ce8\u5165\u5ef6\u8fdf\u6545\u969c\uff0c\u57fa\u4e8e\u6b64\u5e73\u53f0\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u6267\u884c\u6df7\u6c8c\u5b9e\u9a8c\u3002\u6267\u884c\u6df7\u6c8c\u5b9e\u9a8c\u540e\uff0cQPS \u4e0b\u8dcc\u5230 40 \u5de6\u53f3\uff0c\u5f88\u957f\u65f6\u95f4\u6ca1\u6709\u81ea\u52a8\u6062\u590d\uff0c\u6240\u4ee5\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u6211\u4eec\u901a\u8fc7\u4eba\u5de5\u7684\u65b9\u5f0f\u5bf9\u8be5\u5f02\u5e38\u7684\u5b9e\u4f8b\u505a\u4e0b\u7ebf\u5904\u7406\uff0c\u5f88\u5feb\u5c31\u770b\u5230\uff0cconsumer \u7684 QPS \u6062\u590d\u6b63\u5e38\u3002\u6240\u4ee5\u6211\u4eec\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u53d1\u73b0\u4e86\u7cfb\u7edf\u95ee\u9898\uff0c\u6211\u4eec\u540e\u9762\u9700\u8981\u505a\u5c31\u662f\u8bb0\u5f55\u6b64\u95ee\u9898\uff0c\u5e76\u4e14\u63a8\u52a8\u4fee\u590d\uff0c\u540e\u7eed\u505a\u6301\u7eed\u6027\u7684\u9a8c\u8bc1\u3002\\n\\n## \u52a0\u5165\u6211\u4eec\\n- ChaosBlade \u9489\u9489\u8ba8\u8bba\u7fa4\u53f7\uff1a23177705"},{"id":"/2020/08/06/chaosblade-start-5","metadata":{"permalink":"/en/blog/2020/08/06/chaosblade-start-5","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2020-08-06-chaosblade-start-5.md","source":"@site/blog/2020-08-06-chaosblade-start-5.md","title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e94\uff09","description":"\u524d\u8a00","date":"2020-08-06T00:00:00.000Z","formattedDate":"August 6, 2020","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":17.2,"hasTruncateMarker":true,"authors":[{"name":"\u90ed\u65ed\u4e1c\uff08@sunny0826\uff09","title":"Maintainer of ChaosBlade","url":"https://github.com/sunny0826","imageURL":"https://avatars.githubusercontent.com/u/24563928?v=4","key":"guoxudong"}],"frontMatter":{"authors":"guoxudong","title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e94\uff09","tags":["chaosblade"],"hide_table_of_contents":false},"prevItem":{"title":"\u6df7\u6c8c\u5de5\u7a0b\u4ecb\u7ecd\u4e0e\u5b9e\u8df5","permalink":"/en/blog/2021/05/21/chaos-engineering"},"nextItem":{"title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u56db\uff09","permalink":"/en/blog/2020/07/22/chaosblade-start-4"}},"content":"## \u524d\u8a00\\n\\n\u5728\u4e0a\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528 **ChaosBlade Operator** \u5bf9 node \u8d44\u6e90\u8fdb\u884c\u6df7\u6c8c\u5b9e\u9a8c\u3002\u4ece\u672c\u7ae0\u5c06\u7ee7\u7eed\u5bf9 Kubernetes Container \u8d44\u6e90\u7684\u6df7\u6c8c\u5b9e\u9a8c\u8fdb\u884c\u8bb2\u89e3\uff0c\u540c\u65f6\u4e5f\u914d\u5957\u4e86 [katacode](https://katacoda.com/) \u4ea4\u4e92\u5f0f\u6559\u7a0b\uff0c\u8bfb\u8005\u53ef\u7528\u901a\u8fc7 katacode\uff0c\u5728\u6d4f\u89c8\u5668\u4e0a\u64cd\u4f5c\u771f\u5b9e\u7684 Kubernetes \u548c ChaosBlade\uff0c\u540c\u65f6\u672c\u7bc7\u4e5f\u662f\u7cfb\u5217\u6587\u7ae0\u7684\u5012\u6570\u7b2c\u4e8c\u7bc7\uff0c\u5b9e\u8df5\u5185\u5bb9\u7684\u6700\u540e\u4e00\u7bc7\u3002\\n\x3c!--truncate--\x3e\\n> katacode \u73b0\u5df2\u5173\u95ed\\n\\n## \u5b9e\u9a8c\u5bf9\u8c61\uff1aContainer\\n\\nPod \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668\uff08Container\uff09\u7ec4\u6210\u3002\u5bb9\u5668\uff08Container\uff09\u662f\u4e00\u79cd\u7528\u6765\u6253\u5305\u5df2\u7ecf\u7f16\u8bd1\u597d\u7684\u4ee3\u7801\u4ee5\u53ca\u8fd0\u884c\u65f6\u9700\u8981\u7684\u5404\u4e2a\u4f9d\u8d56\u9879\u7684\u6280\u672f\u3002\u60a8\u8fd0\u884c\u7684\u6bcf\u4e2a\u5bb9\u5668\u90fd\u662f\u53ef\u4ee5\u91cd\u590d\u8fd0\u884c\u7684\uff1b\u5305\u542b\u4f9d\u8d56\u9879\u7684\u6807\u51c6\u5316\u610f\u5473\u7740\u60a8\u5728\u4efb\u4f55\u5730\u70b9\u8fd0\u884c\u5b83\u90fd\u4f1a\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002\\n\\n## Container \u5b9e\u9a8c\u573a\u666f\\n\\n\u540c\u4e4b\u524d\u7684\u6587\u7ae0\uff0c\u672c\u7bc7\u9ed8\u8ba4\u5df2\u5b89\u88c5 [guestbook](https://github.com/cloudnativeapp/guestbook?spm=5176.2020520152.0.0.7c5f16ddH8myx6) \u5e94\u7528\u548c ChaosBlade Operator\u3002\\n\\n### container \u8d44\u6e90\u81ea\u8eab\u7684\u573a\u666f\\n\\n#### \u5220\u9664 container\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u5220\u9664 chaosblade \u547d\u540d\u7a7a\u95f4\u4e0b\uff0cPod \u540d\u4e3a `guestbook-7b87b7459f-cqkq2` \u4e2d container id \u662f `c6cdcf60b82b854bc4bab64308b466102245259d23e14e449590a8ed816403ed` \u7684\u5bb9\u5668\u3002\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n`remove_container_by_id.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: remove-container-by-id\\nspec:\\n  experiments:\\n  - scope: container\\n    target: container\\n    action: remove\\n    desc: \\"remove container by id\\"\\n    matchers:\\n    - name: container-ids\\n      value: [\\"c6cdcf60b82b854bc4bab64308b466102245259d23e14e449590a8ed816403ed\\"]\\n      # pod name\\n    - name: names\\n      value: [\\"guestbook-7b87b7459f-cqkq2\\"]\\n    - name: namespace\\n      value: [\\"chaosblade\\"]\\n```\\n\\n\u83b7\u53d6 container \u540d\u79f0\uff1a\\n\\n```bash\\n$ kubectl get pod guestbook-7b87b7459f-cqkq2 -o custom-columns=CONTAINER:.status.containerStatuses[0].name,ID:.status.containerStatuses[0].containerID\\n```\\n\\n\u4fee\u6539 `remove_container_by_id.yaml` \u4e2d\u7684 `container-ids` \u548c `names`\u3002\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f remove_container_by_id.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade remove-container-by-id -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u89c2\u6d4b\u7ed3\u679c**\\n\\n\u67e5\u770b\u5bb9\u6613 ID\uff0c\u53ef\u4ee5\u770b\u5230\u5bb9\u5668ID\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u65e7\u5bb9\u5668\u88ab\u5220\u9664\u4e86\uff0c\u62c9\u8d77\u4e86\u65b0\u5bb9\u5668\u3002\\n\\n![\u5220\u9664 container](https://tvax4.sinaimg.cn/large/ad5fbf65gy1ghh7lolrl9g20xq0g67wh.gif)\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f remove_container_by_id.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade remove-container-by-id`\\n\\n### container \u5185CPU\u8d1f\u8f7d\u573a\u666f\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u6307\u5b9a chaosblade \u547d\u540d\u7a7a\u95f4\u4e0b Pod \u540d\u4e3a `guestbook-7b87b7459f-cqkq2`\uff0ccontainer id \u4e3a 2ff814b246f86\uff0c\u4f7f\u5176 CPU \u8d1f\u8f7d\u4e3a 100%\u3002\\n\\n**\u5b9e\u9a8c\u51c6\u5907**\\n\\n\u7531\u4e8e\u4f7f\u7528 helm \u5b89\u88c5\u7684 [guestbook](https://github.com/cloudnativeapp/guestbook?spm=5176.2020520152.0.0.7c5f16ddH8myx6) \u6ca1\u6709\u5bf9\u8d44\u6e90\u8fdb\u884c\u9650\u5236\uff0c\u8fdb\u884c\u8d1f\u8f7d\u5b9e\u9a8c\u7684\u8bdd\uff0c\u4f1a\u5bfc\u81f4\u6574\u4e2a\u8282\u70b9\u7684\u6545\u969c\uff0c\u6240\u4ee5\u5728\u5b9e\u9a8c\u4e4b\u524d\u9700\u8981**\u5bf9\u8d44\u6e90\u8fdb\u884c\u9650\u5236**\u3002\\n\\n```bash\\n$ kubectl patch deployment redis-slave --patch \'{\\"spec\\": {\\"template\\": {\\"spec\\": {\\"containers\\": [{\\"name\\": \\"redis-slave\\",\\"resources\\": {\\"limits\\":{\\"cpu\\":\\"300m\\",\\"memory\\":\\"512Mi\\"} }}]}}}}\'\\n```\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n`increase_container_cpu_load_by_id.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: increase-container-cpu-load-by-id\\nspec:\\n  experiments:\\n  - scope: container\\n    target: cpu\\n    action: fullload\\n    desc: \\"increase container cpu load by id\\"\\n    matchers:\\n    - name: container-ids\\n      value:\\n      - \\"5ad91eb49c1c6f8357e8d455fd27dad5d0c01c5cc3df36a3acdb1abc75f68a11\\"\\n    - name: cpu-percent\\n      value: [\\"100\\"]\\n      # pod names\\n    - name: names\\n      value: [\\"redis-slave-55d8c8ffbd-jd8sm\\"]\\n    - name: namespace\\n      value: [\\"chaosblade\\"]\\n```\\n\\n\u83b7\u53d6 container \u540d\u79f0\uff1a\\n\\n```bash\\n$ kubectl get pod redis-slave-55d8c8ffbd-jd8sm -o custom-columns=CONTAINER:.status.containerStatuses[0].name,ID:.status.containerStatuses[0].containerID\\n```\\n\\n\u4fee\u6539 `increase_container_cpu_load_by_id.yaml` \u4e2d\u7684 `container-ids` \u548c `names`\u3002\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl get blade increase-container-cpu-load-by-id -o json`\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u89c2\u6d4b\u7ed3\u679c**\\n\\n\u53ef\u4ece\u76d1\u63a7\u7cfb\u7edf\u89c2\u6d4b\u5230\u7ed3\u679c\\n\\n![container \u5185CPU\u8d1f\u8f7d\u573a\u666f](https://tvax1.sinaimg.cn/large/ad5fbf65gy1ghh7p4zsblj20ct07eaac.jpg)\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f increase_container_cpu_load_by_id.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade increase-container-cpu-load-by-id`\\n\\n### container \u5185\u7f51\u7edc\u5b9e\u9a8c\u573a\u666f\\n\\n\u8be5\u573a\u666f\u4e0e Pod \u5b9e\u9a8c\u573a\u666f\u7c7b\u4f3c\u3002\\n\\n#### container \u7f51\u7edc\u5ef6\u8fdf\u573a\u666f\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u5bf9 chaosblade \u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u5bf9 `redis-master-68857cd57c-hknb6` Pod \u4e2d container id \u662f `02655dfdd9f0f712a10d63fdc6721f4dcee0a390e37717fff068bf3f85abf85e` \u7684\u5bb9\u5668\u7684 6379 \u7aef\u53e3\u6dfb\u52a0 3000 \u6beb\u79d2\u8bbf\u95ee\u5ef6\u8fdf\uff0c\u5ef6\u8fdf\u65f6\u95f4\u4e0a\u4e0b\u6d6e\u52a8 1000 \u6beb\u79d2\u3002\\n\\n**\u5b9e\u9a8c\u53c2\u6570**\\n\\n| \u53c2\u6570 | \u7c7b\u578b | \u8bf4\u660e |\\n| --- | --- | --- |\\n| `destination-ip` | string | \u76ee\u6807 IP. \u652f\u6301\u901a\u8fc7\u5b50\u7f51\u63a9\u7801\u6765\u6307\u5b9a\u4e00\u4e2a\u7f51\u6bb5\u7684IP\u5730\u5740, \u4f8b\u5982 192.168.1.0/24. \u5219 192.168.1.0~192.168.1.255 \u90fd\u751f\u6548\u3002\u4f60\u4e5f\u53ef\u4ee5\u6307\u5b9a\u56fa\u5b9a\u7684 IP\uff0c\u5982 192.168.1.1 \u6216\u8005 192.168.1.1/32\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u90fd\u53f7\u5206\u9694\u591a\u4e2a\u53c2\u6570\uff0c\u4f8b\u5982 192.168.1.1,192.168.2.1\u3002 |\\n| `exclude-port` | string | \u6392\u9664\u6389\u7684\u7aef\u53e3\uff0c\u9ed8\u8ba4\u4f1a\u5ffd\u7565\u6389\u901a\u4fe1\u7684\u5bf9\u7aef\u7aef\u53e3\uff0c\u76ee\u7684\u662f\u4fdd\u7559\u901a\u4fe1\u53ef\u7528\u3002\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\uff0c\u4f7f\u7528\u9017\u53f7\u5206\u9694\u6216\u8005\u8fde\u63a5\u7b26\u8868\u793a\u8303\u56f4\uff0c\u4f8b\u5982 22,8000 \u6216\u8005 8000-8010\u3002 \u8fd9\u4e2a\u53c2\u6570\u4e0d\u80fd\u4e0e --local-port \u6216\u8005 --remote-port \u53c2\u6570\u4e00\u8d77\u4f7f\u7528\u3002 |\\n| `exclude-ip` | string | \u6392\u9664\u53d7\u5f71\u54cd\u7684 IP\uff0c\u652f\u6301\u901a\u8fc7\u5b50\u7f51\u63a9\u7801\u6765\u6307\u5b9a\u4e00\u4e2a\u7f51\u6bb5\u7684IP\u5730\u5740, \u4f8b\u5982 192.168.1.0/24. \u5219 192.168.1.0~192.168.1.255 \u90fd\u751f\u6548\u3002\u4f60\u4e5f\u53ef\u4ee5\u6307\u5b9a\u56fa\u5b9a\u7684 IP\uff0c\u5982 192.168.1.1 \u6216\u8005 192.168.1.1/32\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u90fd\u53f7\u5206\u9694\u591a\u4e2a\u53c2\u6570\uff0c\u4f8b\u5982 192.168.1.1,192.168.2.1\u3002 |\\n| `interface` | string | \u7f51\u5361\u8bbe\u5907\uff0c\u4f8b\u5982 eth0 (\u5fc5\u8981\u53c2\u6570)\u3002 |\\n| `local-port` | string | \u672c\u5730\u7aef\u53e3\uff0c\u4e00\u822c\u662f\u672c\u673a\u66b4\u9732\u670d\u52a1\u7684\u7aef\u53e3\u3002\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\uff0c\u4f7f\u7528\u9017\u53f7\u5206\u9694\u6216\u8005\u8fde\u63a5\u7b26\u8868\u793a\u8303\u56f4\uff0c\u4f8b\u5982 80,8000-8080\u3002 |\\n| `offset` | string | \u5ef6\u8fdf\u65f6\u95f4\u4e0a\u4e0b\u6d6e\u52a8\u7684\u503c, \u5355\u4f4d\u662f\u6beb\u79d2\u3002 |\\n| `remote-port` | string | \u8fdc\u7a0b\u7aef\u53e3\uff0c\u4e00\u822c\u662f\u8981\u8bbf\u95ee\u7684\u5916\u90e8\u66b4\u9732\u670d\u52a1\u7684\u7aef\u53e3\u3002\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\uff0c\u4f7f\u7528\u9017\u53f7\u5206\u9694\u6216\u8005\u8fde\u63a5\u7b26\u8868\u793a\u8303\u56f4\uff0c\u4f8b\u5982 80,8000-8080\u3002 |\\n| `time` | string | \u5ef6\u8fdf\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2 (\u5fc5\u8981\u53c2\u6570)\u3002 |\\n| `force` |  | \u5f3a\u5236\u8986\u76d6\u5df2\u6709\u7684 tc \u89c4\u5219\uff0c\u8bf7\u52a1\u5fc5\u5728\u660e\u786e\u4e4b\u524d\u7684\u89c4\u5219\u53ef\u8986\u76d6\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u3002 |\\n| `ignore-peer-port` |  | \u9488\u5bf9\u6dfb\u52a0 --exclude-port \u53c2\u6570\uff0c\u62a5 ss \u547d\u4ee4\u627e\u4e0d\u5230\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u5ffd\u7565\u6392\u9664\u7aef\u53e3\u3002 |\\n| `timeout` | string | \u8bbe\u5b9a\u8fd0\u884c\u65f6\u957f\uff0c\u5355\u4f4d\u662f\u79d2\uff0c\u901a\u7528\u53c2\u6570\u3002 |\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n`delay_container_network_by_id.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: delay-container-network-by-id\\nspec:\\n  experiments:\\n  - scope: container\\n    target: network\\n    action: delay\\n    desc: \\"delay container network by container id\\"\\n    matchers:\\n    - name: container-ids\\n      value:\\n      - \\"02655dfdd9f0f712a10d63fdc6721f4dcee0a390e37717fff068bf3f85abf85e\\"\\n    - name: names\\n      value:\\n      - \\"redis-master-68857cd57c-hknb6\\"\\n    - name: namespace\\n      value:\\n      - \\"chaosblade\\"\\n    - name: local-port\\n      value: [\\"6379\\"]\\n    - name: interface\\n      value: [\\"eth0\\"]\\n    - name: time\\n      value: [\\"3000\\"]\\n    - name: offset\\n      value: [\\"1000\\"]\\n```\\n\\n\u83b7\u53d6 Pod \u540d\u79f0\u548c container id\uff1a\\n\\n```bash\\n$ kubectl get pod redis-master-68857cd57c-hknb6 -o custom-columns=POD_NAME:.metadata.name,CONTAINER:.status.containerStatuses[0].name,ID:.status.containerStatuses[0].containerID\\n```\\n\\n\u4fee\u6539 `delay_container_network_by_id.yaml` \u4e2d\u7684 `container-ids` \u548c `names`\u3002\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f delay_container_network_by_id.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade delay-container-network-by-id -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001.\\n\\n**\u89c2\u6d4b\u7ed3\u679c**\\n\\n```bash\\n# \u83b7\u53d6\u5b9e\u9a8c pod ip\\n$ kubectl get pod -l app=redis,role=master -o jsonpath={.items..status.podIP}\\n10.42.0.19\\n# \u8fdb\u5165\u89c2\u6d4b pod\\n$ kubectl exec -it redis-slave-55d8c8ffbd-jd8sm bash\\n# \u5728 pod \u4e2d\u5b89\u88c5 telnet\\n$ apt-get update && apt-get install -y telnet\\n# \u6d4b\u8bd5\u65f6\u95f4\\n$ time echo \\"\\" | telnet 10.42.0.19 6379\\nTrying 10.42.0.19...\\nConnected to 10.42.0.19.\\nEscape character is \'^]\'.\\nConnection closed by foreign host.\\n\\nreal    0m3.790s\\nuser    0m0.007s\\nsys     0m0.001s\\n```\\n\\n![container \u7f51\u7edc\u5ef6\u8fdf\u573a\u666f](https://tva4.sinaimg.cn/large/ad5fbf65gy1ghh7s2brmxg20si05w16r.gif)\\n\\n\u53ef\u4ee5\u770b\u5230\u7ed3\u679c\u7b26\u5408\u9884\u671f\u3002\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f delay_container_network_by_id.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade delay-container-network-by-id`\\n\\n#### container \u7f51\u7edc\u4e22\u5305\u573a\u666f\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u5bf9 chaosblade \u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u5bf9 `redis-master-68857cd57c-hknb6` Pod \u4e2d container id \u662f `02655dfdd9f0f712a10d63fdc6721f4dcee0a390e37717fff068bf3f85abf85e` \u7684\u5bb9\u5668\u6ce8\u5165\u4e22\u5305\u7387 100% \u7684\u6545\u969c\uff0c\u53ea\u9488\u5bf9 IP \u4e3a `10.42.0.26` \u7684 pod \u751f\u6548\uff0c\u4e5f\u5c31\u662f\u9664 `10.42.0.26` \u4ee5\u5916\u7684 pod \u90fd\u80fd\u6b63\u5e38\u8bbf\u95ee `redis-master-68857cd57c-hknb6`\u3002\\n\\n**\u5b9e\u9a8c\u53c2\u6570**\\n\\n| \u53c2\u6570 | \u7c7b\u578b | \u8bf4\u660e |\\n| --- | --- | --- |\\n| `destination-ip` | string | \u76ee\u6807 IP. \u652f\u6301\u901a\u8fc7\u5b50\u7f51\u63a9\u7801\u6765\u6307\u5b9a\u4e00\u4e2a\u7f51\u6bb5\u7684IP\u5730\u5740, \u4f8b\u5982 192.168.1.0/24. \u5219 192.168.1.0~192.168.1.255 \u90fd\u751f\u6548\u3002\u4f60\u4e5f\u53ef\u4ee5\u6307\u5b9a\u56fa\u5b9a\u7684 IP\uff0c\u5982 192.168.1.1 \u6216\u8005 192.168.1.1/32\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u90fd\u53f7\u5206\u9694\u591a\u4e2a\u53c2\u6570\uff0c\u4f8b\u5982 192.168.1.1,192.168.2.1\u3002 |\\n| `exclude-port` | string | \u6392\u9664\u6389\u7684\u7aef\u53e3\uff0c\u9ed8\u8ba4\u4f1a\u5ffd\u7565\u6389\u901a\u4fe1\u7684\u5bf9\u7aef\u7aef\u53e3\uff0c\u76ee\u7684\u662f\u4fdd\u7559\u901a\u4fe1\u53ef\u7528\u3002\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\uff0c\u4f7f\u7528\u9017\u53f7\u5206\u9694\u6216\u8005\u8fde\u63a5\u7b26\u8868\u793a\u8303\u56f4\uff0c\u4f8b\u5982 22,8000 \u6216\u8005 8000-8010\u3002 \u8fd9\u4e2a\u53c2\u6570\u4e0d\u80fd\u4e0e --local-port \u6216\u8005 --remote-port \u53c2\u6570\u4e00\u8d77\u4f7f\u7528\u3002 |\\n| `exclude-ip` | string | \u6392\u9664\u53d7\u5f71\u54cd\u7684 IP\uff0c\u652f\u6301\u901a\u8fc7\u5b50\u7f51\u63a9\u7801\u6765\u6307\u5b9a\u4e00\u4e2a\u7f51\u6bb5\u7684IP\u5730\u5740, \u4f8b\u5982 192.168.1.0/24. \u5219 192.168.1.0~192.168.1.255 \u90fd\u751f\u6548\u3002\u4f60\u4e5f\u53ef\u4ee5\u6307\u5b9a\u56fa\u5b9a\u7684 IP\uff0c\u5982 192.168.1.1 \u6216\u8005 192.168.1.1/32\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u90fd\u53f7\u5206\u9694\u591a\u4e2a\u53c2\u6570\uff0c\u4f8b\u5982 192.168.1.1,192.168.2.1\u3002 |\\n| `interface` | string | \u7f51\u5361\u8bbe\u5907\uff0c\u4f8b\u5982 eth0 (\u5fc5\u8981\u53c2\u6570)\u3002 |\\n| `local-port` | string | \u672c\u5730\u7aef\u53e3\uff0c\u4e00\u822c\u662f\u672c\u673a\u66b4\u9732\u670d\u52a1\u7684\u7aef\u53e3\u3002\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\uff0c\u4f7f\u7528\u9017\u53f7\u5206\u9694\u6216\u8005\u8fde\u63a5\u7b26\u8868\u793a\u8303\u56f4\uff0c\u4f8b\u5982 80,8000-8080\u3002 |\\n| `percent` | string | \u4e22\u5305\u767e\u5206\u6bd4\uff0c\u53d6\u503c\u5728[0, 100]\u7684\u6b63\u6574\u6570 (\u5fc5\u8981\u53c2\u6570)\u3002 |\\n| `remote-port` | string | \u8fdc\u7a0b\u7aef\u53e3\uff0c\u4e00\u822c\u662f\u8981\u8bbf\u95ee\u7684\u5916\u90e8\u66b4\u9732\u670d\u52a1\u7684\u7aef\u53e3\u3002\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\uff0c\u4f7f\u7528\u9017\u53f7\u5206\u9694\u6216\u8005\u8fde\u63a5\u7b26\u8868\u793a\u8303\u56f4\uff0c\u4f8b\u5982 80,8000-8080\u3002 |\\n| `force` |  | \u5f3a\u5236\u8986\u76d6\u5df2\u6709\u7684 tc \u89c4\u5219\uff0c\u8bf7\u52a1\u5fc5\u5728\u660e\u786e\u4e4b\u524d\u7684\u89c4\u5219\u53ef\u8986\u76d6\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u3002 |\\n| `ignore-peer-port` |  | \u9488\u5bf9\u6dfb\u52a0 --exclude-port \u53c2\u6570\uff0c\u62a5 ss \u547d\u4ee4\u627e\u4e0d\u5230\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u5ffd\u7565\u6392\u9664\u7aef\u53e3\u3002 |\\n| `timeout` | string | \u8bbe\u5b9a\u8fd0\u884c\u65f6\u957f\uff0c\u5355\u4f4d\u662f\u79d2\uff0c\u901a\u7528\u53c2\u6570\u3002 |\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n`loss_container_network_by_id.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: loss-container-network-by-id\\nspec:\\n  experiments:\\n  - scope: container\\n    target: network\\n    action: loss\\n    desc: \\"loss container network by container id\\"\\n    matchers:\\n    - name: container-ids\\n      value:\\n      - \\"02655dfdd9f0f712a10d63fdc6721f4dcee0a390e37717fff068bf3f85abf85e\\"\\n    - name: names\\n      value:\\n      - \\"redis-master-68857cd57c-hknb6\\"\\n    - name: namespace\\n      value:\\n      - \\"chaosblade\\"\\n    - name: interface\\n      value: [\\"eth0\\"]\\n    - name: percent\\n      value: [\\"100\\"]\\n    - name: timeout\\n      value: [\\"60\\"]\\n    - name: destination-ip\\n      value: [\\"10.42.0.26\\"]\\n```\\n\\n\u83b7\u53d6 pod \u540d\u79f0\u548c container id \u5185\u5bb9\u540c\u4e0a\u3002\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f loss_container_network_by_id.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade loss-container-network-by-id -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u89c2\u6d4b\u7ed3\u679c**\\n\\n```bash\\n# \u83b7\u53d6\u5b9e\u9a8c pod ip\\n$ kubectl get pod -l app=redis,role=master -o jsonpath={.items..status.podIP}\\n10.42.0.19\\n# \u8fdb\u5165\u89c2\u6d4b pod\uff0cIP\u4e3a\uff1a10.42.0.26\uff08\u88ab\u8bbe\u7f6e\u4e22\u5305\u7387 100%\uff09\\n$ kubectl exec -it redis-slave-55d8c8ffbd-jd8sm bash\\n# Ping \u5b9e\u9a8cPod ip\\n$ ping 10.42.0.19\\nPING 10.42.0.19 (10.42.0.19) 56(84) bytes of data.\\n# \u65e0\u54cd\u5e94\\n\\n# \u8fdb\u5165\u89c2\u6d4b pod\uff0c\u8be5 pod \u672a\u88ab\u6307\u5b9a\u4e22\u5305\\n$ kubectl exec -it redis-slave-55d8c8ffbd-22tsc bash\\n# Ping \u5b9e\u9a8cPod ip\\n$ ping 10.42.0.19\\nPING 10.42.0.19 (10.42.0.19) 56(84) bytes of data.\\n64 bytes from 10.42.0.19: icmp_seq=1 ttl=64 time=0.065 ms\\n64 bytes from 10.42.0.19: icmp_seq=2 ttl=64 time=0.051 ms\\n64 bytes from 10.42.0.19: icmp_seq=3 ttl=64 time=0.078 ms\\n...\\n# \u54cd\u5e94\u6b63\u5e38\\n```\\n\\n![container \u7f51\u7edc\u4e22\u5305\u573a\u666f](https://tva3.sinaimg.cn/large/ad5fbf65gy1ghh7th88pmg20si06au0x.gif)\\n\\n\u8fd9\u91cc\u5728\u914d\u7f6e\u4e2d\u8fd8\u5c06 `timeout` \u8bbe\u7f6e\u4e3a 60 \u79d2\uff0c60 \u79d2\u540e 100% \u4e22\u5305\u7684\u60c5\u51b5\u5c06\u4f1a\u6d88\u5931\uff0c\u8fd9\u4e2a\u914d\u7f6e\u662f\u4e3a\u4e86\u9632\u6b62\u56e0\u4e22\u5305\u7387\u8bbe\u7f6e\u592a\u9ad8\uff0c\u9020\u6210\u673a\u5668\u65e0\u6cd5\u8fde\u63a5\u7684\u60c5\u51b5\u3002\u4e0e\u5176\u6709\u76f8\u4f3c\u529f\u80fd\u7684\u8fd8\u6709 `exclude-port`\uff0c\u8be5\u914d\u7f6e\u7528\u6765\u6307\u5b9a\u6392\u9664\u6389\u7684\u4e22\u5305\u7aef\u53e3\u3002\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f loss_container_network_by_id.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade loss-container-network-by-id`\\n\\n#### container \u57df\u540d\u8bbf\u95ee\u5f02\u5e38\u573a\u666f\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u672c\u5b9e\u9a8c\u901a\u8fc7\u4fee\u6539\u672c\u5730\u7684 hosts\uff0c\u7be1\u6539\u57df\u540d\u5730\u5740\u6620\u5c04\uff0c\u6a21\u62df container \u5185\u57df\u540d\u8bbf\u95ee\u5f02\u5e38\u573a\u666f\u3002\\n\\n**\u5b9e\u9a8c\u53c2\u6570**\\n\\n| \u53c2\u6570 | \u7c7b\u578b | \u8bf4\u660e |\\n| --- | --- | --- |\\n| `domain` | string | \u57df\u540d (\u5fc5\u8981\u53c2\u6570) |\\n| `ip` | string | \u6620\u5c04\u7684 ip (\u5fc5\u8981\u53c2\u6570) |\\n| `timeout` | string | \u8bbe\u5b9a\u8fd0\u884c\u65f6\u957f\uff0c\u5355\u4f4d\u662f\u79d2\uff0c\u901a\u7528\u53c2\u6570\u3002 |\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n`tamper_container_dns_by_id.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: tamper-container-dns-by-id\\nspec:\\n  experiments:\\n  - scope: container\\n    target: network\\n    action: dns\\n    desc: \\"tamper container dns by id\\"\\n    matchers:\\n    - name: container-ids\\n      value:\\n      - \\"02655dfdd9f0f712a10d63fdc6721f4dcee0a390e37717fff068bf3f85abf85e\\"\\n    - name: domain\\n      value: [\\"www.baidu.com\\"]\\n    - name: ip\\n      value: [\\"10.0.0.1\\"]\\n      # pod names\\n    - name: names\\n      value: [\\"redis-master-68857cd57c-hknb6\\"]\\n      # or use pod labels\\n    - name: namespace\\n      value: [\\"chaosblade\\"]\\n```\\n\\n\u83b7\u53d6 pod \u540d\u79f0\u548c container id \u5185\u5bb9\u540c\u4e0a\u3002\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f tamper_container_dns_by_id.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade tamper-container-dns-by-id -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001.\\n\\n**\u89c2\u6d4b\u7ed3\u679c**\\n\\n```bash\\n# \u8fdb\u5165\u5b9e\u9a8c pod\\n$ kubectl exec -it redis-master-68857cd57c-hknb6 bash\\n# Ping www.baidu.com\\n$ ping www.baidu.com\\n# \u65e0\u54cd\u5e94\\n```\\n\\n![container \u57df\u540d\u8bbf\u95ee\u5f02\u5e38\u573a\u666f](https://tva2.sinaimg.cn/large/ad5fbf65gy1ghh7wcg01ng20si06ah3v.gif)\\n\\n\u53ef\u4ee5\u770b\u5230 Pod \u7684 `/etc/hosts` \u6587\u4ef6\u88ab\u4fee\u6539\uff0c\u6a21\u62df\u4e86 dns \u89e3\u6790\u5f02\u5e38\u7684\u573a\u666f\u3002\\n\\n### container \u5185\u8fdb\u7a0b\u573a\u666f\\n\\n#### \u6740 container \u5185\u6307\u5b9a\u8fdb\u7a0b\\n\\n\u6b64\u5b9e\u9a8c\u4f1a\u5220\u9664\u6307\u5b9a\u5bb9\u5668\u4e2d\u7684 `redis-server` \u8fdb\u7a0b\u3002\\n\\n**\u53c2\u6570**\\n\\n| \u53c2\u6570 | \u7c7b\u578b | \u8bf4\u660e |\\n| --- | --- | --- |\\n| `process` | string | \u8fdb\u7a0b\u5173\u952e\u8bcd\uff0c\u4f1a\u5728\u6574\u4e2a\u547d\u4ee4\u884c\u4e2d\u67e5\u627e |\\n| `process-cmd` | string | \u8fdb\u7a0b\u547d\u4ee4\uff0c\u53ea\u4f1a\u5728\u547d\u4ee4\u4e2d\u67e5\u627e |\\n| `count` | string | \u9650\u5236\u6740\u6389\u8fdb\u7a0b\u7684\u6570\u91cf\uff0c0 \u8868\u793a\u65e0\u9650\u5236 |\\n| `signal` | string | \u6307\u5b9a\u6740\u8fdb\u7a0b\u7684\u4fe1\u53f7\u91cf\uff0c\u9ed8\u8ba4\u662f 9\uff0c\u4f8b\u5982 --signal 15 |\\n| `timeout` | string | \u8bbe\u5b9a\u8fd0\u884c\u65f6\u957f\uff0c\u5355\u4f4d\u662f\u79d2\uff0c\u901a\u7528\u53c2\u6570|\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n`kill_container_process_by_id.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: kill-container-process-by-id\\nspec:\\n  experiments:\\n  - scope: container\\n    target: process\\n    action: kill\\n    desc: \\"kill container process by id\\"\\n    matchers:\\n    - name: container-ids\\n      value:\\n      - \\"94bc61ac84fb505f3f89b3ce5e4cc804ea8501ed091940b17b0f492835dc57d1\\"\\n    - name: process\\n      value: [\\"redis-server\\"]\\n    - name: names\\n      value: [\\"redis-slave-55d8c8ffbd-4pz8m\\"]\\n    - name: namespace\\n      value: [\\"chaosblade\\"]\\n```\\n\\n\u9009\u62e9\u4e00\u4e2a pod\uff0c\u83b7\u53d6\u5bb9\u5668 ID \uff0c\u4fee\u6539 `kill_container_process_by_id.yaml` \u4e2d\u7684 `container-ids` \u503c\u3002\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f kill_container_process_by_id.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade kill-container-process-by-id -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u89c2\u6d4b\u7ed3\u679c**\\n\\n```bash\\n# \u5f00\u59cb\u5b9e\u9a8c\u524d\u67e5\u770b\u5bb9\u5668 id\\n$ kubectl get pod redis-slave-55d8c8ffbd-4pz8m -o custom-columns=POD_NAME:.metadata.name,CONTAINER:.status.containerStatuses[0].name,ID:.status.containerStatuses[0].containerID\\nPOD_NAME                        CONTAINER      ID\\nredis-slave-55d8c8ffbd-4pz8m   redis-master   docker://bfc9ca01fac33f60d300485f96549644b634f274351df1d4897526451f49e3fb\\n# \u5b9e\u9a8c\u540e\u67e5\u770b\u5bb9\u5668 id\\n$ kubectl get pod redis-slave-55d8c8ffbd-4pz8m -o custom-columns=POD_NAME:.metadata.name,CONTAINER:.status.containerStatuses[0].name,ID:.status.containerStatuses[0].containerID\\nPOD_NAME                       CONTAINER     ID\\nredis-slave-55d8c8ffbd-4pz8m   redis-slave   docker://94bc61ac84fb505f3f89b3ce5e4cc804ea8501ed091940b17b0f492835dc57d1\\n```\\n\\n![\u6740 container \u5185\u6307\u5b9a\u8fdb\u7a0b](https://tva4.sinaimg.cn/large/ad5fbf65gy1ghh7y7r2nmg20r0068wxo.gif)\\n\\n\u5bb9\u5668 id \u53d8\u5316\uff0c\u4e3b\u8fdb\u7a0b\u88ab\u6740\u6389\u540e\u5bb9\u5668\u8fdb\u884c\u4e86\u91cd\u542f\uff0c\u7b26\u5408\u5b9e\u9a8c\u903e\u671f\u3002\\n\\n`redis-server` \u7684\u8fdb\u7a0b\u53f7\u53d1\u751f\u6539\u53d8\uff0c\u8bf4\u660e\u88ab\u6740\u6389\u540e\uff0c\u53c8\u88ab\u91cd\u65b0\u62c9\u8d77\u3002\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f kill_container_process_by_id.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade kill-container-process-by-id`\\n\\n#### \u6302\u8d77 container \u5185\u6307\u5b9a\u8fdb\u7a0b\\n\\n\u6b64\u5b9e\u9a8c\u4f1a\u6302\u8d77\u6307\u5b9a\u5bb9\u5668\u4e2d\u7684 `redis-server` \u8fdb\u7a0b\u3002\\n\\n**\u53c2\u6570**\\n\\n| \u53c2\u6570 | \u7c7b\u578b | \u8bf4\u660e |\\n| --- | --- | --- |\\n| `process` | string | \u8fdb\u7a0b\u5173\u952e\u8bcd\uff0c\u4f1a\u5728\u6574\u4e2a\u547d\u4ee4\u884c\u4e2d\u67e5\u627e |\\n| `process-cmd` | string | \u8fdb\u7a0b\u547d\u4ee4\uff0c\u53ea\u4f1a\u5728\u547d\u4ee4\u4e2d\u67e5\u627e |\\n| `timeout` | string | \u8bbe\u5b9a\u8fd0\u884c\u65f6\u957f\uff0c\u5355\u4f4d\u662f\u79d2\uff0c\u901a\u7528\u53c2\u6570|\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n`stop_container_process_by_names.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: stop-container-process-by-id\\nspec:\\n  experiments:\\n  - scope: container\\n    target: process\\n    action: stop\\n    desc: \\"kill container process by id\\"\\n    matchers:\\n    - name: container-ids\\n      value:\\n      - \\"bfc9ca01fac33f60d300485f96549644b634f274351df1d4897526451f49e3fb\\"\\n    - name: process\\n      value: [\\"redis-server\\"]\\n    - name: names\\n      value: [\\"redis-slave-55d8c8ffbd-4pz8m\\"]\\n    - name: namespace\\n      value: [\\"chaosblade\\"]\\n```\\n\\n\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\uff0c\u4fee\u6539 `stop_container_process_by_names.yaml` \u4e2d\u7684 `names` \u503c\u3002\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f stop_container_process_by_names.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade stop-container-process-by-names -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u89c2\u6d4b\u7ed3\u679c**\\n\\n```bash\\n# \u8fdb\u5165\u5b9e\u9a8c pod\\n$ kubectl exec -it redis-slave-55d8c8ffbd-4pz8m bash\\n# \u67e5\u770b redis-server \u8fdb\u7a0b\u53f7\\n$ ps aux| grep redis-server\\nroot      5632  0.0  0.0  41520  4168 ?        Tl   06:28   0:06 redis-server *:6379\\n```\\n\\n\u53ef\u4ee5\u770b\u5230 `redis-server` \u6b64\u523b\u8fdb\u7a0b\u5904\u4e8e\u6682\u505c\u72b6\u6001\u4e86\uff08T\uff09\u3002\\n\\n![\u6302\u8d77 container \u5185\u6307\u5b9a\u8fdb\u7a0b](https://tva3.sinaimg.cn/large/ad5fbf65gy1ghh8090cr1g20t406y1kx.gif)\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f stop_container_process_by_names.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade stop-container-process-by-names`\\n\\n## \u7ed3\u8bed\\n\\n\u4ed4\u7ec6\u770b\u8fc7\u524d\u9762\u51e0\u7bc7\u6587\u7ae0\u7684\u540c\u5b66\u83b7\u53d6\u4f1a\u53d1\u73b0\uff0c\u4e0d\u540c\u573a\u666f\u7684\u6df7\u6c8c\u5b9e\u9a8c\u4e2d\u7684\u53c2\u6570\u4e0e\u64cd\u4f5c\u65b9\u5f0f\u6709\u4e9b\u7c7b\u4f3c\u3002\u5176\u5b9e\u5bf9\u4e8e\u8fd9\u4e9b\u5728\u4e0d\u540c\u573a\u666f\uff0c\u6bd4\u5982 Pod\u3001Node \u548c Container \u4e2d\u8fdb\u884c\u6df7\u6c8c\u5b9e\u9a8c\u7684\u5b9e\u73b0\u662f\u4e00\u81f4\u7684\uff0c\u90fd\u662f\u57fa\u4e8e `blade` \u8fd9\u4e2a CLI \u5de5\u5177\uff0c\u53ea\u5bf9\u5bf9\u5176\u5728\u4e0d\u540c\u573a\u666f\u8fdb\u884c\u4e86\u4e0d\u540c\u7684\u5c01\u88c5\uff0c\u8fd9\u5c31\u6d89\u53ca\u5230\u4e86\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\u89c4\u8303\uff0c\u4e0b\u7bc7\u6587\u7ae0\u6211\u4eec\u5c31\u6765\u8c08\u8c08**\u6df7\u6c8c\u5de5\u7a0b\u6a21\u578b**\u548c**\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\u89c4\u8303**\uff0c\u770b\u770b\u6df7\u6c8c\u5de5\u7a0b\u7684\u5b9e\u73b0\u5e94\u8be5\u9075\u5faa\u600e\u4e48\u6837\u7684\u6a21\u578b\u548c\u89c4\u8303\u3002"},{"id":"/2020/07/22/chaosblade-start-4","metadata":{"permalink":"/en/blog/2020/07/22/chaosblade-start-4","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2020-07-22-chaosblade-start-4.md","source":"@site/blog/2020-07-22-chaosblade-start-4.md","title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u56db\uff09","description":"\u524d\u8a00","date":"2020-07-22T00:00:00.000Z","formattedDate":"July 22, 2020","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":10.685,"hasTruncateMarker":true,"authors":[{"name":"\u90ed\u65ed\u4e1c\uff08@sunny0826\uff09","title":"Maintainer of ChaosBlade","url":"https://github.com/sunny0826","imageURL":"https://avatars.githubusercontent.com/u/24563928?v=4","key":"guoxudong"}],"frontMatter":{"authors":"guoxudong","title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u56db\uff09","tags":["chaosblade"],"hide_table_of_contents":false},"prevItem":{"title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e94\uff09","permalink":"/en/blog/2020/08/06/chaosblade-start-5"},"nextItem":{"title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e09\uff09","permalink":"/en/blog/2020/06/15/chaosblade-start-3"}},"content":"## \u524d\u8a00\\n\\n\u5728\u4e0a\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528 **ChaosBlade Operator** \u5bf9 pod \u8d44\u6e90\u8fdb\u884c\u6df7\u6c8c\u5b9e\u9a8c\u3002\u4ece\u672c\u7ae0\u5c06\u7ee7\u7eed\u5bf9 Kubernetes Node \u8d44\u6e90\u7684\u6df7\u6c8c\u5b9e\u9a8c\u8fdb\u884c\u8bb2\u89e3\uff0c\u540c\u65f6\u4e5f\u914d\u5957\u4e86 [katacode](https://katacoda.com/) \u4ea4\u4e92\u5f0f\u6559\u7a0b\uff0c\u8bfb\u8005\u53ef\u7528\u901a\u8fc7 katacode\uff0c\u5728\u6d4f\u89c8\u5668\u4e0a\u64cd\u4f5c\u771f\u5b9e\u7684 Kubernetes \u548c ChaosBlade\u3002\\n\\n[chaosblade.io](https://chaosblade.io/) \u5b98\u7f51\u5df2\u7ecf\u6b63\u5f0f\u4e0a\u7ebf\u3002\\n\x3c!--truncate--\x3e\\n\\n## \u5b9e\u9a8c\u5bf9\u8c61\uff1aNode\\n\\n\u5728 Kubernetes \u4e2d\uff0c\u8282\u70b9\uff08Node\uff09\u662f\u6267\u884c\u5de5\u4f5c\u7684\u673a\u5668\uff0c\u4ee5\u524d\u53eb\u505a minion\u3002\u6839\u636e\u4f60\u7684\u96c6\u7fa4\u73af\u5883\uff0c\u8282\u70b9\u53ef\u4ee5\u662f\u4e00\u4e2a\u865a\u62df\u673a\u6216\u8005\u7269\u7406\u673a\u5668\u3002\u6bcf\u4e2a\u8282\u70b9\u90fd\u5305\u542b\u7528\u4e8e\u8fd0\u884c pods \u7684\u5fc5\u8981\u670d\u52a1\uff0c\u5e76\u7531\u4e3b\u63a7\u7ec4\u4ef6\u7ba1\u7406\u3002\u8282\u70b9\u4e0a\u7684\u670d\u52a1\u5305\u62ec \u5bb9\u5668\u8fd0\u884c\u65f6\u3001kubelet \u548c kube-proxy\u3002\\n\\n## Node \u5b9e\u9a8c\u573a\u666f\\n\\n\u540c\u4e0a\u7bc7\u6587\u7ae0\uff0c\u672c\u7bc7\u9ed8\u8ba4\u5df2\u5b89\u88c5 [guestbook](https://github.com/cloudnativeapp/guestbook?spm=5176.2020520152.0.0.7c5f16ddH8myx6) \u5e94\u7528\u548c ChaosBlade Operator\u3002\\n\\n### \u8282\u70b9\u8d44\u6e90\u76f8\u5173\u573a\u666f\\n\\n#### \u8282\u70b9 CPU \u8d1f\u8f7d\u5b9e\u9a8c\u573a\u666f\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u6307\u5b9a\u4e00\u4e2a\u8282\u70b9\uff0c\u505a CPU \u8d1f\u8f7d 80% \u5b9e\u9a8c\u3002\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n`node_cpu_load.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: cpu-load\\nspec:\\n  experiments:\\n  - scope: node\\n    target: cpu\\n    action: fullload\\n    desc: \\"increase node cpu load by names\\"\\n    matchers:\\n    - name: names\\n      value:\\n      - \\"docker20\\"\\n    - name: cpu-percent\\n      value:\\n      - \\"80\\"\\n```\\n\\n\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\uff0c\u4fee\u6539 `node_cpu_load.yaml` \u4e2d\u7684 `names` \u503c\u3002\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f node_cpu_load.yaml\\n```\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade cpu-load -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u7ed3\u679c**\\n\\n\u8fdb\u5165\u8be5 Node \u8282\u70b9\uff0c\u53ef\u4ee5\u770b\u5230\u8be5\u8282\u70b9 CPU \u8fbe\u5230\u9884\u671f\u6548\u679c\uff1a\\n\\n![\u8282\u70b9 CPU \u8d1f\u8f7d\u5b9e\u9a8c](https://tvax4.sinaimg.cn/large/ad5fbf65ly1ggzw9xq77mg20qg06i4qp.gif)\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f node_cpu_load.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade cpu-load`\\n\\n### \u8282\u70b9\u7f51\u7edc\u76f8\u5173\u573a\u666f\\n\\n> \u5b9e\u9a8c\u524d\uff0c\u8bf7\u5148\u767b\u5f55 node \u8282\u70b9\uff0c\u4f7f\u7528 `ifconfig` \u547d\u4ee4\u67e5\u770b\u7f51\u5361\u4fe1\u606f\uff0c\u4e0d\u662f\u6240\u6709\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7f51\u5361\u540d\u79f0\u90fd\u662f `eth0`\u3002\\n\\n#### \u8282\u70b9\u7f51\u7edc\u5ef6\u8fdf\u573a\u666f\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u6307\u5b9a\u8282\u70b9\u7684\u672c\u5730 32436 \u7aef\u53e3\u6dfb\u52a0 3000 \u6beb\u79d2\u8bbf\u95ee\u5ef6\u8fdf\uff0c\u5ef6\u8fdf\u65f6\u95f4\u4e0a\u4e0b\u6d6e\u52a8 1000 \u6beb\u79d2\u3002\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\uff0c\u4fee\u6539 `delay_node_network_by_names.yaml` \u4e2d\u7684 `names` \u503c\u3002\\n\\n\u5bf9 docker20 \u8282\u70b9\u672c\u5730\u7aef\u53e3 32436 \u8bbf\u95ee\u4e22\u5305\u7387 100%\u3002\\n\\n`delay_node_network_by_names.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: delay-node-network-by-names\\nspec:\\n  experiments:\\n  - scope: node\\n    target: network\\n    action: delay\\n    desc: \\"delay node network loss\\"\\n    matchers:\\n    - name: names\\n      value: [\\"docker20\\"]\\n    - name: interface\\n      value: [\\"ens33\\"]\\n    - name: local-port\\n      value: [\\"32436\\"]\\n    - name: time\\n      value: [\\"3000\\"]\\n    - name: offset\\n      value: [\\"1000\\"]\\n```\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f delay_node_network_by_names.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade delay-node-network-by-names -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u7ed3\u679c**\\n\\n```bash\\n# \u4ece\u5b9e\u9a8c\u8282\u70b9\u8bbf\u95ee Guestbook\\n$ time echo \\"\\" | telnet 192.168.1.129 32436\\nTrying 192.168.1.129...\\nConnected to 192.168.1.129.\\nEscape character is \'^]\'.\\nConnection closed by foreign host.\\necho \\"\\"  0.00s user 0.00s system 35% cpu 0.003 total\\ntelnet 192.168.1.129 32436  0.01s user 0.00s system 0% cpu 3.248 total\\n```\\n\\n![\u8282\u70b9\u7f51\u7edc\u5ef6\u8fdf\u573a\u666f](https://tva4.sinaimg.cn/large/ad5fbf65ly1ggzwhc0n0yg20qg070dou.gif)\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f delay_node_network_by_names.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade delay-node-network-by-names`\\n\\n#### \u8282\u70b9\u7f51\u7edc\u4e22\u5305\u573a\u666f\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u6307\u5b9a\u8282\u70b9\u7684 `32436` \u7aef\u53e3\u6ce8\u5165\u4e22\u5305\u7387 100% \u7684\u6545\u969c\u3002\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\uff0c\u4fee\u6539 `loss_node_network_by_names.yaml` \u4e2d\u7684 `names` \u503c\u3002\\n\\n`loss_node_network_by_names.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: loss-node-network-by-names\\nspec:\\n  experiments:\\n  - scope: node\\n    target: network\\n    action: loss\\n    desc: \\"node network loss\\"\\n    matchers:\\n    - name: names\\n      value: [\\"docker20\\"]\\n    - name: percent\\n      value: [\\"100\\"]\\n    - name: interface\\n      value: [\\"ens33\\"]\\n    - name: local-port\\n      value: [\\"32436\\"]\\n```\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f loss_node_network_by_names.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u7ed3\u679c**\\n\\n\u6267\u884c `kubectl get blade loss-node-network-by-names -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u89c2\u6d4b\u7ed3\u679c**\\n\\n\u8be5\u7aef\u53e3\u4e3a `Guestbook` nodeport \u7684\u7aef\u53e3\uff0c\u8bbf\u95ee\u5b9e\u9a8c\u7aef\u53e3\u65e0\u54cd\u5e94\uff0c\u4f46\u662f\u8bbf\u95ee\u672a\u5f00\u542f\u5b9e\u9a8c\u7684\u7aef\u53e3\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\uff1a\\n\\n```bash\\n# \u83b7\u53d6\u8282\u70b9 IP\\n$ kubectl get node -o wide\\nNAME       STATUS   ROLES                      AGE     VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION       CONTAINER-RUNTIME\\ndocker20   Ready    worker                     3d16h   v1.17.6   192.168.1.129   <none>        Ubuntu 18.04.4 LTS   4.15.0-101-generic   docker://19.3.11\\nkk         Ready    controlplane,etcd,worker   4d16h   v1.17.6   192.168.4.210   <none>        Ubuntu 18.04.4 LTS   4.15.0-101-generic   docker://19.3.11\\n# \u4ece\u5b9e\u9a8c\u8282\u70b9\u8bbf\u95ee Guestbook - \u65e0\u6cd5\u8bbf\u95ee\\n$ telnet 192.168.1.129 32436\\nTrying 192.168.1.129...\\ntelnet: connect to address 192.168.1.129: Operation timed out\\ntelnet: Unable to connect to remote host\\n# \u4ece\u975e\u5b9e\u9a8c\u8282\u70b9\u8bbf\u95ee Guestbook - \u6b63\u5e38\u8bbf\u95ee\\n$ telnet 192.168.4.210 32436\\nTrying 192.168.4.210...\\nConnected to 192.168.4.210.\\nEscape character is \'^]\'.\\n```\\n\\n![\u8282\u70b9\u7f51\u7edc\u4e22\u5305\u573a\u666f](https://tva2.sinaimg.cn/large/ad5fbf65ly1ggzwjjyj67g20qg07c4az.gif)\\n\\n\u540c\u6837\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4ece\u6d4f\u89c8\u5668\u8bbf\u95ee\u5730\u5740\uff0c\u9a8c\u8bc1\u5b9e\u9a8c\u3002\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f loss_node_network_by_names.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade loss-node-network-by-names`\\n\\n#### \u8282\u70b9\u57df\u540d\u8bbf\u95ee\u5f02\u5e38\u573a\u666f\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u672c\u5b9e\u9a8c\u901a\u8fc7\u4fee\u6539 Node \u7684 hosts\uff0c\u7be1\u6539\u57df\u540d\u5730\u5740\u6620\u5c04\uff0c\u6a21\u62df Pod \u5185\u57df\u540d\u8bbf\u95ee\u5f02\u5e38\u573a\u666f\u3002\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\uff0c\u4fee\u6539 `dns_node_network_by_names.yaml` \u4e2d\u7684 `names` \u503c\u3002\\n\\n`dns_node_network_by_names.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: dns-node-network-by-names\\nspec:\\n  experiments:\\n  - scope: node\\n    target: network\\n    action: dns\\n    desc: \\"dns node network by names\\"\\n    matchers:\\n    - name: names\\n      value:\\n      - \\"docker20\\"\\n    - name: domain\\n      value: [\\"www.baidu.com\\"]\\n    - name: ip\\n      value: [\\"10.0.0.1\\"]\\n```\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f dns_node_network_by_names.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade dns-node-network-by-names -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u7ed3\u679c**\\n\\n```bash\\n# \u8fdb\u5165\u5b9e\u9a8c node\\n$ ssh kk@192.168.1.129\\n# Ping www.baidu.com\\n$ ping www.baidu.com\\n# \u65e0\u54cd\u5e94\\n```\\n\\n![\u8282\u70b9\u57df\u540d\u8bbf\u95ee\u5f02\u5e38\u573a\u666f](https://tvax4.sinaimg.cn/large/ad5fbf65ly1ggzwluapg5g20qg07011a.gif)\\n\\n\u53ef\u4ee5\u770b\u5230 Node \u7684 `/etc/hosts` \u6587\u4ef6\u88ab\u4fee\u6539\uff0c\u6a21\u62df\u4e86 dns \u89e3\u6790\u5f02\u5e38\u7684\u573a\u666f\u3002\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f dns_node_network_by_names.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade dns-node-network-by-names`\\n\\n### \u8282\u70b9\u78c1\u76d8\u76f8\u5173\u573a\u666f\\n\\nkubernetes \u8282\u70b9\u78c1\u76d8\u573a\u666f\u3002\\n\\n#### \u8282\u70b9\u78c1\u76d8\u586b\u5145\u573a\u666f\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u6307\u5b9a\u8282\u70b9\u78c1\u76d8\u5360\u7528 80%\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\uff0c\u4fee\u6539 `fill_node_disk_by_names.yaml` \u4e2d\u7684 `names` \u503c\u3002\\n\\n`fill_node_disk_by_names.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: fill-node-disk-by-names\\nspec:\\n  experiments:\\n  - scope: node\\n    target: disk\\n    action: fill\\n    desc: \\"node disk fill\\"\\n    matchers:\\n    - name: names\\n      value: [\\"docker20\\"]\\n    - name: percent\\n      value: [\\"80\\"]\\n```\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f fill_node_disk_by_names.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade fill-node-disk-by-names -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u7ed3\u679c**\\n\\n\u53ef\u4ee5\u770b\u5230\u78c1\u76d8\u5360\u7528 80%\u3002\\n\\n```bash\\n# \u8fdb\u5165\u5b9e\u9a8c node\\n$ ssh kk@192.168.1.129\\n# \u67e5\u770b\u78c1\u76d8\u4f7f\u7528\u7387\\n$ df -h\\nFilesystem      Size  Used Avail Use% Mounted on\\nudev            7.9G     0  7.9G   0% /dev\\ntmpfs           1.6G  2.2M  1.6G   1% /run\\n/dev/sda2        98G   73G   20G  79% /\\ntmpfs           7.9G     0  7.9G   0% /dev/shm\\ntmpfs           5.0M     0  5.0M   0% /run/lock\\ntmpfs           7.9G     0  7.9G   0% /sys/fs/cgroup\\n/dev/loop1       90M   90M     0 100% /snap/core/8268\\ntmpfs           1.6G     0  1.6G   0% /run/user/1000\\n/dev/loop0       98M   98M     0 100% /snap/core/9289\\n```\\n\\n![\u8282\u70b9\u78c1\u76d8\u586b\u5145\u573a\u666f](https://tva4.sinaimg.cn/large/ad5fbf65ly1ggzwq8gdtrg20t406k7fr.gif)\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f fill_node_disk_by_names.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade fill-node-disk-by-names`\\n\\n### \u8282\u70b9\u8fdb\u7a0b\u76f8\u5173\u573a\u666f\\n\\nkubernetes \u8282\u70b9\u8fdb\u7a0b\u76f8\u5173\u573a\u666f\u3002\\n\\n#### \u6740\u8282\u70b9\u4e0a\u6307\u5b9a\u8fdb\u7a0b\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u6b64\u5b9e\u9a8c\u4f1a\u5220\u9664\u6307\u5b9a\u8282\u70b9\u4e0a\u7684 `redis-server` \u8fdb\u7a0b\u3002\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\uff0c\u4fee\u6539 `kill_node_process_by_names.yaml` \u4e2d\u7684 `names` \u503c\u3002\\n\\n`kill_node_process_by_names.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: kill-node-process-by-names\\nspec:\\n  experiments:\\n  - scope: node\\n    target: process\\n    action: kill\\n    desc: \\"kill node process by names\\"\\n    matchers:\\n    - name: names\\n      value: [\\"docker20\\"]\\n    - name: process\\n      value: [\\"redis-server\\"]\\n```\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f kill_node_process_by_names.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade kill-node-process-by-names -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u7ed3\u679c**\\n\\n```bash\\n# \u8fdb\u5165\u5b9e\u9a8c node\\n$ ssh kk@192.168.1.129\\n# \u67e5\u770b redis-server \u8fdb\u7a0b\u53f7\\n$ ps -ef | grep redis-server\\nroot     31327 31326  0 06:15 ?        00:00:00 redis-server *:6379\\n# \u53ef\u4ee5\u770b\u5230\u8fdb\u7a0b\u53f7\u53d1\u751f\u4e86\u53d8\u5316\\n$ ps -ef | grep redis-server\\nroot      2873  2872  0 06:23 ?        00:00:00 redis-server *:6379\\n```\\n\\n`redis-server` \u7684\u8fdb\u7a0b\u53f7\u53d1\u751f\u6539\u53d8\uff0c\u8bf4\u660e\u88ab\u6740\u6389\u540e\uff0c\u53c8\u88ab\u91cd\u65b0\u62c9\u8d77\u3002\\n\\n![\u6740\u8282\u70b9\u4e0a\u6307\u5b9a\u8fdb\u7a0b](https://tva1.sinaimg.cn/large/ad5fbf65ly1ggzwsx3sbig20t407a4d6.gif)\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f kill_node_process_by_names.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade kill-node-process-by-names`\\n\\n#### \u6302\u8d77\u8282\u70b9\u4e0a\u6307\u5b9a\u8fdb\u7a0b\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u6b64\u5b9e\u9a8c\u4f1a\u6302\u8d77\u6307\u5b9a\u8282\u70b9\u4e0a\u7684 `redis-server` \u8fdb\u7a0b\u3002\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\uff0c\u4fee\u6539 `stop_node_process_by_names.yaml` \u4e2d\u7684 `names` \u503c\u3002\\n\\n`stop_node_process_by_names.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: stop-node-process-by-names\\nspec:\\n  experiments:\\n  - scope: node\\n    target: process\\n    action: stop\\n    desc: \\"kill node process by names\\"\\n    matchers:\\n    - name: names\\n      value: [\\"docker20\\"]\\n    - name: process\\n      value: [\\"redis-server\\"]\\n```\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f stop_node_process_by_names.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade stop-node-process-by-names -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u7ed3\u679c**\\n\\n```bash\\n# \u8fdb\u5165\u5b9e\u9a8c node\\n$ ssh kk@192.168.1.129\\n# \u67e5\u770b redis-server \u8fdb\u7a0b\u53f7\\n$ ps aux| grep redis-server\\nroot      5632  0.0  0.0  41520  4168 ?        Tl   06:28   0:06 redis-server *:6379\\n```\\n\\n\u53ef\u4ee5\u770b\u5230 `redis-server` \u6b64\u523b\u8fdb\u7a0b\u5904\u4e8e\u6682\u505c\u72b6\u6001\u4e86\uff08T\uff09\u3002\\n\\n![\u6302\u8d77\u8282\u70b9\u4e0a\u6307\u5b9a\u8fdb\u7a0b](https://tvax4.sinaimg.cn/large/ad5fbf65ly1ggzwuoz52eg20t407w7m0.gif)\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f stop_node_process_by_names.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade stop-node-process-by-names`\\n\\n## \u7ed3\u8bed\\n\\n\u672c\u7bc7\u6211\u4eec\u4f7f\u7528 ChaosBlade Operator \u5bf9 Kubernetes Node \u8d44\u6e90\u8fdb\u884c\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\uff0c\u53ef\u4ee5\u770b\u5230\u5bf9\u4e8e Node \u8282\u70b9\uff0cChaosBlade \u4f9d\u65e7\u6709\u7b80\u5355\u7684\u914d\u7f6e\u53ca\u64cd\u4f5c\u6765\u5b8c\u6210\u590d\u6742\u7684\u5b9e\u9a8c\uff0c\u53ef\u4ee5\u901a\u8fc7\u81ea\u7531\u7ec4\u5408\uff0c\u5b9e\u73b0\u5404\u79cd Node \u8282\u70b9\u7ea7\u522b\u7684\u590d\u6742\u6545\u969c\uff0c\u9a8c\u8bc1 Kubernetes \u96c6\u7fa4\u7684\u7a33\u5b9a\u6027\u53ca\u53ef\u7528\u6027\u3002\u540c\u65f6\u5f53\u771f\u6b63\u7684\u6545\u969c\u6765\u4e34\u65f6\uff0c\u7531\u4e8e\u65e9\u5df2\u6a21\u62df\u4e86\u5404\u79cd\u6545\u969c\u60c5\u51b5\uff0c\u53ef\u4ee5\u5feb\u901f\u5b9a\u4f4d\u6545\u969c\u6e90\uff0c\u505a\u5230\u5904\u53d8\u4e0d\u60ca\uff0c\u8f7b\u677e\u5904\u7406\u6545\u969c\u3002"},{"id":"/2020/06/15/chaosblade-start-3","metadata":{"permalink":"/en/blog/2020/06/15/chaosblade-start-3","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2020-06-15-chaosblade-start-3.md","source":"@site/blog/2020-06-15-chaosblade-start-3.md","title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e09\uff09","description":"\u524d\u8a00","date":"2020-06-15T00:00:00.000Z","formattedDate":"June 15, 2020","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":11.045,"hasTruncateMarker":true,"authors":[{"name":"\u90ed\u65ed\u4e1c\uff08@sunny0826\uff09","title":"Maintainer of ChaosBlade","url":"https://github.com/sunny0826","imageURL":"https://avatars.githubusercontent.com/u/24563928?v=4","key":"guoxudong"}],"frontMatter":{"authors":"guoxudong","title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e09\uff09","tags":["chaosblade"],"hide_table_of_contents":false},"prevItem":{"title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u56db\uff09","permalink":"/en/blog/2020/07/22/chaosblade-start-4"},"nextItem":{"title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e8c\uff09","permalink":"/en/blog/2020/06/09/chaosblade-start-2"}},"content":"## \u524d\u8a00\\n\\n\u5728\u4e0a\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u5982\u4f55\u5b89\u88c5 **ChaosBlade Operator**\uff0c\u5e76\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u4f7f\u7528\u3002\u4ece\u672c\u7ae0\u5f00\u59cb\uff0c\u6240\u6709\u7684\u5b9e\u8df5\u7ae0\u8282\uff0c\u90fd\u4f1a\u6709\u914d\u5957\u7684 [katacode](https://katacoda.com/) \u4ea4\u4e92\u5f0f\u6559\u7a0b\uff0c\u8bfb\u8005\u53ef\u7528\u901a\u8fc7 katacode\uff0c\u5728\u6d4f\u89c8\u5668\u4e0a\u64cd\u4f5c\u771f\u5b9e\u7684 Kubernetes \u548c ChaosBlade\u3002\\n\x3c!--truncate--\x3e\\n\\n## \u5b9e\u9a8c\u5bf9\u8c61\uff1aPod\\n\\nPod \u662f Kubernetes \u5e94\u7528\u7a0b\u5e8f\u7684\u57fa\u672c\u6267\u884c\u5355\u5143\uff0c\u5373\u5b83\u662f Kubernetes \u5bf9\u8c61\u6a21\u578b\u4e2d\u521b\u5efa\u6216\u90e8\u7f72\u7684\u6700\u5c0f\u548c\u6700\u7b80\u5355\u7684\u5355\u5143\u3002Pod \u8868\u793a\u5728 \u96c6\u7fa4 \u4e0a\u8fd0\u884c\u7684\u8fdb\u7a0b\u3002\\n\\nPod \u5c01\u88c5\u4e86\u5e94\u7528\u7a0b\u5e8f\u5bb9\u5668\uff08\u6216\u8005\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u5c01\u88c5\u591a\u4e2a\u5bb9\u5668\uff09\u3001\u5b58\u50a8\u8d44\u6e90\u3001\u552f\u4e00\u7f51\u7edc IP \u4ee5\u53ca\u63a7\u5236\u5bb9\u5668\u5e94\u8be5\u5982\u4f55\u8fd0\u884c\u7684\u9009\u9879\u3002 Pod \u8868\u793a\u90e8\u7f72\u5355\u5143\uff1aKubernetes \u4e2d\u5e94\u7528\u7a0b\u5e8f\u7684\u5355\u4e2a\u5b9e\u4f8b\uff0c\u5b83\u53ef\u80fd\u7531\u5355\u4e2a \u5bb9\u5668 \u6216\u5c11\u91cf\u7d27\u5bc6\u8026\u5408\u5e76\u5171\u4eab\u8d44\u6e90\u7684\u5bb9\u5668\u7ec4\u6210\u3002\\n\\n## Pod \u5b9e\u9a8c\u573a\u666f\\n\\nPod \u4f5c\u4e3a Kubernetes \u6700\u57fa\u672c\u7684\u6267\u884c\u5355\u5143\uff0c\u5bf9\u4e8e Kubernetes \u96c6\u7fa4\u6765\u8bf4\u5341\u5206\u91cd\u8981\u3002\u90a3\u4e48\u5bf9\u4e8e\u6df7\u6c8c\u5de5\u7a0b\uff0c\u4ece Pod \u5165\u624b\u5b9e\u8df5\u5c31\u518d\u5408\u9002\u4e0d\u8fc7\u4e86\u3002\\n\\n>\u672c\u7bc7\u9ed8\u8ba4\u5df2\u5b89\u88c5 [guestbook](https://github.com/cloudnativeapp/guestbook?spm=5176.2020520152.0.0.7c5f16ddH8myx6) \u5e94\u7528\u548c ChaosBlade Operator\u3002\\n\\n### \u5220\u9664 Pod \u573a\u666f\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u5220\u9664 `chaosblade` \u547d\u540d\u7a7a\u95f4\u4e0b\u6807\u7b7e\u662f `role=master` \u7684 pod\u3002\\n\\n**\u6267\u884c\u89c2\u6d4b**\\n\\n\u5f00\u59cb\u89c2\u5bdf\u9700\u8981\u5220\u9664\u7684 pod\uff1a\\n\\n```bash\\n$ kubectl get pod -l \\"role=master\\" -n chaosblade -w\\n```\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n`delete_pod_by_labels.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: delete-two-pod-by-labels\\nspec:\\n  experiments:\\n  - scope: pod\\n    target: pod\\n    action: delete\\n    desc: \\"delete pod by labels\\"\\n    matchers:\\n    - name: labels\\n      value:\\n      - \\"role=master\\"\\n    - name: namespace\\n      value:\\n      - \\"chaosblade\\"\\n    - name: evict-count\\n      value:\\n      - \\"2\\"\\n```\\n\\n\u65b0\u5efa\u7ec8\u7aef\uff0c\u5e76\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f delete_pod_by_labels.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl get blade delete-two-pod-by-labels -o json`\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u7ed3\u679c**\\n\\n\u901a\u8fc7\u4e0a\u9762\u7684\u89c2\u6d4b\u547d\u4ee4\uff0c\u53ef\u4ee5\u770b\u5230 pod \u88ab\u5220\u9664\u5e76\u91cd\u542f\uff0c\u7ed3\u679c\u7b26\u5408\u9884\u671f\u3002\\n\\n![](https://tva2.sinaimg.cn/large/ad5fbf65ly1gft22n0pnpg20pg06qhdt.gif)\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f delete_pod_by_labels.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade delete-two-pod-by-labels`\\n\\n### Pod \u7f51\u7edc\u5ef6\u8fdf\u573a\u666f\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u5728 chaosblade \u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u5bf9 `redis-master-68857cd57c-dzbs9` Pod \u7684\u672c\u5730 6379 \u7aef\u53e3\u6dfb\u52a0 3000 \u6beb\u79d2\u8bbf\u95ee\u5ef6\u8fdf\uff0c\u5ef6\u8fdf\u65f6\u95f4\u4e0a\u4e0b\u6d6e\u52a8 1000 \u6beb\u79d2\u3002\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n`delay_pod_network_by_names.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: delay-pod-network-by-names\\nspec:\\n  experiments:\\n  - scope: pod\\n    target: network\\n    action: delay\\n    desc: \\"delay pod network by names\\"\\n    matchers:\\n    - name: names\\n      value:\\n      - \\"redis-master-68857cd57c-dzbs9\\"\\n    - name: namespace\\n      value:\\n      - \\"chaosblade\\"\\n    - name: local-port\\n      value: [\\"6379\\"]\\n    - name: interface\\n      value: [\\"eth0\\"]\\n    - name: time\\n      value: [\\"3000\\"]\\n    - name: offset\\n      value: [\\"1000\\"]\\n```\\n\\n\u83b7\u53d6 Pod \u540d\u79f0\uff1a\\n\\n```bash\\n$ kubectl get pod -l app=redis,role=master -o jsonpath={.items..metadata.name}\\n```\\n\\n\u4fee\u6539 `delay_pod_network_by_names.yaml` \u4e2d\u7684 `name` \u5b57\u6bb5\u7684\u503c\u3002\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f delay_pod_network_by_names.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade delay-pod-network-by-names -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u89c2\u6d4b\u7ed3\u679c**\\n\\n```bash\\n# \u83b7\u53d6\u5b9e\u9a8c pod ip\\n$ kubectl get pod -l app=redis,role=master -o jsonpath={.items..status.podIP}\\n10.42.69.44\\n# \u8fdb\u5165\u89c2\u6d4b pod\\n$ kubectl exec -it redis-slave-6dd975d4c8-2zrkb bash\\n# \u5728 pod \u4e2d\u5b89\u88c5 telnet\\n$ apt-get update && apt-get install -y telnet\\n# \u6d4b\u8bd5\u65f6\u95f4\\n$ time echo \\"\\" | telnet 10.42.69.44 6379\\nTrying 10.42.69.44...\\nConnected to 10.42.69.44.\\nEscape character is \'^]\'.\\nConnection closed by foreign host.\\n\\nreal    0m3.790s\\nuser    0m0.007s\\nsys     0m0.001s\\n```\\n\\n\u53ef\u4ee5\u770b\u5230\u8bbf\u95ee\u5b9e\u9a8c pod 6379 \u7aef\u53e3\u7684\u5ef6\u8fdf\u4e3a 3s \u5de6\u53f3\uff0c\u7ed3\u679c\u7b26\u5408\u9884\u671f\u3002\\n\\n![delay-pod-network](https://tva4.sinaimg.cn/large/ad5fbf65ly1gft27x90skg20p606c1kx.gif)\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f delay_pod_network_by_names.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade delay-pod-network-by-names`\\n\\n### Pod \u7f51\u7edc\u4e22\u5305\u573a\u666f\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u5728 chaosblade \u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u5bf9 `redis-master-68857cd57c-dzbs9` Pod \u6ce8\u5165\u4e22\u5305\u7387 100% \u7684\u6545\u969c\uff0c\u53ea\u9488\u5bf9 IP \u4e3a 10.42.69.42 \u7684 pod \u751f\u6548\uff0c\u4e5f\u5c31\u662f\u9664 10.42.69.42 \u4ee5\u5916\u7684 pod \u90fd\u80fd\u6b63\u5e38\u8bbf\u95ee `redis-master-68857cd57c-dzbs9`\u3002\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n\u83b7\u53d6 pod \u540d\u79f0\u5185\u5bb9\u540c\u4e0a\u3002\\n\\n`loss_pod_network_by_names.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: loss-pod-network-by-names\\nspec:\\n  experiments:\\n  - scope: pod\\n    target: network\\n    action: loss\\n    desc: \\"loss pod network by names\\"\\n    matchers:\\n    - name: names\\n      value:\\n      - \\"redis-master-68857cd57c-dzbs9\\"\\n    - name: namespace\\n      value:\\n      - \\"chaosblade\\"\\n    - name: interface\\n      value: [\\"eth0\\"]\\n    - name: percent\\n      value: [\\"100\\"]\\n    - name: timeout\\n      value: [\\"60\\"]\\n    - name: destination-ip\\n      value: [\\"10.42.69.42\\"]\\n```\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f loss_pod_network_by_names.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade loss-pod-network-by-names -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u89c2\u6d4b\u7ed3\u679c**\\n\\n```bash\\n# \u83b7\u53d6\u5b9e\u9a8c pod ip\\n$ kubectl get pod -l app=redis,role=master -o jsonpath={.items..status.podIP}\\n10.42.69.44\\n# \u8fdb\u5165\u89c2\u6d4b pod\uff0cIP\u4e3a\uff1a10.42.69.42\uff08\u88ab\u8bbe\u7f6e\u4e22\u5305\u7387 100%\uff09\\n$ kubectl exec -it redis-slave-6dd975d4c8-lm8jz bash\\n# Ping \u5b9e\u9a8cPod ip\\n$ ping 10.42.69.44\\nPING 10.42.69.44 (10.42.69.44) 56(84) bytes of data.\\n# \u65e0\u54cd\u5e94\\n\\n# \u8fdb\u5165\u89c2\u6d4b pod\uff0c\u8be5 pod \u672a\u88ab\u6307\u5b9a\u4e22\u5305\\n$ kubectl exec -it redis-slave-6dd975d4c8-2zrkb bash\\n# Ping \u5b9e\u9a8cPod ip\\n$ ping 10.42.69.44\\nPING 10.42.69.44 (10.42.69.44) 56(84) bytes of data.\\n64 bytes from 10.42.69.44: icmp_seq=1 ttl=63 time=0.128 ms\\n64 bytes from 10.42.69.44: icmp_seq=2 ttl=63 time=0.128 ms\\n64 bytes from 10.42.69.44: icmp_seq=3 ttl=63 time=0.092 ms\\n...\\n# \u54cd\u5e94\u6b63\u5e38\\n```\\n\\n\u53ef\u4ee5\u770b\u5230\u89c2\u6d4b pod \u8bbf\u95ee\u5b9e\u9a8c pod \u4e22\u5305\u7387 100%\uff08\u65e0\u6cd5\u8bbf\u95ee\uff09\uff0c\u800c\u5176\u4ed6 pod \u4e0d\u53d7\u5f71\u54cd\uff0c\u7ed3\u679c\u7b26\u5408\u9884\u671f\u3002\\n\\n![loss-pod-network](https://tvax2.sinaimg.cn/large/ad5fbf65ly1gft2c288oqg20p607i7wi.gif)\\n\\n\u8fd9\u91cc\u5728\u914d\u7f6e\u4e2d\u5c06 `timeout` \u8bbe\u7f6e\u4e3a 60 \u79d2\uff0c60 \u79d2\u540e 100% \u4e22\u5305\u7684\u60c5\u51b5\u5c06\u4f1a\u6d88\u5931\uff0c\u8fd9\u4e2a\u914d\u7f6e\u662f\u4e3a\u4e86\u9632\u6b62\u56e0\u4e22\u5305\u7387\u8bbe\u7f6e\u592a\u9ad8\uff0c\u9020\u6210\u673a\u5668\u65e0\u6cd5\u8fde\u63a5\u7684\u60c5\u51b5\u3002\u4e0e\u5176\u6709\u76f8\u4f3c\u529f\u80fd\u7684\u8fd8\u6709 `exclude-port`\uff0c\u8be5\u914d\u7f6e\u6307\u5b9a\u4e00\u4e9b\u7aef\u53e3\u4e0d\u4f1a\u4e22\u5305\uff0c\u4ee5\u514d\u8be5 pod \u5931\u8054\u3002\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f loss_pod_network_by_names.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade loss-pod-network-by-names`)\\n\\n### Pod \u57df\u540d\u8bbf\u95ee\u5f02\u5e38\u573a\u666f\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1aPod \u5185\u8bbf\u95ee\u6307\u5b9a\u57df\u540d\u5f02\u5e38\u3002\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n\u83b7\u53d6 pod \u540d\u79f0\u5185\u5bb9\u540c\u4e0a\u3002\\n\\n`dns_pod_network_by_names.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: dns-pod-network-by-names\\nspec:\\n  experiments:\\n  - scope: pod\\n    target: network\\n    action: dns\\n    desc: \\"dns pod network by names\\"\\n    matchers:\\n    - name: names\\n      value:\\n      - \\"redis-slave-6dd975d4c8-lm8jz\\"\\n    - name: namespace\\n      value:\\n      - \\"chaosblade\\"\\n    - name: domain\\n      value: [\\"www.baidu.com\\"]\\n    - name: ip\\n      value: [\\"10.0.0.1\\"]\\n```\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f dns_pod_network_by_names.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade dns-pod-network-by-names -o json ` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u89c2\u6d4b\u7ed3\u679c**\\n\\n```bash\\n# \u8fdb\u5165\u5b9e\u9a8c pod\\n$ kubectl exec -it redis-slave-6dd975d4c8-lm8jz bash\\n# Ping www.baidu.com\\n$ ping www.baidu.com\\n# \u65e0\u54cd\u5e94\\n```\\n\\n\u53ef\u4ee5\u770b\u5230\u8bbf\u95ee\u6307\u5b9a\u57df\u540d `www.baidu.com` \u5f02\u5e38\uff0c\u7ed3\u679c\u7b26\u5408\u9884\u671f\u3002\\n\\n![dns-pod-network](https://tvax1.sinaimg.cn/large/ad5fbf65ly1gft2hti44bg20p607i4nj.gif)\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f dns_pod_network_by_names.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade dns-pod-network-by-names`\\n\\n### Pod \u6587\u4ef6\u7cfb\u7edf I/O \u6545\u969c\u573a\u666f\\n\\n**\u5b9e\u9a8c\u76ee\u6807**\uff1a\u7ed9 kubernetes \u7684 pod \u6ce8\u5165\u6587\u4ef6\u7cfb\u7edfI/O\u6545\u969c\u3002\\n\\n>\u6ce8\u610f\uff1a\u6b64\u573a\u666f\u9700\u8981\u6fc0\u6d3b `--webhook-enable` \u53c2\u6570\uff0c\u5982\u9700\u4f7f\u7528\u6b64\u529f\u80fd\uff0c\u8bf7\u5728 chaosblade-operator \u53c2\u6570\u4e2d\u6dfb\u52a0 `--webhook-enable`\uff0c\u6216\u8005\u5728\u5b89\u88c5\u65f6\u6307\u5b9a\uff1a\u4f8b\u5982 helm \u5b89\u88c5\u65f6\u6dfb\u52a0 `--set webhook.enable=true` \u6307\u5b9a\u3002\\n\\n**\u524d\u63d0\u6761\u4ef6**\\n\\n- \u96c6\u7fa4\u4e2d\u90e8\u7f72\u4e86 `chaosblade-admission-webhook`\\n- \u9700\u8981\u6ce8\u5165\u6545\u969c\u7684 `volume` \u8bbe\u7f6e `mountPropagation` \u4e3a `HostToContainer`\\n- pod\u4e0a\u9762\u6dfb\u52a0\u4e86\u5982\u4e0bannotations:\\n    ```yaml\\n    chaosblade/inject-volume: \\"data\\" //\u9700\u8981\u6ce8\u5165\u6545\u969c\u7684volume name\\n    chaosblade/inject-volume-subpath: \\"conf\\" //volume\u6302\u8f7d\u7684\u5b50\u76ee\u5f55\\n    ```\\n\\n**\u90e8\u7f72\u6d4b\u8bd5 pod**\\n\\nchaosblade webhook \u4f1a\u6839\u636e pod \u7684 annotation\uff0c\u6ce8\u5165 fuse \u7684 sidecar \u5bb9\u5668\uff1a\\n\\n1. `chaosblade/inject-volume` \u6307\u660e\u9700\u8981\u6ce8\u5165\u6545\u969c\u7684 volume name\uff0c\u6bd4\u5982\u4f8b\u5b50\u4e2d\u7684 `data`\u3002\\n2. `chaosblade/inject-volume-subpath` \u6307\u660e volume \u6302\u8f7d\u8def\u5f84\u7684\u5b50\u76ee\u5f55\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0cvolume \u7684\u6302\u8f7d\u8def\u5f84\u662f `/data`,\u5b50\u76ee\u5f55\u662f `conf`\uff0c\u5219\u5728 pod \u5185\uff0c\u6ce8\u5165I/O\u5f02\u5e38\u7684\u76ee\u5f55\u662f `/data/conf`\u3002\\n3. \u6307\u5b9a\u9700\u8981\u6ce8\u5165\u6545\u969c\u7684 volume \u9700\u8981\u6307\u5b9a `mountPropagation\uff1aHostToContainer`\uff0c\u8fd9\u4e2a\u5b57\u6bb5\u7684\u542b\u4e49\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863 [Volumes](https://kubernetes.io/docs/concepts/storage/volumes/#mount-propagation)\u3002\\n\\n```bash\\n# \u90e8\u7f72\u6d4b\u8bd5 pod\\n$ kubectl apply -f io-test-pod.yaml\\n# \u67e5\u770b sidecar \u662f\u5426\u6ce8\u5165\u6210\u529f\\n$ kubectl get pod test-7c9fc6fd88-7lx6b -n chaosblade\\nNAME                    READY   STATUS    RESTARTS   AGE\\ntest-7c9fc6fd88-7lx6b   2/2     Running   0          4m8s\\n```\\n\\n**\u5f00\u59cb\u5b9e\u9a8c**\\n\\n`pod_io.yaml` \u5185\u5bb9\uff1a\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: inject-pod-by-labels\\nspec:\\n  experiments:\\n  - scope: pod\\n    target: pod\\n    action: IO\\n    desc: \\"Pod IO Exception by labels\\"\\n    matchers:\\n    - name: labels\\n      value:\\n      - \\"app=test\\"\\n    - name: namespace\\n      value:\\n      - \\"chaosblade\\"\\n    - name: method\\n      value:\\n      - \\"read\\"\\n    - name: delay\\n      value:\\n      - \\"1000\\"\\n    - name: path\\n      value:\\n      - \\"\\"\\n    - name: percent\\n      value:\\n      - \\"60\\"\\n    - name: errno\\n      value:\\n      - \\"28\\"\\n```\\n\\n\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n```bash\\n$ kubectl apply -f pod_io.yaml\\n```\\n\\n**\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001**\\n\\n\u6267\u884c `kubectl get blade inject-pod-by-labels -o json ` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\u3002\\n\\n**\u89c2\u6d4b\u7ed3\u679c**\\n\\n```bash\\n# \u8fdb\u5165\u5b9e\u9a8c pod\\n$ kubectl exec -it test-7c9fc6fd88-7lx6b bash\\n# \u5728 pod \u5185\u8bfb\u53d6\u6307\u5b9a\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\uff0c\u5982\u679c\u6ca1\u6709\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2a\\n$ time cat /data/conf/test.yaml\\ncat: read error: No space left on device\\n\\nreal    0m3.007s\\nuser    0m0.002s\\nsys     0m0.002s\\n# \u56e0\u4e3a\u6709\u91cd\u8bd5\uff0c\u663e\u793a\u6709 3s \u7684\u5ef6\u8fdf\\n# \u56e0\u4e3a\u8bbe\u7f6e\u4e86 60% \u7684\u5f02\u5e38\uff0c\u6240\u6709\u8fd8\u662f\u6709\u6210\u529f\u7684\u60c5\u51b5\\n$ time cat /data/conf/test.yaml\\n123\\n\\nreal    0m0.004s\\nuser    0m0.002s\\nsys     0m0.000s\\n```\\n\\n\u6587\u4ef6\u8bfb\u53d6\u5f02\u5e38\uff0c\u7ed3\u679c\u7b26\u5408\u9884\u671f\u3002\\n\\n![io-pod-read](https://tvax4.sinaimg.cn/large/ad5fbf65ly1gft2pqli3ug20p607i7nk.gif)\\n\\n\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5bf9 read \u64cd\u4f5c\u6ce8\u5165\u4e24\u79cd\u5f02\u5e38\uff0c\u5f02\u5e38\u7387\u4e3a\u767e\u5206\u4e4b60:\\n\\n- \u5bf9 `read` \u64cd\u4f5c\u589e\u52a0 1s \u7684\u5ef6\u8fdf\u3002\\n- \u5bf9 `read` \u64cd\u4f5c\u8fd4\u56de\u9519\u8bef `28`\u3002\\n\\n\u8fd9\u91cc\u53ea\u662f\u505a\u4e86\u4e00\u79cd\u7c7b\u578b\u7684\u5b9e\u9a8c\uff0c\u66f4\u591a\u7684\u5b9e\u9a8c\u7c7b\u578b\u8be6\u89c1[\u5b98\u65b9\u6587\u6863](https://chaosblade-io.gitbook.io/chaosblade-help-zh-cn/blade-create-k8s/blade-create-k8s-pod-io)\u3002\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f pod_io.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade inject-pod-by-labels`\\n\\n\u5220\u9664\u6d4b\u8bd5 pod\uff1a`kubectl delete -f io-test-pod.yaml`\\n\\n## \u7ed3\u8bed\\n\\n\u672c\u7bc7\u6211\u4eec\u4f7f\u7528 ChaosBlade Operator \u5bf9 Kubernetes Pod \u8d44\u6e90\u8fdb\u884c\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\uff0c\u53ef\u4ee5\u770b\u5230 ChaosBlade \u7684\u64cd\u4f5c\u7b80\u5355\u6613\u61c2\u4e14\u529f\u80fd\u5f3a\u5927\uff0c\u901a\u8fc7\u6a21\u62df\u4e0d\u540c\u7684\u6545\u969c\uff0c\u53ef\u4ee5\u68c0\u9a8c\u6211\u4eec\u7cfb\u7edf\u76d1\u63a7\u62a5\u8b66\u7684\u65f6\u6548\u6027\uff0c\u4e5f\u53ef\u4ee5\u68c0\u9a8c\u6211\u4eec\u7cfb\u7edf\u5728\u9047\u5230\u6545\u969c\u65f6\u7684\u60c5\u51b5\uff0c\u6839\u636e\u8fd9\u4e9b\u60c5\u51b5\u5bf9\u7cfb\u7edf\u8fdb\u884c\u8c03\u6574\uff0c\u4ece\u800c\u5b8c\u5584\u7cfb\u7edf\u67b6\u6784\uff0c\u589e\u52a0\u53ef\u7528\u6027\u3002\\n\\n\u8fd9\u91cc\u53ea\u662f\u5bf9\u4e8e\u6bcf\u79cd\u573a\u666f\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u5b9e\u9a8c\uff0c\u800c\u6bcf\u4e2a\u573a\u666f\u4e0d\u6b62\u6709\u4e00\u79cd\u5b9e\u9a8c\u65b9\u5f0f\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u53c2\u6570\u8fdb\u884c\u4e0d\u540c\u7684\u5b9e\u9a8c\u3002"},{"id":"/2020/06/09/chaosblade-start-2","metadata":{"permalink":"/en/blog/2020/06/09/chaosblade-start-2","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2020-06-09-chaosblade-start-2.md","source":"@site/blog/2020-06-09-chaosblade-start-2.md","title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e8c\uff09","description":"\u524d\u8a00","date":"2020-06-09T00:00:00.000Z","formattedDate":"June 9, 2020","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":4.99,"hasTruncateMarker":true,"authors":[{"name":"\u90ed\u65ed\u4e1c\uff08@sunny0826\uff09","title":"Maintainer of ChaosBlade","url":"https://github.com/sunny0826","imageURL":"https://avatars.githubusercontent.com/u/24563928?v=4","key":"guoxudong"}],"frontMatter":{"authors":"guoxudong","title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e8c\uff09","tags":["chaosblade"],"hide_table_of_contents":false},"prevItem":{"title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e09\uff09","permalink":"/en/blog/2020/06/15/chaosblade-start-3"},"nextItem":{"title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e00\uff09","permalink":"/en/blog/2020/06/04/chaosblade-start-1"}},"content":"## \u524d\u8a00\\n\\n\u5728\u4e0a\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86**\u6df7\u6c8c\u5de5\u7a0b**\u4ee5\u53ca **ChaosBlade**\u3002\u4ece\u672c\u7bc7\u5f00\u59cb\uff0c\u4ece ChaosBlade \u7684\u5b89\u88c5\u90e8\u7f72\uff0c\u5230\u5b9e\u9a8c\u7684\u521b\u5efa\u9500\u6bc1\uff0c\u5728\u5b9e\u8df5\u7684\u89d2\u5ea6\uff0c\u4e00\u6b65\u6b65\u7684\u5b8c\u6210\u5404\u79cd\u6df7\u6c8c\u5b9e\u9a8c\uff0c\u6df1\u5165\u8ba4\u8bc6\u548c\u4f7f\u7528\u6df7\u6c8c\u5de5\u7a0b\u3002\\n\x3c!--truncate--\x3e\\n\\n## ChaosBlade-Operator\\n\\n[ChaosBlade-Operator](https://github.com/chaosblade-io/chaosblade-operator) \u662f ChaosBlade \u7684 Kubernetes \u5e73\u53f0\u5b9e\u9a8c\u573a\u666f\u5b9e\u73b0\u3002\u5c06\u6df7\u6c8c\u5b9e\u9a8c\u901a\u8fc7 Kubernetes \u6807\u51c6\u7684 CRD \u65b9\u5f0f\u5b9a\u4e49\uff0c\u7528\u6237\u53ef\u4ee5\u50cf\u5b9a\u4e49 Deployment \u6216 StatefulSet \u90a3\u6837\u5b9a\u4e49 ChaosBlade \u5b9e\u9a8c\uff0c\u53ea\u8981\u5bf9 `kubectl` \u548c Kubernetes \u5bf9\u8c61\u6709\u6240\u4e86\u89e3\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u7684\u521b\u5efa\u3001\u66f4\u65b0\u548c\u5220\u9664\u5b9e\u9a8c\u573a\u666f\uff1b\u540c\u65f6\u4e5f\u53ef\u4ee5\u901a\u8fc7 chaosblade cli \u5de5\u5177\u6765\u64cd\u4f5c\u5b9e\u9a8c\u573a\u666f\u3002\\n\\n### \u5b89\u88c5\\n\\nChaosBlade-Operator \u9700\u8981\u4f7f\u7528 Helm \u5b89\u88c5\uff0c\u8fdb\u5165 [release \u9875\u9762](https://github.com/chaosblade-io/chaosblade-operator/releases) \u4e0b\u8f7d\u5b89\u88c5\u5305\uff08ChaosBlade \u8fd8\u63d0\u4f9b\u4e86\u963f\u91cc\u4e91 OSS \u7684\u4e0b\u8f7d\u5730\u5740\uff0c\u63d0\u5347\u56fd\u5185\u4e0b\u8f7d\u901f\u5ea6\uff09\u3002\\n\\n\u4f7f\u7528 Helm 3 \u5b89\u88c5\uff1a\\n```bash\\n# \u4e0b\u8f7d\u5b89\u88c5\u5305\\n$ wget -qO chaosblade-operator-0.6.0.tgz https://chaosblade.oss-cn-hangzhou.aliyuncs.com/agent/github/0.6.0/chaosblade-operator-0.6.0-v3.tgz\\n# \u4e3a chaosblade \u521b\u5efa\u4e00\u4e2a namespace\\n$ kubectl create namespace chaosblade\\n# \u5b89\u88c5 ChaosBlade-Operator\\n$ helm install chaos chaosblade-operator-0.6.0.tgz --set webhook.enable=true --namespace=chaosblade\\n# \u67e5\u770b\u5b89\u88c5\u7ed3\u679c\\n$ kubectl get pod -n chaosblade | grep chaosblade\\nchaosblade-operator-6b6b484599-gdgq8   1/1     Running   0          4d23h\\nchaosblade-tool-7wtph                  1/1     Running   0          4d20h\\nchaosblade-tool-r4zdk                  1/1     Running   0          4d23h\\n```\\n\\nChaosBlade-Operator \u542f\u52a8\u540e\u5c06\u4f1a\u5728\u6bcf\u4e2a\u8282\u70b9\u90e8\u7f72\u4e00\u4e2a `chaosblade-tool` Pod \u548c\u4e00\u4e2a `chaosblade-operator` Pod\uff0c\u5982\u679c\u90fd\u8fd0\u884c\u6b63\u5e38\uff0c\u5219\u5b89\u88c5\u6210\u529f\u3002\u4e0a\u9762\u8bbe\u7f6e `--set webhook.enable=true` \u662f\u4e3a\u4e86 Pod \u6587\u4ef6\u7cfb\u7edf I/O \u6545\u969c\u5b9e\u9a8c\uff0c\u5982\u679c\u4e0d\u9700\u8981\u8fdb\u884c\u8be5\u5b9e\u9a8c\uff0c\u5219\u65e0\u9700\u6dfb\u52a0\u8be5\u8bbe\u7f6e\u3002\\n\\n## \u5feb\u901f\u5f00\u59cb\\n\\n\u4e0b\u9762\u5c31\u4ee5 Pod \u7f51\u7edc\u5ef6\u8fdf\u5b9e\u9a8c\u4e3a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u4f7f\u7528 ChaosBlade-Operator\u3002\\n\\n### \u5b9e\u9a8c\u51c6\u5907\\n\\n\u5b9e\u9a8c\u524d\u9700\u8981\u5148\u51c6\u5907\u5b9e\u9a8c\u5bf9\u8c61\uff0c\u8fd9\u91cc\u4f7f\u7528 [guestbook](https://github.com/cloudnativeapp/guestbook?spm=5176.2020520152.0.0.7c5f16ddH8myx6) \u5e94\u7528\u3002\\n\\n**\u5b89\u88c5**\\n\\n\u540c\u6837\u4f7f\u7528 Helm 3\\n\\n```bash\\n# add repo\\nhelm repo add apphub-incubator https://apphub.aliyuncs.com/incubator/\\n# \u5b89\u88c5\\nhelm install guestbook apphub-incubator/guestbook --set service.type=NodePort --namespace=chaosblade\\n```\\n\\n\u9ed8\u8ba4\u7684 Service \u7c7b\u578b\u4e3a `LoadBalancer`\uff0c\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u8bbf\u95ee\u8bbe\u7f6e\u4e3a\u4e86 `NodePort`\u3002\\n\\n### \u5f00\u59cb\u5b9e\u9a8c\\n\\n**\u5b9e\u9a8c\u76ee\u6807\uff1a**\u5bf9 chaosblade \u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u5bf9 `redis-master-68857cd57c-dzbs9` Pod \u7684\u672c\u5730 6379 \u7aef\u53e3\u6dfb\u52a0 3000 \u6beb\u79d2\u8bbf\u95ee\u5ef6\u8fdf\uff0c\u5ef6\u8fdf\u65f6\u95f4\u4e0a\u4e0b\u6d6e\u52a8 1000 \u6beb\u79d2\u3002\\n\\n**\u5b9e\u9a8c yaml \u914d\u7f6e**\\n\\n```yaml\\napiVersion: chaosblade.io/v1alpha1\\nkind: ChaosBlade\\nmetadata:\\n  name: delay-pod-network-by-names\\nspec:\\n  experiments:\\n  - scope: pod\\n    target: network\\n    action: delay\\n    desc: \\"delay pod network by names\\"\\n    matchers:\\n    - name: names\\n      value:\\n      - \\"redis-master-68857cd57c-dzbs9\\"\\n    - name: namespace\\n      value:\\n      - \\"chaosblade\\"\\n    - name: local-port\\n      value: [\\"6379\\"]\\n    - name: interface\\n      value: [\\"eth0\\"]\\n    - name: time\\n      value: [\\"3000\\"]\\n    - name: offset\\n      value: [\\"1000\\"]\\n```\\n\\n\u5c06\u5176\u4fdd\u5b58\u4e3a `delay_pod_network_by_names.yaml` \u5e76\u6267\u884c\u547d\u4ee4\uff0c\u5f00\u59cb\u5b9e\u9a8c\uff1a\\n\\n```bash\\n$ kubectl apply -f delay_pod_network_by_names.yaml\\n```\\n\\n### \u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\\n\\n\u6267\u884c `kubectl get blade delay-pod-network-by-names -o json` \u547d\u4ee4\uff0c\u67e5\u770b\u5b9e\u9a8c\u72b6\u6001\uff1a\\n\\n```json\\n{\\n    \\"apiVersion\\": \\"chaosblade.io/v1alpha1\\",\\n    \\"kind\\": \\"ChaosBlade\\",\\n    \\"metadata\\": {\\n        \\"annotations\\": {\\n            \\"kubectl.kubernetes.io/last-applied-configuration\\": \\"{\\\\\\"apiVersion\\\\\\":\\\\\\"chaosblade.io/v1alpha1\\\\\\",\\\\\\"kind\\\\\\":\\\\\\"ChaosBlade\\\\\\",\\\\\\"metadata\\\\\\":{\\\\\\"annotations\\\\\\":{},\\\\\\"name\\\\\\":\\\\\\"delay-pod-network-by-names\\\\\\"},\\\\\\"spec\\\\\\":{\\\\\\"experiments\\\\\\":[{\\\\\\"action\\\\\\":\\\\\\"delay\\\\\\",\\\\\\"desc\\\\\\":\\\\\\"delay pod network by names\\\\\\",\\\\\\"matchers\\\\\\":[{\\\\\\"name\\\\\\":\\\\\\"names\\\\\\",\\\\\\"value\\\\\\":[\\\\\\"redis-master-68857cd57c-dzbs9\\\\\\"]},{\\\\\\"name\\\\\\":\\\\\\"namespace\\\\\\",\\\\\\"value\\\\\\":[\\\\\\"chaosblade\\\\\\"]},{\\\\\\"name\\\\\\":\\\\\\"local-port\\\\\\",\\\\\\"value\\\\\\":[\\\\\\"6379\\\\\\"]},{\\\\\\"name\\\\\\":\\\\\\"interface\\\\\\",\\\\\\"value\\\\\\":[\\\\\\"eth0\\\\\\"]},{\\\\\\"name\\\\\\":\\\\\\"time\\\\\\",\\\\\\"value\\\\\\":[\\\\\\"3000\\\\\\"]},{\\\\\\"name\\\\\\":\\\\\\"offset\\\\\\",\\\\\\"value\\\\\\":[\\\\\\"1000\\\\\\"]}],\\\\\\"scope\\\\\\":\\\\\\"pod\\\\\\",\\\\\\"target\\\\\\":\\\\\\"network\\\\\\"}]}}\\\\n\\"\\n        },\\n        \\"creationTimestamp\\": \\"2020-06-02T05:57:50Z\\",\\n        \\"finalizers\\": [\\n            \\"finalizer.chaosblade.io\\"\\n        ],\\n        \\"generation\\": 1,\\n        \\"name\\": \\"delay-pod-network-by-names\\",\\n        \\"resourceVersion\\": \\"7710394\\",\\n        \\"selfLink\\": \\"/apis/chaosblade.io/v1alpha1/chaosblades/delay-pod-network-by-names\\",\\n        \\"uid\\": \\"1235ff55-8256-4caa-a371-e1abf6c9e7b7\\"\\n    },\\n    \\"spec\\": {\\n        \\"experiments\\": [\\n            {\\n                \\"action\\": \\"delay\\",\\n                \\"desc\\": \\"delay pod network by names\\",\\n                \\"matchers\\": [\\n                    {\\n                        \\"name\\": \\"names\\",\\n                        \\"value\\": [\\n                            \\"redis-master-68857cd57c-dzbs9\\"\\n                        ]\\n                    },\\n                    {\\n                        \\"name\\": \\"namespace\\",\\n                        \\"value\\": [\\n                            \\"chaosblade\\"\\n                        ]\\n                    },\\n                    {\\n                        \\"name\\": \\"local-port\\",\\n                        \\"value\\": [\\n                            \\"6379\\"\\n                        ]\\n                    },\\n                    {\\n                        \\"name\\": \\"interface\\",\\n                        \\"value\\": [\\n                            \\"eth0\\"\\n                        ]\\n                    },\\n                    {\\n                        \\"name\\": \\"time\\",\\n                        \\"value\\": [\\n                            \\"3000\\"\\n                        ]\\n                    },\\n                    {\\n                        \\"name\\": \\"offset\\",\\n                        \\"value\\": [\\n                            \\"1000\\"\\n                        ]\\n                    }\\n                ],\\n                \\"scope\\": \\"pod\\",\\n                \\"target\\": \\"network\\"\\n            }\\n        ]\\n    },\\n    \\"status\\": {\\n        \\"expStatuses\\": [\\n            {\\n                \\"action\\": \\"delay\\",\\n                \\"resStatuses\\": [\\n                    {\\n                        \\"id\\": \\"a86f8cf8b68ace98\\",\\n                        \\"kind\\": \\"pod\\",\\n                        \\"name\\": \\"redis-master\\",\\n                        \\"nodeName\\": \\"keking\\",\\n                        \\"state\\": \\"Success\\",\\n                        \\"success\\": true,\\n                        \\"uid\\": \\"619a19ceb213f9b6152159bd868e88de2ddbf9a8aac606dc274b34bec6510c60\\"\\n                    }\\n                ],\\n                \\"scope\\": \\"pod\\",\\n                \\"state\\": \\"Success\\",\\n                \\"success\\": true,\\n                \\"target\\": \\"network\\"\\n            }\\n        ],\\n        \\"phase\\": \\"Running\\"\\n    }\\n}\\n```\\n\\n\u53ef\u4ee5\u770b\u5230\u5b9e\u9a8c\u6210\u529f\u521b\u5efa\u4e86\u3002\\n\\n### \u89c2\u6d4b\u7ed3\u679c\\n\\n```bash\\n# \u83b7\u53d6\u5b9e\u9a8c pod ip\\n$ kubectl get pod -l app=redis,role=master -o jsonpath={.items..status.podIP}\\n10.42.69.44\\n# \u8fdb\u5165\u89c2\u6d4b pod\\n$ kubectl exec -it redis-slave-6dd975d4c8-2zrkb bash\\n# \u5728 pod \u4e2d\u5b89\u88c5 telnet\\n$ apt-get update && apt-get install -y telnet\\n# \u6d4b\u8bd5\u65f6\u95f4\\n$ time echo \\"\\" | telnet 10.42.69.44 6379\\nTrying 10.42.69.44...\\nConnected to 10.42.69.44.\\nEscape character is \'^]\'.\\nConnection closed by foreign host.\\n\\nreal    0m3.790s\\nuser    0m0.007s\\nsys     0m0.001s\\n```\\n\\n![](https://tva3.sinaimg.cn/large/ad5fbf65gy1gfm2deqtdwg20p606c1kx.gif)\\n\\n\u53ef\u4ee5\u770b\u5230\u7ed3\u679c\u7b26\u5408\u9884\u671f\u3002\\n\\n**\u505c\u6b62\u5b9e\u9a8c**\\n\\n\u6267\u884c\u547d\u4ee4\uff1a`kubectl delete -f delay_pod_network_by_names.yaml`\\n\\n\u6216\u8005\u76f4\u63a5\u5220\u9664 blade \u8d44\u6e90\uff1a`kubectl delete blade delay-pod-network-by-names`\\n\\n## \u7ed3\u8bed\\n\\n\u672c\u7bc7\u6211\u4eec\u8bb2\u89e3\u4e86\u5982\u4f55\u90e8\u7f72 ChaosBlade-Operator \u5e76\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u5b9e\u9a8c\uff0c\u53ef\u4ee5\u770b\u5230\u5728\u4e91\u539f\u751f\u573a\u666f\u4e0b\uff0cChaosBlade \u4f9d\u65e7\u6709\u7740\u7b80\u5355\u7684\u64cd\u4f5c\u65b9\u5f0f\uff0c\u591a\u79cd\u5b9e\u9a8c\u573a\u666f\uff0c\u5e76\u5bf9\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u8fdb\u884c\u4e86\u6807\u51c6\u5316\u5b9e\u73b0\u3002\u5f88\u53cb\u597d\u7684\u5c06\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u4e0e Kubernetes \u58f0\u660e\u5f0f\u8bbe\u8ba1\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u4f9d\u9760\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u4fbf\u6377\u5f00\u53d1\u573a\u666f\u7684\u540c\u65f6\uff0c\u53c8\u53ef\u4ee5\u5f88\u597d\u7684\u7ed3\u5408 Kubernetes \u8bbe\u8ba1\u7406\u5ff5\u3002"},{"id":"/2020/06/04/chaosblade-start-1","metadata":{"permalink":"/en/blog/2020/06/04/chaosblade-start-1","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2020-06-04-chaosblade-start-1.md","source":"@site/blog/2020-06-04-chaosblade-start-1.md","title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e00\uff09","description":"\u524d\u8a00","date":"2020-06-04T00:00:00.000Z","formattedDate":"June 4, 2020","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":6.715,"hasTruncateMarker":true,"authors":[{"name":"\u90ed\u65ed\u4e1c\uff08@sunny0826\uff09","title":"Maintainer of ChaosBlade","url":"https://github.com/sunny0826","imageURL":"https://avatars.githubusercontent.com/u/24563928?v=4","key":"guoxudong"}],"frontMatter":{"authors":"guoxudong","title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e00\uff09","tags":["chaosblade"],"hide_table_of_contents":false},"prevItem":{"title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e8c\uff09","permalink":"/en/blog/2020/06/09/chaosblade-start-2"},"nextItem":{"title":"ChaosBlade\uff1a\u4e91\u539f\u751f\u67b6\u6784\u4e0b\u7684\u6df7\u6c8c\u5de5\u7a0b\u63a2\u7d22\u548c\u5b9e\u8df5","permalink":"/en/blog/2019/10/17/chaosblade-cloud-native"}},"content":"## \u524d\u8a00\\n\\n\u968f\u7740\u5fae\u670d\u52a1\u7684\u76db\u884c\u4ee5\u53ca\u5bb9\u5668\u6280\u672f\u7684\u666e\u53ca\uff0c\u501f\u52a9 Kubernetes \u7684\u5bb9\u5668\u7f16\u6392\u80fd\u529b\uff0c\u90e8\u7f72\u4e00\u5957\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u96be\u5ea6\u4e5f\u8d8a\u6765\u8d8a\u4f4e\u3002\u4f46\u968f\u4e4b\u800c\u6765\u7684\u662f\u8d8a\u6765\u8d8a\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u4ee5\u53ca\u8d8a\u6765\u8d8a\u96be\u7684\u7cfb\u7edf\u53ef\u9760\u6027\u6d4b\u8bd5\uff0c\u6709\u65f6\u4ec5\u4ec5\u662f\u4e00\u4e2a\u63a5\u53e3\u7684\u6545\u969c\uff0c\u5c31\u53ef\u80fd\u5bfc\u81f4\u6574\u4e2a\u7cfb\u7edf\u7684\u96ea\u5d29\u3002\u5728\u96ea\u5d29\u4e2d\uff0c\u627e\u5230\u90a3\u4e2a\u6700\u521d\u6545\u969c\u7684\u63a5\u53e3\u4e5f\u5341\u5206\u56f0\u96be\uff0c\u56e0\u4e3a\u5230\u5904\u90fd\u5728\u62a5\u9519\u3002\\n\\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u9664\u4e86\u4e0d\u65ad\u51cf\u5c11\u670d\u52a1\u7684\u8026\u5408\uff0c\u5efa\u7acb\u5f3a\u5927\u7684\u76d1\u63a7\u7cfb\u7edf\u4ee5\u53ca\u8bbe\u7f6e\u7194\u65ad\u3001\u9650\u6d41\u7b49\u7b56\u7565\u7b49\u65b9\u5f0f\uff0c\u8fd9\u65f6**\u6df7\u6c8c\u5de5\u7a0b**\u5c31\u51fa\u73b0\u4e86\u3002\\n\x3c!--truncate--\x3e\\n\\n## \u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\\n\\n\u6839\u636e[\u6df7\u6c8c\u5de5\u7a0b\u539f\u5219\uff08PRINCIPLES OF CHAOS ENGINEERING\uff09](https://principlesofchaos.org)\uff1a**\u6df7\u6c8c\u5de5\u7a0b\u662f\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e0a\u8fdb\u884c\u5b9e\u9a8c\u7684\u5b66\u79d1, \u76ee\u7684\u662f\u5efa\u7acb\u5bf9\u7cfb\u7edf\u62b5\u5fa1\u751f\u4ea7\u73af\u5883\u4e2d\u5931\u63a7\u6761\u4ef6\u7684\u80fd\u529b\u4ee5\u53ca\u4fe1\u5fc3\u3002**\\n\\n\u5927\u89c4\u6a21\u5206\u5e03\u5f0f\u8f6f\u4ef6\u7cfb\u7edf\u7684\u53d1\u5c55\u6b63\u5728\u6539\u53d8\u8f6f\u4ef6\u5de5\u7a0b\u3002\u4f5c\u4e3a\u4e00\u4e2a\u884c\u4e1a\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u91c7\u7528\u4e86\u63d0\u9ad8\u5f00\u53d1\u7075\u6d3b\u6027\u548c\u90e8\u7f72\u901f\u5ea6\u7684\u5b9e\u8df5\u3002\u4f46\u4f34\u968f\u7740\u8fd9\u4e9b\u4f18\u70b9\uff0c\u4e00\u4e2a\u8feb\u5207\u95ee\u9898\u51fa\u73b0\u4e86\uff0c\u90a3\u5c31\u662f\uff1a\u6211\u4eec\u5bf9\u6295\u5165\u751f\u4ea7\u7684\u590d\u6742\u7cfb\u7edf\u6709\u591a\u5c11\u4fe1\u5fc3\uff1f\\n\\n\u5373\u4f7f\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u5355\u4e2a\u670d\u52a1\u90fd\u6b63\u5e38\u8fd0\u884c, \u4f46\u8fd9\u4e9b\u670d\u52a1\u4e4b\u95f4\u7684\u4ea4\u4e92\u4e5f\u4f1a\u5bfc\u81f4\u4e0d\u53ef\u9884\u77e5\u7684\u7ed3\u679c\u3002\u8fd9\u4e9b\u4e0d\u53ef\u9884\u77e5\u7684\u7ed3\u679c, \u7531\u5f71\u54cd\u751f\u4ea7\u73af\u5883\u7684\u7f55\u89c1\u4e14\u5177\u6709\u7834\u574f\u6027\u7684\u4e8b\u4ef6\u590d\u5408\u800c\u6210\uff0c\u4ee4\u8fd9\u4e9b\u5206\u5e03\u5f0f\u7cfb\u7edf\u5b58\u5728\u5185\u5728\u7684\u6df7\u6c8c\u3002\\n\\n\u9700\u8981\u5728\u5f02\u5e38\u884c\u4e3a\u51fa\u73b0\u4e4b\u524d\uff0c\u5728\u6574\u4e2a\u7cfb\u7edf\u5185\u627e\u51fa\u8fd9\u4e9b\u5f31\u70b9\u3002\u8fd9\u4e9b\u5f31\u70b9\u5305\u62ec\u4ee5\u4e0b\u5f62\u5f0f:\\n\\n- \u5f53\u670d\u52a1\u4e0d\u53ef\u7528\u65f6\u7684\u4e0d\u6b63\u786e\u56de\u6eda\u8bbe\u7f6e\\n- \u4e0d\u5f53\u7684\u8d85\u65f6\u8bbe\u7f6e\u5bfc\u81f4\u7684\u91cd\u8bd5\u98ce\u66b4\\n- \u7531\u4e8e\u4e0b\u6e38\u4f9d\u8d56\u7684\u6d41\u91cf\u8fc7\u8f7d\u5bfc\u81f4\u7684\u670d\u52a1\u4e2d\u65ad\\n- \u5355\u70b9\u6545\u969c\u65f6\u7684\u7ea7\u8054\u5931\u8d25\u7b49\\n\\n\u5728\u8fd9\u4e9b\u5f31\u70b9\u901a\u8fc7\u751f\u4ea7\u73af\u5883\u66b4\u9732\u7ed9\u7528\u6237\u4e4b\u524d\uff0c\u5fc5\u987b\u4e3b\u52a8\u7684\u53d1\u73b0\u8fd9\u4e9b\u91cd\u8981\u7684\u5f31\u70b9\u3002\u5e76\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u7ba1\u7406\u8fd9\u4e9b\u7cfb\u7edf\u56fa\u6709\u7684\u6df7\u6c8c, \u901a\u8fc7\u589e\u52a0\u7684\u7075\u6d3b\u6027\u548c\u901f\u7387\u4ee5\u63d0\u5347\u6211\u4eec\u5bf9\u751f\u4ea7\u73af\u5883\u90e8\u7f72\u7684\u4fe1\u5fc3, \u5c3d\u7ba1\u7cfb\u7edf\u7684\u590d\u6742\u6027\u662f\u7531\u8fd9\u4e9b\u90e8\u7f72\u6240\u5bfc\u81f4\u7684\u3002\\n\\n\u91c7\u7528\u57fa\u4e8e\u7ecf\u9a8c\u548c\u7cfb\u7edf\u7684\u65b9\u6cd5\u89e3\u51b3\u4e86\u5206\u5e03\u5f0f\u7cfb\u7edf\u5728\u89c4\u6a21\u589e\u957f\u65f6\u5f15\u53d1\u7684\u95ee\u9898, \u5e76\u4ee5\u6b64\u5efa\u7acb\u5bf9\u7cfb\u7edf\u62b5\u5fa1\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u80fd\u529b\u548c\u4fe1\u5fc3\u3002\u901a\u8fc7\u5728\u53d7\u63a7\u5b9e\u9a8c\u4e2d\u89c2\u5bdf\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u884c\u4e3a\u6765\u4e86\u89e3\u5b83\u7684\u7279\u6027\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a**\u6df7\u6c8c\u5de5\u7a0b**\u3002\\n\\n## ChaosBlade\\n\\n![](https://tvax3.sinaimg.cn/large/ad5fbf65gy1gfh7pe8dxnj21d407mgly.jpg)\\n\\n[ChaosBlade](https://github.com/chaosblade-io/chaosblade) \u4e2d\u6587\u540d\u6df7\u6c8c\u4e4b\u5203\uff0c\u662f\u963f\u91cc\u5df4\u5df4\u5f00\u6e90\u7684\u4e00\u6b3e\u9075\u5faa\u6df7\u6c8c\u5de5\u7a0b\u539f\u7406\u548c\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u7684\u5b9e\u9a8c\u6ce8\u5165\u5de5\u5177\uff0c\u662f\u5185\u90e8\u9879\u76ee MonkeyKing \u5bf9\u5916\u5f00\u6e90\u7684\u9879\u76ee\uff0c\u5176\u5efa\u7acb\u5728\u963f\u91cc\u5df4\u5df4\u8fd1\u5341\u5e74\u6545\u969c\u6d4b\u8bd5\u548c\u6f14\u7ec3\u5b9e\u8df5\u57fa\u7840\u4e0a\uff0c\u7ed3\u5408\u4e86\u96c6\u56e2\u5404\u4e1a\u52a1\u7684\u6700\u4f73\u521b\u610f\u548c\u5b9e\u8df5\u3002\u65e8\u5728\u5e2e\u52a9\u4f01\u4e1a\u63d0\u5347\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u5bb9\u9519\u80fd\u529b\uff0c\u5e76\u4e14\u5728\u4f01\u4e1a\u4e0a\u4e91\u6216\u5f80\u4e91\u539f\u751f\u7cfb\u7edf\u8fc1\u79fb\u8fc7\u7a0b\u4e2d\u4e1a\u52a1\u8fde\u7eed\u6027\u63d0\u4f9b\u4fdd\u969c\u3002\\n\\n\u76ee\u524d\u652f\u6301\u7684\u573a\u666f\u6709\uff1a`\u57fa\u7840\u8d44\u6e90`\u3001`Java \u5e94\u7528`\u3001`C++ \u5e94\u7528`\u3001`Docker \u5bb9\u5668`\u4ee5\u53ca `Kubernetes \u5e73\u53f0`\u3002\u8be5\u9879\u76ee\u5c06\u573a\u666f\u6309\u9886\u57df\u5b9e\u73b0\u5c01\u88c5\u6210\u5355\u72ec\u7684\u9879\u76ee\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u4f7f\u9886\u57df\u5185\u573a\u666f\u6807\u51c6\u5316\u5b9e\u73b0\uff0c\u800c\u4e14\u975e\u5e38\u65b9\u4fbf\u573a\u666f\u6c34\u5e73\u548c\u5782\u76f4\u6269\u5c55\uff0c\u901a\u8fc7\u9075\u5faa\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\uff0c\u5b9e\u73b0 chaosblade cli \u7edf\u4e00\u8c03\u7528\u3002\\n\\n\u8be5\u9879\u76ee\u4f53\u9a8c\u6781\u597d\uff0c\u4ec5\u9700\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6 `blade`\uff0c\u5c31\u53ef\u5b8c\u6210\u591a\u79cd\u573a\u666f\u7684\u5b9e\u9a8c\uff08\u4e00\u4e9b\u590d\u6742\u573a\u666f\u5982 Java \u5e94\u7528\u5b9e\u9a8c\uff0c\u5219\u9700\u8981\u76f8\u5173\u5de5\u5177\u5305\uff09\uff0c\u540c\u65f6\u5982\u679c\u4e0d\u60f3\u4e0b\u8f7d chaosblade \u5de5\u5177\u5305\uff0c\u5feb\u901f\u4f53\u9a8c chaosblade\uff0c\u53ef\u4ee5\u62c9\u53d6 docker \u955c\u50cf\u5e76\u8fd0\u884c\uff0c\u5728\u5bb9\u5668\u5185\u4f53\u9a8c\u3002\\n\\n![](https://tva4.sinaimg.cn/large/ad5fbf65gy1gfh7yajpkkg212i0mqu0y.gif)\\n\\n<center>\u5feb\u901f\u4f53\u9a8c</center>\\n\\n\u8be5\u9879\u76ee\u4e8e 2020 \u5e74 5 \u6708 27 \u65e5\u53d1\u5e03\u4e86\u6700\u65b0\u4e86 [v0.6.0](https://github.com/chaosblade-io/chaosblade/releases/tag/v0.6.0) \u7248\u672c\uff0c\u672c\u7cfb\u5217\u6587\u7ae0\u7684\u5168\u90e8\u5b9e\u8df5\u4e5f\u5c06\u57fa\u4e8e\u8fd9\u4e2a\u7248\u672c\u4ee5\u53ca\u8be5\u7248\u672c\u7684\u4fee\u590d\u7248\u672c v0.6.x \u8fdb\u884c\u3002\\n\\n## ChaosBlade-Operator\\n\\nChaosBlade-Operator \u662f ChaosBlade \u7684 Kubernetes \u5e73\u53f0\u5b9e\u9a8c\u573a\u666f\u5b9e\u73b0\uff0c\u4e5f\u662f\u672c\u7cfb\u5217\u6587\u7ae0\u4e3b\u8981\u4f7f\u7528\u7684\u5de5\u5177\u3002\u5176\u5c06\u6df7\u6c8c\u5b9e\u9a8c\u901a\u8fc7 Kubernetes \u6807\u51c6\u7684 CRD \u65b9\u5f0f\u5b9a\u4e49\uff0c\u5f88\u65b9\u4fbf\u7684\u4f7f\u7528 Kubernetes \u8d44\u6e90\u64cd\u4f5c\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u3001\u66f4\u65b0\u3001\u5220\u9664\u5b9e\u9a8c\u573a\u666f\uff0c\u5305\u62ec\u4f7f\u7528 kubectl\u3001client-go \u7b49\u65b9\u5f0f\u6267\u884c\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e0a\u8ff0\u7684 chaosblade cli \u5de5\u5177\u6267\u884c\u3002\\n\\n![](https://tvax4.sinaimg.cn/large/ad5fbf65gy1gfh84jo6dgg20p606c1kx.gif)\\n\\n<center>Pod \u7f51\u7edc\u5ef6\u8fdf\u573a\u666f</center>\\n\\n## \u7ed3\u8bed\\n\\n\u672c\u7bc7\u4e3a\u7cfb\u5217\u6587\u7ae0\u5f00\u7bc7\uff0c\u4e3b\u8981\u4ecb\u7ecd\u6df7\u52a8\u5de5\u7a0b\u4ee5\u53ca\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\u5de5\u5177 ChaosBlade\uff0c\u540e\u7eed\u4f1a\u4ece\u5b9e\u8df5\u7684\u89d2\u5ea6\u5e26\u9886\u8bfb\u8005\u4e0a\u624b\u5b9e\u8df5\u6df7\u6c8c\u5de5\u7a0b\uff0c\u4e86\u89e3\u6df7\u6c8c\u5de5\u7a0b\u7684\u65b9\u6cd5\u53ca\u539f\u7406\u3002\u5b9e\u8df5\u51fa\u771f\u77e5\uff0c\u5728\u540e\u7eed\u7684\u6587\u7ae0\u540e\uff0c\u6211\u4eec\u5c06\u4ece ChaosBlade-Operator \u7684\u5b89\u88c5\u90e8\u7f72\u3001\u5b9e\u9a8c\u914d\u7f6e\u3001\u5b9e\u9a8c\u89c2\u6d4b\u53ca\u5b9e\u9a8c\u9500\u6bc1\u7b49\u65b9\u9762\uff0c\u8be6\u7ec6\u4ecb\u7ecd ChaosBlade \u7684\u529f\u80fd\u3002\u540c\u65f6\u4e5f\u4f1a\u4ecb\u7ecd\u5728\u4e0d\u540c\u573a\u666f\u4e0b\u6df7\u6c8c\u5de5\u7a0b\u662f\u5982\u4f55\u5e2e\u52a9\u5f00\u53d1\u8005\u53d1\u73b0\u7cfb\u7edf\u4e2d\u7684\u95ee\u9898\uff0c\u5e76\u8fbe\u5230\u9010\u6e10\u5efa\u8bbe\u9ad8\u53ef\u7528\u7684\u97e7\u6027\u7cfb\u7edf\u7684\u76ee\u7684\u3002\\n\\n## \u53c2\u8003\\n\\n- [\u6df7\u6c8c\u5de5\u7a0b\u539f\u5219](https://github.com/wizardbyron/principlesofchaos_zh-cn) - Principlesofchaos.org\\n- [ChaosBlade](https://github.com/chaosblade-io/chaosblade) - Github.com"},{"id":"/2019/10/17/chaosblade-cloud-native","metadata":{"permalink":"/en/blog/2019/10/17/chaosblade-cloud-native","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2019-10-17-chaosblade-cloud-native.md","source":"@site/blog/2019-10-17-chaosblade-cloud-native.md","title":"ChaosBlade\uff1a\u4e91\u539f\u751f\u67b6\u6784\u4e0b\u7684\u6df7\u6c8c\u5de5\u7a0b\u63a2\u7d22\u548c\u5b9e\u8df5","description":"\u672c\u6587\u4f1a\u7740\u91cd\u4ecb\u7ecd\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\u5728\u4e91\u539f\u751f\u67b6\u6784\u4e0b\u7684\u843d\u5730\u4e0e\u5b9e\u8df5","date":"2019-10-17T00:00:00.000Z","formattedDate":"October 17, 2019","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":32.59,"hasTruncateMarker":true,"authors":[{"name":"\u8096\u957f\u519b\uff08\u7a79\u8c37\uff0c@xcaspar\uff09","title":"Co-creator of ChaosBlade","url":"https://github.com/xcaspar","imageURL":"https://avatars.githubusercontent.com/u/3992234?s=64&v=4","key":"xcaspar"}],"frontMatter":{"title":"ChaosBlade\uff1a\u4e91\u539f\u751f\u67b6\u6784\u4e0b\u7684\u6df7\u6c8c\u5de5\u7a0b\u63a2\u7d22\u548c\u5b9e\u8df5","authors":"xcaspar","tags":["chaosblade"],"description":"\u672c\u6587\u4f1a\u7740\u91cd\u4ecb\u7ecd\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\u5728\u4e91\u539f\u751f\u67b6\u6784\u4e0b\u7684\u843d\u5730\u4e0e\u5b9e\u8df5","hide_table_of_contents":false},"prevItem":{"title":"ChaosBlade\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u6df7\u6c8c\u5de5\u7a0b\uff08\u4e00\uff09","permalink":"/en/blog/2020/06/04/chaosblade-start-1"},"nextItem":{"title":"Chaosblade, \u963f\u91cc\u4e00\u4e2a\u8d85\u7ea7\u725b\u903c\u7684\u6df7\u6c8c\u5b9e\u9a8c\u5b9e\u65bd\u5de5\u5177","permalink":"/en/blog/2019/07/03/chaosblade-chaos-engineering-tools"}},"content":"> \u5bfc\u8bfb\uff1a\u968f\u7740\u4e91\u539f\u751f\u6982\u5ff5\u7684\u5174\u8d77\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u7cfb\u7edf\u670d\u52a1\u5728\u5f80\u4e91\u539f\u751f\u6f14\u8fdb\uff0c\u5728\u6f14\u8fdb\u9636\u6bb5\u5982\u4f55\u4fdd\u969c\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u548c\u9ad8\u53ef\u7528\u6027\uff0c\u662f\u6bcf\u4e2a\u7cfb\u7edf\u8d1f\u8d23\u4eba\u90fd\u8981\u5173\u6ce8\u7684\u95ee\u9898\uff0c\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002ChaosBlade \u662f\u963f\u91cc\u5df4\u5df4\u5f00\u6e90\u7684\u4e00\u6b3e\u6df7\u6c8c\u5de5\u7a0b\u5b9e\u9a8c\u6267\u884c\u5de5\u5177\uff0c\u5176\u6613\u7528\u6027\u548c\u4e30\u5bcc\u7684\u573a\u666f\u53d7\u5230\u5927\u5bb6\u7684\u5e7f\u6cdb\u5173\u6ce8\u3002\u672c\u6587\u6574\u7406\u81ea\u963f\u91cc\u5df4\u5df4\u6280\u672f\u4e13\u5bb6\u8096\u957f\u519b\uff08\u7a79\u8c37\uff09\u5728 QCon \u5168\u7403\u8f6f\u4ef6\u5f00\u53d1\u5927\u4f1a\uff08\u4e0a\u6d77\u7ad9\uff092019 \u4e0a\u7684\u6f14\u8bb2\uff0c\u4ed6\u56f4\u7ed5\u4e91\u539f\u751f\u67b6\u6784\u4ecb\u7ecd\u4e86 ChaosBlade \u7684\u8bbe\u8ba1\u3001\u7279\u6027\u4e0e\u5b9e\u8df5\uff0c\u4ee5\u53ca\u5982\u4f55\u57fa\u4e8e ChaosBlade \u642d\u5efa\u4e00\u4e2a\u81ea\u52a8\u5316\u7684\u6df7\u6c8c\u5b9e\u9a8c\u5e73\u53f0\u3002\\n\x3c!--truncate--\x3e\\n![](/img/blog/qcon-meeting-on-site.jpeg)\\n\\n\u5927\u5bb6\u597d\uff0c\u6b22\u8fce\u5927\u5bb6\u6765\u542c\u6df7\u6c8c\u4e13\u573a\uff0c\u6211\u662f\u6765\u81ea\u963f\u91cc\u5df4\u5df4\u7684\u8096\u957f\u519b\uff0c\u82b1\u540d\u7a79\u8c37\uff0c\u4e4b\u524d\u5bf9\u5916\u5206\u4eab\u8fc7\u4ec0\u4e48\u662f\u6df7\u6c8c\u5de5\u7a0b\u4ee5\u53ca\u5982\u4f55\u5b9e\u65bd\u6df7\u6c8c\u5de5\u7a0b\u3002\u4e91\u539f\u751f\u548c\u6df7\u6c8c\u5de5\u7a0b\u5728\u4eca\u5e74\u90fd\u662f\u6bd4\u8f83\u706b\u7684\u6982\u5ff5\uff0c\u6df7\u6c8c\u5de5\u7a0b\u5728\u963f\u91cc\u5df4\u5df4\u5b9e\u65bd\u4e5f\u8fd1\u5341\u5e74\u7684\u65f6\u95f4\uff0c\u6211\u4eca\u5929\u4e3b\u8981\u56f4\u7ed5 ChaosBlade \u5206\u4eab\uff0cChaosBlade \u662f\u963f\u91cc\u5df4\u5df4\u5728 2019 \u5e74 4 \u6708\u4efd\u5f00\u6e90\u7684\u4e00\u6b3e\u6df7\u6c8c\u5de5\u7a0b\u7684\u5b9e\u9a8c\u5de5\u5177\uff0c\u6211\u4eca\u5929\u7684\u8bb2\u7684\u5185\u5bb9\u5305\u542b\u8fd9\u4e09\u70b9\uff1a\u4e00\u662f ChaosBlade \u662f\u4ec0\u4e48\uff0cChaosBlade \u7684\u5b9a\u4f4d\u53ca\u5b83\u7684\u7279\u6027\u6709\u54ea\u4e9b\uff0c\u7136\u540e\u518d\u91cd\u70b9\u4f1a\u4ecb\u7ecd ChaosBlade \u7684\u8be6\u7ec6\u8bbe\u8ba1\uff1b\u63a5\u4e0b\u6765\u4f1a\u4ecb\u7ecd ChaosBlade \u5728\u4e91\u539f\u751f\u67b6\u6784\u4e0b\u5177\u4f53\u7684\u8bbe\u8ba1\uff0c\u4ee5\u53ca\u4f7f\u7528\u6848\u4f8b\uff1b\u6700\u540e\u518d\u5206\u4eab\u4e00\u4e0b\u57fa\u4e8e ChaosBlade \u642d\u5efa\u7684\uff0c\u5728\u963f\u91cc\u4e91\u4e0a\u8f93\u51fa\u7684\u6df7\u6c8c\u5b9e\u9a8c\u5e73\u53f0 AHAS Chaos\uff0c\u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684\u6545\u969c\u6f14\u7ec3\u5e73\u53f0\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0b\u6df7\u6c8c\u5de5\u7a0b\u5728\u963f\u91cc\u5df4\u5df4\u5185\u90e8\u7684\u6f14\u8fdb\u3002\\n\\n![](/img/blog/alibaba-chaos-engineering-roadmap.png)\\n\\n\u5728 12 \u5e74\u963f\u91cc\u5185\u90e8\u5c31\u4e0a\u7ebf\u4e86 EOS \u9879\u76ee\uff0c\u7528\u4e8e\u68b3\u7406\u5206\u5e03\u5f0f\u670d\u52a1\u5f3a\u5f31\u4f9d\u8d56\u95ee\u9898\uff0c\u540c\u5e74\u8fdb\u884c\u4e86\u540c\u57ce\u5bb9\u707e\u7684\u65ad\u7f51\u6f14\u7ec3\u300215 \u5e74\u5b9e\u73b0\u5f02\u5730\u591a\u6d3b\uff0c16 \u5e74\u5185\u90e8\u63a8\u51fa\u6545\u969c\u6f14\u7ec3\u5e73\u53f0 MonkeyKing\uff0c\u5f00\u59cb\u5728\u7ebf\u4e0a\u73af\u5883\u5b9e\u65bd\u6df7\u6c8c\u5b9e\u9a8c\uff0c\u7136\u540e\u662f 18 \u5e74\uff0c\u8fd9\u4e00\u5e74\u8f93\u51fa\u4e86\u4e24\u4e2a\u4ea7\u54c1\uff0c\u4e00\u4e2a\u662f\u963f\u91cc\u4e91\u5185\u90e8\u4e13\u6709\u4e91\uff0c\u5c31\u4e13\u95e8\u5bf9\u4e13\u6709\u4e91\uff0c\u963f\u91cc\u7684\u4e00\u4e9b\u4ea7\u54c1\u505a\u9ad8\u53ef\u7528\u6d4b\u8bd5\u7684 ACP\uff0c\u8fd8\u6709\u5bf9\u5916\u5c06\u963f\u91cc\u4e91\uff0c\u5728\u963f\u91cc\u7684\u9ad8\u53ef\u7528\u67b6\u6784\u7ecf\u9a8c\u8f93\u51fa\u7684\u4e00\u4e2a AHAS \u5e94\u7528\u9ad8\u53ef\u7528\u670d\u52a1\u4ea7\u54c1\uff0c\u8be5\u4ea7\u54c1\u5305\u542b\u67b6\u6784\u611f\u77e5\uff0c\u80fd\u81ea\u52a8\u611f\u77e5\u4f60\u7684\u67b6\u6784\u62d3\u6251\uff0c\u7cfb\u7edf\u62d3\u6251\uff1b\u8fd8\u6709\u9650\u6d41\u964d\u7ea7\u529f\u80fd\uff0c\u5c31\u662f\u5e94\u7528\u9632\u62a4\u8fd9\u4e00\u5757\uff1b\u53e6\u5916\u4e00\u4e2a\u5c31\u662f\u6545\u969c\u6f14\u7ec3\uff0c\u4e5f\u5c31\u662f AHAS-Chaos \u5e73\u53f0\uff0c\u540e\u9762\u4e5f\u4f1a\u91cd\u70b9\u4ecb\u7ecd\u30022019 \u5e74 4 \u6708\u4efd\u521a\u624d\u4e5f\u63d0\u5230\u5f00\u6e90\u4e86 ChaosBlade\uff0c\u7136\u540e\u4e0b\u534a\u5e74\u6211\u4eec\u5f00\u59cb\u505a\u4e13\u6709\u4e91\u7684\u6df7\u6c8c\u5b9e\u9a8c\u5e73\u53f0\u7684\u4e00\u4e2a\u8f93\u51fa\u3002\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u505a\u5f00\u6e90\u5462\uff1f\u56e0\u4e3a\u5f53\u65f6\u5df2\u7ecf\u5f00\u6e90\u7684\u5de5\u5177\u5b58\u5728\u4ee5\u4e0b\u95ee\u9898\u3002\\n\\n![](/img/blog/chaosblade-opensource-background.png)\\n\\n\u4f8b\u5982\u573a\u666f\u80fd\u529b\u5206\u6563\uff0c\u5927\u5bb6\u719f\u77e5\u7684 Chaos Monkey\uff0c\u6df7\u6c8c\u7334\u5b50\uff0c\u53ea\u6740 EC2 \u5b9e\u4f8b\uff1bKube Monkey \u53ea\u6740 K8s pod\u3002\u9664\u4e86\u80fd\u529b\u5206\u6563\u4e4b\u5916\uff0c\u8fd8\u6709\u4e0a\u624b\u96be\u5ea6\u5927\uff0c\u56e0\u4e3a\u4e0d\u540c\u7684\u5de5\u5177\u5b83\u7684\u4f7f\u7528\u65b9\u5f0f\u4e5f\u4e0d\u4e00\u6837\u3002\u8fd8\u6709\u7f3a\u5c11\u5b9e\u9a8c\u6a21\u578b\uff0c\u96be\u4ee5\u5b9e\u8df5\uff0c\u5e76\u4e14\u573a\u666f\u96be\u4ee5\u6c89\u6dc0\u3002\u8fd9\u4e9b\u95ee\u9898\u5c31\u4f1a\u5bfc\u81f4\u5f88\u96be\u5b9e\u73b0\u5e73\u53f0\u5316\uff0c\u4f60\u5f88\u96be\u901a\u8fc7\u4e00\u4e2a\u5e73\u53f0\u53bb\u56ca\u62ec\u8fd9\u4e9b\u5de5\u5177\u3002\u6211\u4eec\u5f53\u65f6\u63d0\u51fa\u4e86\u4e00\u5957\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\uff0c\u5f88\u597d\u7684\u89e3\u51b3\u4e86\u8fd9\u4e9b\u95ee\u9898\uff0cChaosBlade \u4e5f\u662f\u57fa\u4e8e\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u6765\u7814\u53d1\u7684\uff0c\u800c\u4e14\u6df7\u6c8c\u5de5\u7a0b\u5728\u963f\u91cc\u5df2\u5b9e\u8df5\u591a\u5e74\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u6c89\u6dc0\u7684\u573a\u666f\u5f00\u6e90\u51fa\u6765\uff0c\u670d\u52a1\u4e8e\u6df7\u6c8c\u5de5\u7a0b\u793e\u533a\u3002\\n\\n![](/img/blog/chaosblade-core-strengths.png)\\n\\nChaosBlade \u662f\u4e00\u6b3e\u9075\u5faa\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u7684\u6df7\u6c8c\u5b9e\u9a8c\u6267\u884c\u5de5\u5177\uff0c\u5177\u6709\u573a\u666f\u4e30\u5bcc\u5ea6\u9ad8\uff0c\u7b80\u5355\u6613\u7528\u7b49\u7279\u70b9\uff0c\u800c\u4e14\u6269\u5c55\u573a\u666f\u4e5f\u7279\u522b\u65b9\u4fbf\uff0c\u5f00\u6e90\u4e0d\u4e45\u5c31\u88ab\u52a0\u5165\u5230 CNCF Landspace \u4e2d\uff0c\u6210\u4e3a\u4e3b\u6d41\u7684\u4e00\u6b3e\u6df7\u6c8c\u5de5\u5177\u3002ChaosBlade \u8fd9\u4e9b\u7279\u70b9\u5f97\u76ca\u4e8e\u4ee5\u4e0b\u8fd9\u4e2a\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u3002\\n\\n![](/img/blog/chaosblade-experiment-model.png)\\n\\n\u6b64\u6a21\u578b\u5f88\u7b80\u6d01\uff0c\u8fd9\u4e2a\u5012\u4e09\u89d2\u6a21\u578b\u4f9b\u5206\u4e3a\u56db\u5c42\uff1a\u7b2c\u4e00\u4e2a\u662f Target\uff0c\u6211\u4eec\u6f14\u7ec3\u7684\u76ee\u6807\u662f\u4ec0\u4e48\uff1b\u7136\u540e\u662f Scope\uff0c\u5b9a\u4e49\u4e86\u6211\u4eec\u5b9e\u9a8c\u8303\u56f4\uff1b\u5176\u6b21\u662f Matcher\uff0c\u6211\u4eec\u5b9e\u9a8c\u573a\u666f\u89e6\u53d1\u5339\u914d\u7684\u89c4\u5219\u6709\u54ea\u4e9b\uff1b\u6700\u540e\u4e00\u4e2a\u662f Action\uff0c\u6211\u4eec\u6267\u884c\u7684\u5b9e\u9a8c\u884c\u4e3a\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8981\u505a\u4ec0\u4e48\u6f14\u7ec3\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u5bf9\u4e00\u53f0\u673a\u5668\u4e0a\u7684 double \u5e94\u7528\u8c03\u7528 serviceA \u670d\u52a1\u505a\u8c03\u7528\u5ef6\u8fdf\u5b9e\u9a8c\u3002\u90a3\u4e48\u6211\u4eec\u6765\u5bf9\u9f50\u4e00\u4e0b\u5b9e\u9a8c\u6a21\u578b\uff0c\u9996\u5148 Target \u5c31\u662f double\uff0c\u6211\u4eec\u8981\u5bf9 double \u670d\u52a1\u505a\u6f14\u7ec3\u3002Scope \u662f\u672c\u673a\uff0c\u5c31\u662f\u8fd9\u4e00\u53f0\u673a\u5668\u4e0a double \u5e94\u7528\u3002\u7136\u540e\u5339\u914d\u89c4\u5219\u662f\u670d\u52a1\u540d serviceA\uff0c\u90a3\u4e48\u5b83\u7684 action \u662f\u4ec0\u4e48\uff1f\u662f\u5ef6\u8fdf\uff0c\u901a\u8fc7\u5b9e\u9a8c\u6a21\u578b\u63cf\u8ff0\u4e4b\u540e\uff0c\u5c42\u6b21\u6e05\u6670\uff0c\u800c\u4e14\u8be5\u6a21\u578b\u8986\u76d6\u76ee\u524d\u6240\u6709\u7684\u5b9e\u9a8c\u573a\u666f\u3002\u6211\u4eec\u518d\u6765\u770b\u4e00\u4e0b\u57fa\u4e8e\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b ChaosBlade \u76ee\u524d\u6240\u5177\u5907\u7684\u573a\u666f\u3002\\n\\n![](/img/blog/experiment-of-chaosblade.png)\\n\\n\u6211\u628a ChaosBlade \u7684\u573a\u666f\u5206\u4e3a\u56db\u5927\u7c7b\uff0c\u524d\u9762\u8fd9\u4e00\u5217\u7eff\u8272\u5b57\u4f53\u662f\u9879\u76ee\u5de5\u7a0b\uff0c\u540e\u9762\u7684\u7eff\u8272\u5b57\u4f53\u4ee3\u8868\u5df2\u7ecf\u5b9e\u73b0\u7684\u7ec4\u4ef6\uff0c\u540e\u9762\u7684\u7eff\u6846\u6846\u8d77\u6765\u7684\u767d\u5b57\u7684\uff0c\u5c31\u662f\u5b83\u6240\u652f\u6301\u7684\u5b9e\u9a8c\u573a\u666f\u4e3e\u4f8b\u3002\u7b2c\u4e00\u5927\u7c7b\u573a\u666f\u662f\u57fa\u7840\u8d44\u6e90\uff0c\u5305\u542b\u7684\u5b9e\u9a8c\u573a\u666f\u5982 CPU \u6ee1\u8f7d\u3001\u5185\u5b58\u5360\u7528\uff0c\u7f51\u7edc\u5ef6\u8fdf\uff0c\u8fdb\u7a0b Hang \u7b49\u3002\u53e6\u5916\u4e00\u7c7b\u662f\u5e94\u7528\u670d\u52a1\uff0c\u5e94\u7528\u670d\u52a1\u7684\u573a\u666f\u53d6\u51b3\u4e8e\u4f60\u5e94\u7528\u7684\u6784\u5efa\u8bed\u8a00\uff0c\u6211\u4eec\u76ee\u524d\u652f\u6301\u7684\u662f JAVA\u3001C++ \u548c NodeJS\uff0c\u6bcf\u4e00\u4e2a\u5e94\u7528\u670d\u52a1\u4e0b\u9762\u53c8\u7ec6\u5206\u4e86\u8fd9\u4e9b\u7ec4\u4ef6\uff0c\u540e\u9762\u5217\u4e3e\u7684\u8fd9\u4e9b\u7eff\u8272\u5b57\u4f53\u7684\u662f\u6211\u4eec\u5df2\u7ecf\u652f\u6301\u7684\u7ec4\u4ef6\u3002\u518d\u4e00\u7c7b\u573a\u666f\u6d89\u53ca\u5230\u5bb9\u5668\u670d\u52a1\uff0c\u5bb9\u5668\u670d\u52a1\u7684\u8bdd\uff0c\u6211\u4eec\u76ee\u524d\u652f\u6301 Docker \u548c K8s\u3002\u6211\u4eec\u652f\u6301\u7684 K8s \u573a\u666f\u4f8b\u5982\u6740 Pod\uff0cKubelet \u5f02\u5e38\uff0c\u5220\u5bb9\u5668\u7b49\u3002\u6700\u540e\u7684\u4e00\u7c7b\u662f\u4e91\u5e73\u53f0\uff0c\u5f85\u5b9e\u73b0\u4e2d\u3002\u8fd9\u4e2a\u662f ChaosBlade \u6545\u969c\u573a\u666f\u5927\u56fe\u3002\u5728\u8fd9\u4e30\u5bcc\u7684\u573a\u666f\u4e0b\uff0cChaosBlade \u7684\u6613\u7528\u6027\u4e5f\u975e\u5e38\u5f3a\u3002\\n![](/img/blog/chaosblade-cli.png)\\n\\n\u91cd\u70b9\u4ecb\u7ecd\u4e00\u4e0b\uff0cChaosBlade \u662f\u4e2a\u76f4\u63a5\u4e0b\u8f7d\u89e3\u538b\u5c31\u53ef\u4ee5\u4f7f\u7528\u7684\u5de5\u5177\uff0c\u4e0d\u9700\u8981\u5b89\u88c5\uff0c\u7136\u540e\u5b83\u652f\u6301\u7684\u8c03\u7528\u65b9\u5f0f\u5305\u542b CLI \u65b9\u5f0f\uff0c\u76f4\u63a5\u6267\u884c blade \u547d\u4ee4\uff0c\u6bd4\u5982\u8fd9\u91cc\u4e3e\u7684\u505a\u7f51\u7edc\u5ef6\u8fdf\u7684\u4f8b\u5b50\uff0c\u4f60\u6dfb\u52a0 -h \u53c2\u6570\u5c31\u53ef\u4ee5\u770b\u5230\u975e\u5e38\u5b8c\u5584\u7684\u547d\u4ee4\u63d0\u793a\uff0c\u6bd4\u5982\u6211\u8981\u4e00\u4e2a 9520 \u7aef\u53e3\u8c03\u7528\u505a\u7f51\u7edc\u4e22\u5305\uff0c\u5bf9\u9f50\u524d\u9762\u7684\u5b9e\u9a8c\u6a21\u578b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u7684\u6f14\u7ec3\u76ee\u6807\u662f network\uff0c\u5b83\u7684 action \u662f\u4e22\u5305\uff0c\u5b83\u7684 matcher \u5c31\u662f\u8c03\u7528\u8fdc\u7a0b\u7684\u4e00\u4e2a\u670d\u52a1\u7aef\u53e3 9520\u3002\u6267\u884c\u6210\u529f\u540e\u4f1a\u8fd4\u56de\u5b9e\u9a8c\u7ed3\u679c\uff0c\u6bcf\u4e00\u4e2a\u5b9e\u9a8c\u573a\u666f\u6211\u4eec\u90fd\u4f1a\u4f5c\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5b9e\u9a8c\u5bf9\u8c61\u7684 UID\uff0c\u6b64 UID \u7528\u4e8e\u540e\u7eed\u7684\u5b9e\u9a8c\u7ba1\u7406\uff0c\u6bd4\u5982\u9500\u6bc1\u3001\u67e5\u8be2\u5b9e\u9a8c\u90fd\u662f\u901a\u8fc7\u6b64 UID \u6765\u505a\u7684\u3002\u8981\u9500\u6bc1\u5b9e\u9a8c\uff0c\u4e5f\u5c31\u662f\u6062\u590d\u5b9e\u9a8c\uff0c\u76f4\u63a5\u6267\u884c blade destroy \u547d\u4ee4\u5c31\u53ef\u4ee5\u4e86\u3002ChaosBlade \u53e6\u4e00\u79cd\u8c03\u7528\u65b9\u5f0f\u662f Web \u65b9\u5f0f\uff0c\u901a\u8fc7\u6267\u884c server \u547d\u4ee4\u5bf9\u5916\u66b4\u9732 HTTP \u670d\u52a1\uff0c\u90a3\u4e48\u5728\u4e0a\u5c42\uff0c\u4f60\u5982\u679c\u81ea\u5df1\u6784\u5efa\u6df7\u6c8c\u5b9e\u9a8c\u5e73\u53f0\u7684\u8bdd\uff0c\u4f60\u76f4\u63a5\u53ef\u4ee5\u901a\u8fc7 HTTP \u8bf7\u6c42\u53bb\u8c03\u7528\u5c31\u53ef\u4ee5\u4e86\u3002\u6240\u4ee5\u8bf4 ChaosBlade \u5177\u6709\u5f88\u597d\u7684\u6613\u7528\u6027\uff0c\u90a3\u4e48\u5b83\u662f\u5982\u4f55\u8bbe\u8ba1\u7684\u5462\uff1f\\n\\n![](/img/blog/chaosblade-overall-design.png)\\n\\n\u6211\u5c06 ChaosBlade \u7684\u8bbe\u8ba1\u603b\u7ed3\u4e3a\u8fd9\u516d\u70b9\u3002\u4f7f\u7528 Golang \u6784\u5efa\uff0c\u5b9e\u73b0\u8de8\u5e73\u53f0\uff0c\u5e76\u4e14\u89e3\u538b\u5373\u7528\uff1b\u5de5\u5177\u4f7f\u7528\u91c7\u7528 CLI \u7684\u65b9\u5f0f\uff0c\u4f7f\u7528\u7b80\u5355\uff0c\u5177\u5907\u5b8c\u5584\u7684\u547d\u4ee4\u63d0\u793a\uff1b\u9075\u5faa\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\u5b9a\u4e49\u573a\u666f\u63a5\u53e3\uff0c\u6240\u6709\u573a\u666f\u57fa\u4e8e\u6b64\u63a5\u53e3\u5b9e\u73b0\uff0c\u5c06\u6a21\u578b\u8f6c\u6362\u4e3a cobra \u6846\u67b6\u6240\u652f\u6301\u7684\u547d\u4ee4\u53c2\u6570\uff0c\u5b9e\u73b0\u53d8\u91cf\u53c2\u6570\u5316\u3001\u53c2\u6570\u89c4\u8303\u5316\uff0c\u5e76\u4e14\u901a\u8fc7\u5b9e\u9a8c\u6a21\u578b Yaml \u63cf\u8ff0\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5b9e\u73b0\u591a\u8bed\u8a00\u3001\u591a\u9886\u57df\u7684\u573a\u666f\u6269\u5c55\u3002\u800c\u4e14\u5c06\u6574\u4e2a\u5b9e\u9a8c\u5bf9\u8c61\u5316\uff0c\u6bcf\u4e2a\u5b9e\u9a8c\u5bf9\u8c61\u90fd\u4f1a\u6709\u4e2a UID\uff0c\u65b9\u4fbf\u7ba1\u7406\u3002\u8fd9\u4e2a\u662f ChaosBlade \u7684\u4e00\u4e2a\u6574\u4f53\u8bbe\u8ba1\u3002\u90a3\u4e48\u6211\u4eec\u518d\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u770b\u4e00\u4e0b ChaosBlade \u5982\u4f55\u4f7f\u7528\u3002\\n\\n![](/img/blog/practice-case-of-chaosblade.png)\\n\\n\u8fd9\u4e2a\u4f8b\u5b50\u7684\u662f\u4e3b\u8981\u9a8c\u8bc1\u670d\u52a1\u8c03\u7528\u6570\u636e\u5e93\u5ef6\u8fdf\u3002\u5728\u8bb2\u8fd9\u4e2a\u4f8b\u5b50\u4e4b\u524d\uff0c\u5148\u770b\u4e00\u4e0b\u53f3\u4e0a\u89d2 demo \u7684\u5e94\u7528\u62d3\u6251\u56fe\uff0c\u8fd9\u4e2a\u62d3\u6251\u56fe\u6765\u81ea\u4e8e AHAS \u67b6\u6784\u611f\u77e5\uff0c\u4ece\u8fd9\u4e2a\u62d3\u6251\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa consumer \u670d\u52a1\u8c03\u7528 provider\uff0cprovider \u8c03\u7528 mk-demo RDS \u6570\u636e\u5e93\uff0c\u540c\u65f6\u4e5f\u8c03\u7528\u4e0b\u6e38\u7684 base \u670d\u52a1\uff0c\u8fd9\u4e2a\u662f\u4e09\u5c42\u7684\u5fae\u670d\u52a1\u8c03\u7528\u3002\u8fd9\u91cc\u6211\u4eec provider \u670d\u52a1\u6709\u4e24\u4e2a\u5b9e\u4f8b\uff0c\u6240\u505a\u7684\u5b9e\u9a8c\u5c31\u662f provider \u8c03\u7528\u6570\u636e\u5e93 mk-demo \u53d1\u751f\u5ef6\u8fdf\u3002\u5728\u6267\u884c\u6df7\u6c8c\u5b9e\u9a8c\u4e4b\u524d\uff0c\u5c31\u8981\u6709\u660e\u786e\u7684\u76d1\u63a7\u6307\u6807\uff0c\u56e0\u4e3a\u6267\u884c\u6df7\u6c8c\u5b9e\u9a8c\u7684\u6b65\u9aa4\u5305\u542b\u8981\u6267\u884c\u7684\u5b9e\u9a8c\u8ba1\u5212\u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u6267\u884c\u7684\u9884\u671f\u662f\u4ec0\u4e48\uff0c\u7136\u540e\u6267\u884c\u5b9e\u9a8c\uff0c\u6211\u4eec\u6267\u884c\u5b9e\u9a8c\u5982\u679c\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u6211\u4eec\u7684\u4e0b\u4e00\u6b65\u7684\u63a8\u8fdb\u8ba1\u5212\u662f\u4ec0\u4e48\uff0c\u540e\u9762\u518d\u505a\u6301\u7eed\u7684\u9a8c\u8bc1\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u8fd9\u91cc\u5b9a\u4e49\u4e86\u4e00\u4e2a\u76d1\u63a7\u6307\u6807\uff0c\u6211\u4eec\u76d1\u63a7\u6162 SQL \u6570\u4ee5\u53ca\u76d1\u63a7\u62a5\u8b66\u3002\u90a3\u4e48\u6211\u4eec\u7684\u671f\u671b\u5047\u8bbe\u5c31\u662f\u6162 SQL \u6570\u589e\u52a0\uff0c\u9489\u9489\u7fa4\u6536\u5230\u76f8\u5173\u7684\u62a5\u8b66\u4fe1\u606f\u3002\u6211\u4eec\u6267\u884c\u7684\u5b9e\u9a8c\u662f\u5bf9\u5176\u4e2d\u4e00\u4e2a provider \u670d\u52a1\u5b9e\u4f8b\u6ce8\u5165\u8c03\u7528 mk-demo \u6570\u636e\u5e93\u5ef6\u8fdf\u7684\u6545\u969c\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u5230\u5de6\u4e0b\u89d2\uff0c\u8fd9\u4e2a\u5c31\u662f\u5bf9 demo \u6570\u636e\u5e93\u6ce8\u5165\u5ef6\u8fdf\u7684\u547d\u4ee4\uff0c\u53ef\u4ee5\u770b\u51fa\u547d\u4ee4\u975e\u5e38\u7b80\u6d01\u6e05\u6670\uff0c\u6bd4\u5982\u5f88\u660e\u786e\u7684\u8868\u8fbe\u51fa\u6211\u4eec\u7684\u5b9e\u9a8c\u76ee\u6807\u662f mysql\uff0c\u6211\u4eec\u7684\u5b9e\u9a8c\u573a\u666f\u662f\u505a\u5ef6\u8fdf\uff0c\u540e\u9762\u8fd9\u4e9b\u90fd\u662f\u8fd9\u4e9b\u6570\u636e\u5e93\u7684\u5339\u914d\u5668\uff0c\u6bd4\u5982\u8868\uff0c\u67e5\u8be2\u7c7b\u578b\uff0c\u8fd8\u6709\u63a7\u5236\u5b9e\u9a8c\u7684\u5f71\u54cd\u6761\u6570\u7b49\u7b49\u3002ChaosBlade \u53ef\u4ee5\u5f88\u6709\u6548\u7684\u63a7\u5236\u5b9e\u9a8c\u7684\u7206\u70b8\u534a\u5f84\uff0c\u53ef\u4ee5\u63a7\u5236\u5230\u5f71\u54cd\u7684\u6761\u6570\uff0c\u63a7\u5236\u5f71\u54cd\u767e\u5206\u6bd4\uff0c\u800c\u4e14\u8fd8\u6709\u5404\u79cd\u5339\u914d\u5668\u6765\u5339\u914d\uff0c\u63a7\u5236\u7c92\u5ea6\u5f88\u7ec6\u3002\u90a3\u4e48\u6211\u6267\u884c\u5b8c\u8fd9\u6761\u547d\u4ee4\uff0c\u5c31\u5f00\u59cb\u5bf9\u8fd9\u53f0\u673a\u5668\u7684 provider \u670d\u52a1\u6ce8\u5165\u6545\u969c\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u5230\u6211\u6ce8\u5165\u6545\u969c\u4e4b\u540e\uff0c\u8fd9\u91cc\u8fd9\u4e2a\u56fe\u5c31\u662f\u6211\u7acb\u523b\u6536\u5230\u4e86\u9489\u9489\u7684\u62a5\u8b66\uff0c\u90a3\u4e48\u8fd9\u4e2a case \u662f\u7b26\u5408\u9884\u671f\u7684 case\uff0c\u4f46\u662f\u5373\u4f7f\u7b26\u5408\u9884\u671f\u7684 case\uff0c\u4e5f\u662f\u6709\u4ef7\u503c\u7684\uff0c\u9700\u8981\u76f8\u5173\u7684\u5f00\u53d1\u548c\u8fd0\u7ef4\u4eba\u5458\u662f\u8981\u53bb\u6392\u67e5\u5ef6\u8fdf\u7684\u95ee\u9898\u6839\u56e0\u5e76\u6062\u590d\u3002\u8fd9\u91cc\u7684\u76d1\u63a7\u544a\u8b66\u4f7f\u7528\u7684\u662f\u963f\u91cc\u4e91\u7684 ARMS \u4ea7\u54c1\uff0c\u9664\u4e86\u76d1\u63a7\u544a\u8b66\u529f\u80fd\uff0c\u8fd8\u53ef\u4ee5\u6293\u53d6\u5230\u8be6\u7ec6\u7684\u94fe\u8def\u8c03\u7528\u5806\u6808\uff0c\u8fd9\u91cc\u5f88\u6e05\u6670\u7684\u5c55\u793a\u51fa\u54ea\u6761 SQL \u8bed\u53e5\u6267\u884c\u6162\u3002\u8fd9\u4e2a\u662f\u6574\u4e2a\u7684\u4e00\u4e2a ChaosBlade \u4f7f\u7528\u6848\u4f8b\uff0c\u5b83\u53ef\u4ee5\u9a8c\u8bc1\u7cfb\u7edf\u7684\u544a\u8b66\u662f\u5426\u6709\u6548\uff0c\u5f00\u53d1\u548c\u8fd0\u7ef4\u7684\u54cd\u5e94\u901f\u5ea6\u662f\u5426\u8fbe\u5230\u8981\u6c42\uff0c\u90a3\u4e48\u9664\u4e86\u521a\u624d\u63d0\u5230\u7684\u544a\u8b66\u548c\u5f00\u53d1\u548c\u4eba\u5458\u54cd\u5e94\u901f\u5ea6\u4e4b\u5916\uff0c\u6df7\u6c8c\u5b9e\u9a8c\u7684\u4ef7\u503c\u6211\u603b\u7ed3\u4e3a\u4e09\u90e8\u5206\u3002\\n\\n![](/img/blog/value-of-chaos-engineering.png)\\n\\n\u7b2c\u4e00\u90e8\u5206\u5c31\u662f\u4eba\u5458\uff0c\u4eba\u5458\u7684\u8bdd\u8fd9\u91cc\u5217\u4e3e\u4e86\u56db\u4e2a\u89d2\u8272\uff0c\u6bd4\u5982\u5bf9\u4e8e\u67b6\u6784\u5e08\u6765\u8bf4\uff0c\u90a3\u4e48\u67b6\u6784\u5e08\u4ed6\u8981\u505a\u7cfb\u7edf\u8bbe\u8ba1\uff0c\u6bd4\u5982\u8bbe\u8ba1\u9ad8\u5bb9\u9519\u7684\u7cfb\u7edf\u6216\u8005\u662f\u9762\u5411\u5931\u8d25\u7684\u7cfb\u7edf\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u53bb\u9a8c\u8bc1\u7cfb\u7edf\u7684\u97e7\u6027\u548c\u5bb9\u9519\u5bb9\u707e\u7684\u80fd\u529b\u3002\u5bf9\u4e8e\u5f00\u53d1\u548c\u8fd0\u7ef4\u6765\u8bf4\uff0c\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\uff0c\u53ef\u4ee5\u63d0\u9ad8\u6545\u969c\u7684\u5e94\u6025\u6548\u7387\uff0c\u6216\u5b8c\u5584\u6392\u67e5\u95ee\u9898\u7684\u5de5\u5177\u3002\u5bf9\u4e8e\u6d4b\u8bd5\u6765\u8bf4\u7684\u8bdd\uff0c\u4e4b\u524d\u7684\u6d4b\u8bd5\u6d89\u53ca\u5230\u4ece\u529f\u80fd\u6d4b\u8bd5\u3001\u6027\u80fd\u6d4b\u8bd5\uff0c\u8fd9\u4e9b\u90fd\u662f\u4ece\u7528\u6237\u7684\u89d2\u5ea6\u53bb\u6765\u6d4b\u8bd5\u7cfb\u7edf\u7684\u3002\u90a3\u4e48\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u53ef\u4ee5\u4ece\u7cfb\u7edf\u7684\u89d2\u5ea6\u6765\u9a8c\u8bc1\u7cfb\u7edf\u4e2d\u6f5c\u5728\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u63d0\u65e9\u66b4\u9732\u7ebf\u4e0a\u7684\u95ee\u9898\uff0c\u7136\u540e\u964d\u4f4e\u6545\u969c\u7684\u590d\u53d1\u7387\u3002\u5bf9\u4e8e\u4ea7\u54c1\u548c\u8bbe\u8ba1\u6765\u8bf4\uff0c\u4ed6\u4eec\u53ef\u4ee5\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u6765\u6f14\u7ec3\u9875\u9762\u4e0a\u7684\u4e00\u4e9b\u4e8b\u4ef6\uff0c\u6bd4\u5982\u5546\u54c1\u8be6\u60c5\u9875\uff0c\u54ea\u9879\u51fa\u73b0\u95ee\u9898\uff0c\u7528\u6237\u4f53\u9a8c\u5ea6\u5982\u4f55\u3002\u6240\u4ee5\u8bf4\u6df7\u6c8c\u5de5\u7a0b\u662f\u9002\u7528\u4e8e\u6bcf\u4e00\u4e2a\u4eba\u7684\u3002\u53e6\u4e00\u90e8\u5206\u662f\u7cfb\u7edf\uff0c\u7cfb\u7edf\u7684\u8bdd\uff0c\u524d\u9762\u4e5f\u63d0\u5230\u4e86\u53ef\u4ee5\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u63d0\u5347\u7cfb\u7edf\u7684\u5bb9\u9519\u3001\u5bb9\u707e\u80fd\u529b\u3002\u8fd8\u6709\u5c31\u662f\u57fa\u7840\u80fd\u529b\u548c\u8fd0\u7ef4\u9ad8\u53ef\u7528\uff0c\u5c31\u662f\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u53bb\u9a8c\u8bc1\u4f60\u7684\u57fa\u7840\u670d\u52a1\uff0c\u6bd4\u5982\u4f60\u7684\u76d1\u63a7\u4f53\u7cfb\uff0c\u4f60\u7684\u544a\u8b66\u4f53\u7cfb\uff0c\u662f\u4e0d\u662f\u9ad8\u53ef\u7528\u7684\uff0c\u5982\u679c\u8fd9\u4e9b\u4e0d\u662f\u9ad8\u53ef\u7528\u7684\uff0c\u90a3\u4e48\u5f53\u6545\u969c\u51fa\u73b0\u7684\u65f6\u5019\uff0c\u4f60\u6709\u53ef\u80fd\u4e0d\u80fd\u53ca\u65f6\u53d1\u73b0\u7cfb\u7edf\u7684\u6545\u969c\uff0c\u4e0d\u80fd\u53ca\u65f6\u6536\u5230\u6545\u969c\u62a5\u8b66\uff0c\u6392\u67e5\u95ee\u9898\u4e5f\u6709\u53ef\u80fd\u9047\u5230\u963b\u788d\uff0c\u6240\u4ee5\u8bf4\u4f60\u8981\u4fdd\u8bc1\u4f60\u7684\u57fa\u7840\u8bbe\u65bd\u662f\u9ad8\u53ef\u7528\u7684\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u53bb\u9a8c\u8bc1\u4f60\u8fd9\u4e9b\u57fa\u7840\u670d\u52a1\u3002\u6700\u540e\u4e00\u4e2a\u662f\u6d41\u7a0b\uff0c\u5c31\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\uff0c\u4f60\u53ef\u4ee5\u9a8c\u8bc1\u6574\u4e2a\u6545\u969c\u53d1\u751f\u7684\u5904\u7406\u6d41\u7a0b\uff0c\u6bd4\u5982\u963f\u91cc\u7684\u8bdd\uff0c\u6545\u969c\u90fd\u6709\u660e\u786e\u7684\u7b49\u7ea7\u5212\u5206\uff0c\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u53ef\u4ee5\u63a8\u8fdb\u6545\u969c\u7b49\u7ea7\u7684\u5212\u5206\uff0c\u9a8c\u8bc1\u4f60\u7684\u8054\u7cfb\u4eba\u7684\u6709\u6548\u6027\uff0c\u6bd4\u5982\u7ecf\u8fc7\u591a\u5e74\u6709\u53ef\u80fd\u8fd9\u4e9b\u4eba\u90fd\u79bb\u804c\u4e86\uff0c\u4f46\u662f\u4ed6\u8fd8\u5728\u544a\u8b66\u8054\u7cfb\u4eba\u91cc\uff0c\u8be5\u5728\u7684\u800c\u4e0d\u5728\uff0c\u8fd9\u90fd\u662f\u95ee\u9898\u3002\u8fd9\u662f\u5728\u6d41\u7a0b\u65b9\u9762\uff0c\u9664\u4e86\u6545\u969c\u5e94\u6025\u8fd8\u6709\u4e00\u4e2a\u6545\u969c\u7ba1\u7406\uff0c\u6545\u969c\u7ba1\u7406\u7684\u8bdd\u4e3b\u8981\u662f\u505a\u6545\u969c\u6c89\u6dc0\uff0c\u540e\u9762\u7684\u8bdd\u6545\u969c\u7edf\u8ba1\u4ee5\u53ca\u6545\u969c\u590d\u76d8\uff0c\u4ee5\u53ca\u6545\u969c\u573a\u666f\u6c89\u6dc0\uff0c\u6301\u7eed\u505a\u6f14\u7ec3\uff0c\u9632\u6b62\u6545\u969c\u518d\u6b21\u53d1\u751f\u3002\u8fd9\u91cc\u662f\u5bf9\u6df7\u6c8c\u5de5\u7a0b\u4ef7\u503c\u7684\u4e00\u4e2a\u603b\u7ed3\uff0c\u9664\u4e86\u8fd9\u4e9b\uff0c\u5728\u4e91\u539f\u751f\u65f6\u4ee3\uff0c\u6df7\u6c8c\u5de5\u7a0b\u7684\u4ef7\u503c\u662f\u4ec0\u4e48\uff1f\\n\\n![](/img/blog/what-is-value-of-chaos-engineering-in-cloud-native.png)\\n\\n\u6211\u4eec\u5728\u8bb2\u4ef7\u503c\u4e4b\u524d\u5148\u770b\u4e00\u4e0b\u76ee\u524d\u4e91\u539f\u751f\u67b6\u6784\u6240\u5305\u542b\u7684\u6280\u672f\u53ca\u76f8\u5173\u7684\u7a33\u5b9a\u6027\u6311\u6218\u3002\u4ee5\u4e0b\u5217\u4e3e\u4e86\u4e91\u539f\u751f\u76f8\u5173\u7684\u6280\u672f\u3002\\n\\n![](/img/blog/cloud-native-challenge.png)\\n\\n\u4e91\u8bbe\u65bd\u6307\u516c\u6709\u4e91\u3001\u4e13\u6709\u4e91\u548c\u6df7\u5408\u4e91\u7b49\uff0c\u662f\u4e91\u539f\u751f\u7cfb\u7edf\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u57fa\u7840\u5b9e\u65bd\u7684\u6545\u969c\u53ef\u80fd\u5bf9\u6574\u4e2a\u4e0a\u5c42\u4e1a\u52a1\u7cfb\u7edf\u9020\u6210\u5f88\u5927\u5f71\u54cd\uff0c\u6240\u4ee5\u8bf4\u4e91\u8bbe\u65bd\u7684\u7a33\u5b9a\u6027\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u5bb9\u5668\u670d\u52a1\u7684\u6311\u6218\u53ef\u4ee5\u5206\u4e24\u5927\u7c7b\uff0c\u4e00\u7c7b\u662f\u9762\u5411 k8s \u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u670d\u52a1\u662f\u5426\u7a33\u5b9a\uff0c\u53e6\u4e00\u7c7b\u662f\u9762\u5411\u7528\u6237\uff0c\u914d\u7f6e\u7684\u6269\u7f29\u5bb9\u89c4\u5219\u662f\u5426\u6709\u6548\uff0c\u5b9e\u73b0\u7684 CRD \u662f\u5426\u6b63\u786e\uff0c\u5bb9\u5668\u7f16\u6392\u662f\u5426\u5408\u7406\u7b49\u95ee\u9898\u3002\u5fae\u670d\u52a1\uff0c\u5206\u5e03\u5f0f\u670d\u52a1\u7684\u590d\u6742\u6027\uff0c\u5355\u4e2a\u670d\u52a1\u7684\u6545\u969c\u5f88\u96be\u5224\u65ad\u5bf9\u6574\u4e2a\u7cfb\u7edf\u7684\u5f71\u54cd\uff1bservice mesh\uff0csidecar \u7684\u670d\u52a1\u8def\u7531\u3001\u8d1f\u8f7d\u5747\u8861\u7b49\u529f\u80fd\u7684\u6709\u6548\u6027\uff0c\u8fd8\u6709 sidecar \u5bb9\u5668\u672c\u8eab\u7684\u53ef\u7528\u6027\u3002serverless\uff0c\u73b0\u5728\u57fa\u672c\u4e0a\u90fd\u662f\u51fd\u6570\u52a0\u4e8b\u4ef6\u7684\u5f62\u5f0f\uff0c\u8d44\u6e90\u8c03\u5ea6\u662f\u5426\u6709\u6548\uff0c\u800c\u4e14 serverless \u670d\u52a1\u63d0\u4f9b\u5546\u5c4f\u853d\u4e86\u4e00\u4e9b\u4e2d\u95f4\u4ef6\uff0c\u4f60\u80fd\u638c\u63a7\u7684\u662f\u51fd\u6570\u8fd9\u4e9b\u670d\u52a1\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u53bb\u9a8c\u8bc1\u4f60\u51fd\u6570\u8c03\u7528\u7684\u4e00\u4e9b\u914d\u7f6e\uff0c\u6bd4\u5982\u8d85\u65f6\u914d\u7f6e\uff0c\u8fd8\u6709\u76f8\u5173\u7684\u4e00\u4e9b\u964d\u7ea7\u7b56\u7565\uff0c\u8fd9\u4e9b\u662f\u5426\u5408\u7406\u3002\u4ee5\u4e0a\u8fd9\u4e9b\u4e91\u539f\u751f\u67b6\u6784\u7a33\u5b9a\u6027\u76f8\u5173\u7684\u6311\u6218\uff0c\u518d\u6765\u770b\u4e91\u539f\u751f\u672c\u8eab\u7684\u7684\u7279\u70b9\uff0c\u8c08\u5230\u4e91\u539f\u751f\uff0c\u53ef\u4ee5\u8bf4\u4e91\u539f\u751f\u662f\u4e00\u4e2a\u7406\u5ff5\uff0c\u5305\u542b\u6211\u8fd9\u91cc\u5217\u4e3e\u7684\u4e91\u539f\u751f\u76f8\u5173\u7684\u6280\u672f\uff0c\u4f46\u662f\u4ed6\u4eec\u90fd\u6709\u76f8\u540c\u7684\u5171\u6027\uff0c\u6bd4\u5982\u5f39\u6027\u53ef\u6269\u5c55\u3001\u677e\u8026\u5408\u3001\u5bb9\u9519\u6027\u9ad8\u3001\u8fd8\u6709\u4e00\u4e9b\u6613\u4e8e\u7ba1\u7406\uff0c\u4fbf\u4e8e\u89c2\u5bdf\u8fd9\u4e9b\u7279\u6027\u3002\u6240\u4ee5\u8bf4\u5728\u4e91\u539f\u751f\u65f6\u4ee3\uff0c\u6df7\u6c8c\u5de5\u7a0b\u5bf9\u4e91\u539f\u751f\u7cfb\u7edf\u7684\u4ef7\u503c\u6211\u603b\u7ed3\u4e3a\u3002\\n\\n![](/img/blog/cloud-native-for-chaos-engineering.png)\\n\\n\u4e91\u539f\u751f\u65f6\u4ee3\u4e0b\uff0c\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u80fd\u63a8\u8fdb\u7cfb\u7edf\u201d\u4e91\u539f\u751f\u201c\u5316.\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u5c31\u662f\u80fd\u8ba9\u4f60\u7684\u7cfb\u7edf\u901a\u8fc7\u6df7\u6c8c\u5de5\u7a0b\u80fd\u8fbe\u5230\u4e91\u539f\u751f\u7684\u6781\u81f4\uff0c\u5c31\u662f\u521a\u624d\u63d0\u5230\u7684\u90a3\u4e9b\u7279\u70b9\uff0c\u5177\u6709\u975e\u5e38\u9ad8\u7684\u5bb9\u9519\u80fd\u529b\uff0c\u5177\u6709\u975e\u5e38\u9ad8\u7684\u5f39\u6027\u3002\u8fd9\u662f\u6211\u5bf9\u6df7\u6c8c\u5de5\u7a0b\u5728\u4e91\u539f\u751f\u67b6\u6784\u4e0b\u4ef7\u503c\u7684\u603b\u7ed3\u3002\\n\\n\u6211\u4eec\u518d\u6765\u770b\u4e00\u4e0b ChaosBlade \u5728\u4e91\u539f\u751f\u67b6\u6784\u4e0b\u573a\u666f\u7684\u5b9e\u73b0\u65b9\u6848\u3002\\n\\n![](/img/blog/cloud-native-for-chaos-engineering.png)\\n\\nChaosBlade \u901a\u8fc7 Operator \u521b\u5efa\u4e86\u81ea\u5b9a\u4e49\u63a7\u5236\uff0c\u901a\u8fc7 Helm \u7b49\u65b9\u5f0f\u53ef\u4e00\u952e\u5b89\u88c5\uff0c\u7528\u6765\u7ba1\u7406\u5b9e\u9a8c\u8d44\u6e90\u5bf9\u8c61\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u5230\u5de6\u8fb9\u8fd9\u4e9b\u58f0\u660e\u5f0f\u7684\u5b9e\u9a8c\u573a\u666f\u914d\u7f6e\uff0c\u5b83\u4e5f\u662f\u4e25\u683c\u9075\u5faa\u524d\u9762\u7684\u6df7\u6c8c\u5b9e\u9a8c\u6a21\u578b\uff0c\u914d\u7f6e\u975e\u5e38\u7684\u65b9\u4fbf\u3002\u8fd9\u91cc\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6bd4\u5982\u6211\u5bf9\u96c6\u7fa4\u4e2d\u7684\u8282\u70b9\u505a\u8d1f\u8f7d\u5b9e\u9a8c\uff0c\u8d1f\u8f7d 50%\uff0c\u90a3\u4e48\u6211\u5c31\u53ef\u4ee5\u5b9a\u4e49\u597d\u8fd9\u4e2a\u8d44\u6e90\uff0c\u901a\u8fc7 kubectl \u53bb\u6267\u884c\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528 chaosblade \u81ea\u8eab\u7684 blade \u547d\u4ee4\u53bb\u6267\u884c\u3002ChaosBlade Operator \u9664\u4e86\u5b9a\u4e49\u63a7\u5236\u5668\u4e4b\u5916\uff0c\u4f1a\u4ee5 daemonset \u7684\u65b9\u5f0f\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u90e8\u7f72\u4e00\u4e2a chaosblade-tool pod \u6765\u6267\u884c\u6df7\u6c8c\u5b9e\u9a8c\u3002\u4e0d\u540c\u7684\u5b9e\u9a8c\u573a\u666f\u5185\u90e8\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u540c\uff0c\u6bd4\u5982 Node \u5b9e\u9a8c\u573a\u666f\uff0c\u5176\u4e0a\u9762\u90e8\u7f72\u7684 chaosblade-tool \u5185\u90e8\u6267\u884c\u5373\u53ef\uff0c\u800c Container \u5185\u7684\u5b9e\u9a8c\u573a\u666f\uff0c\u63a7\u5236\u5668\u4f1a\u5c06 chaosblade \u5305\u62f7\u8d1d\u5230\u76ee\u6807 Container \u4e2d\u6267\u884c\u3002\u6280\u672f\u5b9e\u73b0\u6838\u5fc3\u7684\u8bdd\u5c31\u662f\u5c06\u6df7\u6c8c\u5b9e\u9a8c\u5b9a\u4e49\u4e3a K8s \u8d44\u6e90\uff0c\u4f20\u9012\u7ed9 operater \u6765\u8bc6\u522b\u5e76\u6267\u884c\u8d44\u6e90\u3002\u8fd9\u4e2a\u662f ChaosBlade \u7684\u4e00\u4e2a\u6574\u4f53\u7684\u5b9e\u9a8c\u65b9\u6848\u3002ChaosBlade \u975e\u5e38\u53cb\u597d\u7684\u652f\u6301 K8s \u5b9e\u9a8c\u573a\u666f\uff0c\u76ee\u524d\u5305\u542b Node\u3001Pod\u3001Container \u8d44\u6e90\u573a\u666f\u3002\u6211\u4eec\u6765\u770b\u5177\u4f53\u7684\u4e00\u4e2a\u6848\u4f8b\u3002\\n\\n![](/img/blog/chaosblade-accomplish-for-cloud-native.png)\\n\\n\u8fd9\u4e2a\u4f8b\u5b50\u662f\u968f\u673a\u5220\u9664\u4e1a\u52a1 Pod\uff0c\u7136\u540e\u9a8c\u8bc1\u4e1a\u52a1\u7684\u7a33\u5b9a\u6027\uff0c\u53f3\u8fb9\u662f\u5bf9\u5b9e\u9a8c\u573a\u666f yaml \u63cf\u8ff0\uff0c\u8fd9\u91cc\u7684 case \u662f\u968f\u673a\u7b5b\u9009\u5b9e\u4f8b\u8fdb\u884c\u5220\u9664\uff0c\u6bcf\u4e00\u4e2a\u670d\u52a1\u53ea\u6740\u4e00\u53f0\u5b9e\u4f8b\uff0c\u901a\u8fc7 system=demo \u6807\u7b7e\u968f\u673a\u7684\u7b5b\u9009\u8fd9\u4e9b\u670d\u52a1\u5b9e\u4f8b\uff0c\u7136\u540e\u6307\u5b9a\u5220\u9664\u7684\u6bcf\u4e2a\u670d\u52a1 Pod \u5b9e\u4f8b\u6570\u91cf\u3002\u53ef\u4ee5\u770b\u5230\u6211\u8fd9\u8fb9\u7684\u76d1\u63a7\u6307\u6807\u662f\u4e1a\u52a1\u6307\u6807\uff0c\u5c31\u662f\u4e0b\u65b9\u7684\u9875\u9762\u622a\u56fe\uff0c\u53e6\u4e00\u4e2a\u662f Pod \u6570\u3002\u8fd9\u91cc\u7684\u671f\u671b\u5047\u8bbe\u662f\u4e1a\u52a1\u4e0d\u53d7\u5f71\u54cd\uff0cPod \u7684\u526f\u672c\u6570\u5728\u9884\u671f\u4e4b\u5185\u3002\u8fd9\u662f\u4e00\u4e2a\u5b9e\u9a8c\u5047\u8bbe\u3002\u6211\u4eec\u6765\u770b\u5b9e\u9a8c\u7684\u7ed3\u679c\u3002\u6211\u6267\u884c\u5b8c\u5b9e\u9a8c\u4e4b\u540e\uff0c\u6211\u901a\u8fc7\u67e5\u8be2 Pod \u6765\u9a8c\u8bc1\uff0c\u7136\u540e\u5927\u5bb6\u53ef\u4ee5\u770b\u5230\u6bcf\u4e00\u7c7b\u670d\u52a1\uff0c\u5b83\u4f1a\u88ab\u5220\u6389\u4e00\u4e2a Pod \u5b9e\u4f8b\uff0c\u7136\u540e\u4f1a\u88ab K8s \u91cd\u65b0\u62c9\u8d77\u3002\u4f46\u662f\u5220\u4e0d\u662f\u6211\u4eec\u7684\u76ee\u7684\uff0c\u6df7\u6c8c\u5de5\u7a0b\u6709\u4e00\u70b9\u975e\u5e38\u91cd\u8981\uff0c\u5c31\u662f\u6211\u4eec\u505a\u6545\u969c\u6f14\u7ec3\u7684\u76ee\u7684\u4e0d\u662f\u89e6\u53d1\u6545\u969c\uff0c\u6211\u4eec\u76ee\u7684\u662f\u901a\u8fc7\u6545\u969c\u6765\u9a8c\u8bc1\u7cfb\u7edf\u7684\u67b6\u6784\u7684\u7f3a\u9677\uff0c\u53d1\u73b0\u95ee\u9898\u5e76\u8fed\u4ee3\u4fee\u590d\u8fd9\u4e9b\u7f3a\u9677\uff0c\u6765\u63d0\u9ad8\u7cfb\u7edf\u7684\u97e7\u6027\u3002\u6240\u4ee5\u8bf4\u6211\u4eec\u8fd9\u8fb9\u8981\u53bb\u9a8c\u8bc1\u8fd9\u4e2a\u7ed3\u679c\u3002\u8fd9\u8fb9\u662f\u62ff K8s \u5b98\u65b9\u7684\u4e00\u4e2a guestbook \u8fd9\u4e2a demo \u53bb\u505a\u7684\u6f14\u793a\uff0c\u90a3\u4e48\u6211\u6267\u884c\u5b8c\u8fd9\u4e2a\u5b9e\u9a8c\u4e4b\u540e\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u4e0b\u65b9\u622a\u56fe\uff0c\u6574\u4e2a\u5b9e\u9a8c\u7684\u524d\u540e\u7684\u9875\u9762\u5c55\u793a\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u4e4b\u524d\u63d0\u4ea4\u7684\u6570\u636e\u4e0d\u5b58\u5728\u4e86\u3002\u90a3\u4e48\u8fd9\u4e2a demo \u5c31\u5b58\u5728\u6570\u636e\u6301\u4e45\u5316\u9ad8\u53ef\u7528\u7684\u95ee\u9898\u3002\u6211\u540e\u9762\u5206\u6790\u4e86\u4e00\u4e0b\uff0c\u5b83\u4e3a\u4ec0\u4e48\u4f1a\u9020\u6210\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u5982\u679c\u5220\u9664\u6389 master \u4e4b\u540e\uff0c\u5b83\u6ca1\u6709\u505a\u6570\u636e\u6301\u4e45\u5316\u5b58\u50a8\uff0c\u4f60\u524d\u9762\u63d0\u4ea4\u7684\u8fd9\u4e9b\u6570\u636e\u5c31\u4f1a\u4e22\u5931\u3002\u5b83\u4f1a\u628a\u6570\u636e\u540c\u6b65\u5230 slave \u8282\u70b9\uff0c\u7531\u4e8e\u6ca1\u6709\u6570\u636e\uff0c\u5b83\u4f1a\u8986\u76d6\u6389\u539f\u6709\u4fdd\u5b58\u7684\u8fd9\u4e9b\u6570\u636e\u3002\u6240\u4ee5\u8bf4\u5927\u5bb6\u901a\u8fc7\u8fd9\u4e2a case \u53ef\u4ee5\u770b\u5230\uff0c\u968f\u673a\u6740 Pod \u53bb\u53ef\u4ee5\u9a8c\u8bc1\u4f60\u6574\u4e2a\u7684\u4e1a\u52a1\u7684\u7a33\u5b9a\u6027\u548c\u5bb9\u9519\u80fd\u529b\uff0c\u8fd9\u4e2a case \u662f\u4e0d\u7b26\u5408\u6211\u4eec\u9884\u671f\u7684\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u540e\u9762\u8981\u53bb\u63a8\u52a8\u4e1a\u52a1\uff0c\u53bb\u4fee\u590d\uff0c\u53bb\u5b8c\u5584\u8fd9\u4e2a\u95ee\u9898\u3002\u524d\u9762\u662f\u5bf9 ChaosBlade \u7684\u6574\u4f53\u4ecb\u7ecd\uff0c\u5305\u62ec\u4ec0\u4e48\u662f ChaosBlade\uff0cChaosBlade \u7684\u6613\u7528\u6027\uff0cChaosBlade \u652f\u6301\u54ea\u4e9b\u573a\u666f\uff0cChaosBlade \u7684\u67b6\u6784\u8bbe\u8ba1\uff0c\u8fd8\u6709\u62ff\u5177\u4f53\u7684\u6848\u4f8b\u53bb\u8bb2\u6df7\u6c8c\u5de5\u7a0b\u7684\u4ef7\u503c\uff0c\u7136\u540e\u5305\u62ec ChaosBlade \u5728\u9762\u5411\u4e91\u539f\u751f\u7684\u7cfb\u7edf\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u53bb\u505a\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8bb2\u4e00\u4e0b\u6df7\u6c8c\u5b9e\u9a8c\u5e73\u53f0\u3002\u4e3a\u4ec0\u4e48\u8981\u505a\u5e73\u53f0\uff1f\u56e0\u4e3a\u524d\u9762\u4e5f\u63d0\u5230\u4e86\u6df7\u6c8c\u5b9e\u9a8c\u6267\u884c\u6b65\u9aa4\uff0c\u4f60\u6267\u884c\u6df7\u6c8c\u5de5\u7a0b\uff0c\u5f88\u91cd\u8981\u7684\u4e00\u70b9\u662f\u8981\u505a\u6301\u7eed\u5316\u9a8c\u8bc1\uff0c\u5982\u679c\u53ea\u662f\u5de5\u5177\u7684\u8bdd\uff0c\u90a3\u4e48\u4f60\u5f88\u96be\u53bb\u505a\u81ea\u52a8\u5316\u7684\u6301\u7eed\u9a8c\u8bc1\uff0c\u6240\u4ee5\u8bf4\u4f60\u9700\u8981\u4f7f\u7528\u5e73\u53f0\u3002\u8fd9\u91cc\u91cd\u70b9\u4ecb\u7ecd\u4e00\u4e0b\u963f\u91cc\u4e91 AHAS \u8fd9\u4e2a\u4e91\u4ea7\u54c1\u4e0b\u9762\u7684 AHAS Chaos \u6545\u969c\u6f14\u7ec3\u5e73\u53f0\u3002\u4f1a\u5148\u4ecb\u7ecd\u5e73\u53f0\u7684\u8bbe\u8ba1\u7406\u5ff5\uff0c\u7136\u540e\u62ff\u4e00\u4e2a\u6848\u4f8b\u53bb\u8bb2\u8be5\u5982\u4f55\u53bb\u4f7f\u7528\u3002\\n\\n![](/img/blog/ahas-chaos-design-concept.png)\\n\\n\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0b AHAS Chaos \u5e73\u53f0\u8bbe\u8ba1\u7406\u5ff5\u3002AHAS Chaos \u5177\u6709\u5f00\u653e\u6027\uff0c\u5b83\u53ef\u4ee5\u96c6\u6210\u548c\u88ab\u96c6\u6210\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u5c0f\u7a0b\u5e8f\u6765\u62d3\u5c55\uff0c\u53ef\u4ee5\u96c6\u6210\u522b\u7684\u670d\u52a1\uff0c\u6bd4\u5982\u4f60\u53ef\u4ee5\u8c03\u7528\u7b2c\u4e09\u65b9\u76d1\u63a7\uff0c\u6216\u8005\u4f60\u81ea\u8eab\u7684\u670d\u52a1\u6765\u505a\u4e00\u4e9b\u4e8b\u524d\u7684\u51c6\u5907\uff0c\u6216\u8005\u662f\u505a\u4e00\u4e9b\u7ed3\u679c\u9a8c\u8bc1\uff0c\u8fd9\u662f\u5b83\u7684\u96c6\u6210\u80fd\u529b\u3002\u5b83\u7684\u88ab\u96c6\u6210\u5c31\u662f\u5b83\u63d0\u4f9b\u4e00\u4e9b OpenAPI\uff0c\u4f60\u53ef\u4ee5\u57fa\u4e8e\u8fd9\u4e9b OpenAPI \u53bb\u67e5\u8be2\u3001\u521b\u5efa\u3001\u6267\u884c\u6df7\u6c8c\u5b9e\u9a8c\uff0c\u800c\u4e14\u4f60\u53ef\u4ee5\u57fa\u4e8e\u5b83\u53bb\u505a\u4e00\u4e9b\u81ea\u5df1\u4e1a\u52a1\u76f8\u5173\u7684\u4e00\u4e9b\u5904\u7406\u3002\u8fd9\u4e2a\u662f\u88ab\u96c6\u6210\u3002\u64cd\u4f5c\u7b80\u6d01\uff0c\u5b83\u628a\u6574\u4e2a\u7684\u524d\u9762\u63d0\u5230\u7684\u6df7\u6c8c\u5b9e\u9a8c\u6267\u884c\u7684\u6b65\u9aa4\uff0c\u5b83\u5206\u6210\u4e86\u56db\u4e2a\u9636\u6bb5\u3002\u7b2c\u4e00\u4e2a\u9636\u6bb5\u5c31\u662f\u51c6\u5907\u9636\u6bb5\uff0c\u6bd4\u5982\u6211\u53ef\u4ee5\u505a\u4e00\u4e9b\u4e8b\u60c5\u7684\u51c6\u5907\uff0c\u8fd8\u6709\u6267\u884c\u9636\u6bb5\uff0c\u5c31\u662f\u6267\u884c\u5b9e\u9a8c\u3002\u68c0\u67e5\u9636\u6bb5\u5c31\u662f\u505a\u9a8c\u8bc1\uff0c\u8fd8\u6709\u6062\u590d\u9636\u6bb5\u3002\u6240\u4ee5\u8bf4\u64cd\u4f5c\u662f\u975e\u5e38\u7b80\u6d01\u3002\u800c\u4e14\u524d\u9762\u63d0\u5230\u7684\u90a3\u4e9b\u5b9e\u9a8c\u573a\u666f\uff0c\u4f1a\u6709\u5f88\u591a\u53c2\u6570\uff0c\u90a3\u4e48\u4f60\u8981\u901a\u8fc7 ChaosBlade \u7684\u8bdd\uff0c\u4f60\u8981\u67e5\u8fd9\u4e2a\u547d\u4ee4\u5e2e\u52a9\u624d\u80fd\u770b\u5230\u8fd9\u4e9b\u5b9e\u9a8c\u53c2\u6570\u662f\u4ec0\u4e48\uff0c\u5e73\u53f0\u7684\u8bdd\u5b83\u4f1a\u81ea\u52a8\u89e3\u6790\u51fa\u8fd9\u4e2a\u53c2\u6570\u6765\u5c55\u793a\uff0c\u5e76\u6709\u8be6\u7ec6\u7684\u8bf4\u660e\uff0c\u4f60\u53ea\u9700\u8981\u4e0b\u62c9\u6846\u9009\u62e9\u6216\u81ea\u5df1\u586b\u5c31\u53ef\u4ee5\u4e86\uff0c\u5b83\u7684\u64cd\u4f5c\u975e\u5e38\u7b80\u6d01\u3002\u7f16\u6392\u7075\u6d3b\uff0c\u5b83\u5177\u6709\u62d6\u62fd\u7684\u4e00\u4e9b\u7f16\u6392\u80fd\u529b\u3002\u8fd8\u6709\u4e13\u5bb6\u7ecf\u9a8c\uff0c\u5c31\u662f\u6211\u4eec\u628a\u4e00\u4e9b\u6211\u4eec\u5185\u90e8\u7684\uff0c\u6216\u8005\u662f\u4e91\u4e0a\u7684\u4e00\u4e9b\u9ad8\u8003\u7528\u7684\u7ecf\u9a8c\uff0c\u4f1a\u901a\u8fc7\u5f15\u6f14\u7ec3\u6a21\u677f\u7684\u5f62\u5f0f\u7ed9\u63d0\u4f9b\u7ed9\u5927\u5bb6\uff0c\u5927\u5bb6\u53ef\u4ee5\u5957\u7528\u8fd9\u4e2a\u6a21\u677f\u6765\u8fdb\u884c\u76f8\u5173\u7684\u5b9e\u9a8c\u3002\u8fd9\u4e2a\u662f AHAS Chaos \u5e73\u53f0\u8bbe\u8ba1\u7406\u5ff5\u3002\u6211\u4eec\u518d\u6765\u770b\u4e00\u4e0b AHAS Chaos \u5e73\u53f0\u7684\u67b6\u6784\u8bbe\u8ba1\u3002\\n\\n![](/img/blog/chaos-architecture-design.png)\\n\\n\u8fd9\u4e2a\u662f AHAS Chaos \u5e73\u53f0\u67b6\u6784\u56fe\uff0c\u4f60\u53ef\u4ee5\u90e8\u7f72\u5728\u963f\u91cc\u4e91\u7684 ACK \u6216\u81ea\u5efa\u7684 K8s \u96c6\u7fa4\uff0c\u4ee5\u53ca ECS \u6216\u975e ECS\u3002\u57fa\u4e8e AHAS \u5e95\u5ea7\u8fd0\u884c\uff0c\u524d\u9762\u4e5f\u63d0\u5230\u4e86\uff0cAHAS Chaos \u6709\u5c0f\u7a0b\u5e8f\u7684\u80fd\u529b\uff0c\u4f60\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6269\u5c55\uff0c\u5b83\u5e95\u5c42\u96c6\u6210\u4e86 ChaosBlade\uff0c\u5177\u6709 ChaosBlade \u8fd9\u4e9b\u4e30\u5bcc\u7684\u573a\u666f\u3002\u5728\u5f80\u4e0a\u5e73\u53f0\u6a21\u5757\uff0c\u524d\u9762\u4e5f\u63d0\u5230\u4e86\u5b83\u7684\u6f14\u7ec3\u7ba1\u7406\uff0c\u6f14\u7ec3\u8fd0\u884c\uff0c\u8fd8\u6709\u6f14\u7ec3\u7a7a\u95f4\u3001\u6f14\u7ec3\u8ba1\u5212\u3001\u6f14\u7ec3\u62a5\u8868\u7b49\uff0c\u8fd9\u4e9b\u5e73\u53f0\u90fd\u662f\u63d0\u4f9b\u529f\u80fd\u3002\u7136\u540e\u5b83\u7684\u5f00\u653e\u5f0f\u7684\u80fd\u529b\uff0c\u5b83\u5f00\u653e openAPI\uff0c\u4f60\u53ef\u4ee5\u57fa\u4e8e\u8fd9\u4e2a\u5e73\u53f0\u53bb\u6784\u5efa\u81ea\u5df1\u7684\u5e73\u53f0\uff0c\u6bd4\u5982\u8fd9\u91cc\u63d0\u5230\u7684\u963f\u91cc\u5df4\u5df4\u76ee\u524d\u7684\u6f14\u7ec3\uff0c\u7b2c\u4e00\u4e2a\u65e5\u5e38\u6f14\u7ec3\uff0c\u5c31\u662f\u4f60\u53ef\u4ee5\u505a\u4e00\u4e9b\u670d\u52a1\u7684\u65e5\u5e38\u6f14\u7ec3\uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u4ee5\u505a\u7a81\u88ad\uff0c\u6240\u8c13\u7a81\u88ad\u7684\u8bdd\u5c31\u662f\u5728\u4e0d\u901a\u77e5\u4e1a\u52a1\u65b9\u7684\u60c5\u51b5\u4e0b\uff0c\u53bb\u5bf9\u4ed6\u4eec\u7684\u7cfb\u7edf\u6ce8\u5165\u6545\u969c\uff0c\u6765\u9a8c\u8bc1\u4ed6\u4eec\u6545\u969c\u7684\u544a\u8b66\u3001\u6545\u969c\u7684\u54cd\u5e94\u901f\u5ea6\u3001\u6545\u969c\u7684\u6062\u590d\u80fd\u529b\uff0c\u8fd9\u662f\u7a81\u88ad\u6f14\u7ec3\u3002\u653b\u9632\u6f14\u7ec3\u7684\u8bdd\u5c31\u662f\u5927\u5bb6\u5546\u91cf\u597d\uff0c\u4e00\u8d77\u6765\u505a\u4e00\u4e2a\u653b\u9632\u5bf9\u6297\u3002\u8fd9\u662f\u653b\u9632\u6f14\u7ec3\u3002\u8fd8\u6709\u8d44\u635f\u6f14\u7ec3\u3001\u4e0a\u4e91\u6f14\u7ec3\u7b49\u3002\u8fd9\u662f AHAS Chaos \u5e73\u53f0\u7684\u67b6\u6784\u8bbe\u8ba1\u3002\u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a case \u6765\u5206\u4eab\u5e73\u53f0\u7684\u4f7f\u7528\u3002\\n\\n![](/img/blog/ahas-chaos-usecase.png)\\n\\n\u9762\u5411\u4e8e\u539f\u751f\u67b6\u6784\u7684\u4e00\u4e2a AHAS Chaos \u5e73\u53f0\u4f7f\u7528\u7684\u4f8b\u5b50\uff0c\u53f3\u4e0b\u89d2\u7684\u8bdd\u662f\u5ba0\u7269\u5546\u5e97\u7684 Demo\uff0c\u53f3\u4e0a\u65b9\u662f\u8fd9\u4e2a Demo \u7684\u67b6\u6784\u62d3\u6251\u56fe\uff0c\u662f\u57fa\u4e8e AHAS \u4ea7\u54c1\u67b6\u6784\u611f\u77e5\u7684\u80fd\u529b\uff0c\u6b64\u4ea7\u54c1\u4e00\u952e\u5b89\u88c5\uff0c\u5b89\u88c5\u5b8c\u4e4b\u540e\uff0c\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u5b83\u5c31\u4f1a\u81ea\u52a8\u611f\u77e5\u51fa\u6574\u4e2a\u7cfb\u7edf\u5e94\u7528\u7684\u67b6\u6784\u62d3\u6251\u56fe\uff0c\u8fd8\u6709\u975e\u5e38\u8be6\u7ec6\u7684\u8fdb\u7a0b\u3001\u7f51\u7edc\u3001\u673a\u5668\u3001\u5bb9\u5668\u7b49\u4fe1\u606f\u3002\u6240\u4ee5\u8bf4\u8fd9\u8fb9\u7684\u8bdd\uff0c\u6211\u901a\u8fc7 AHAS \u67b6\u6784\u611f\u77e5\u53bb\u505a\u4e00\u4e2a\u6570\u636e\u5e93\u5ef6\u8fdf\u5b9e\u9a8c\uff0c\u9a8c\u8bc1 Pod \u7684\u6c34\u5e73\u6269\u5bb9\u80fd\u529b\u3002Demo \u8fd0\u884c\u5728\u963f\u91cc\u4e91 ACK \u4e0a\uff0c\u5bf9 provider Pod \u6570\u636e\u5e93\u505a\u7f51\u7edc\u5ef6\u8fdf\u5b9e\u9a8c\uff0c\u7136\u540e\u53bb\u9a8c\u8bc1\u9884\u671f\u3002\u53d1\u751f\u4e86\u7f51\u7edc\u5ef6\u8fdf\uff0c\u4e00\u4e2a\u5177\u5907\u5bb9\u9519\u80fd\u529b\u7684\u7cfb\u7edf\uff0c\u5b83\u4f1a\u6c34\u5e73\u6269\u5c55\u65b0\u7684 Pod\u3002\u56e0\u4e3a\u6570\u636e\u5e93\u5ef6\u8fdf\u4e4b\u540e\uff0cRT \u4f1a\u5347\u9ad8\uff0cRT \u5347\u9ad8\u4e4b\u540e\u5c31\u4f1a\u5f71\u54cd\u7528\u6237\uff0c\u90a3\u4e48\u4e00\u4e2a\u5bb9\u9519\u7684\u4e00\u4e2a\u97e7\u6027\u6bd4\u8f83\u597d\u7684\u7cfb\u7edf\uff0c\u5b83\u4f1a\u6c34\u5e73\u6269\u5c55 Pod\uff0c\u6765\u964d\u4f4e\u8fd9\u4e2a\u5ef6\u8fdf\u7684\u8d1f\u8f7d\uff0c\u628a\u539f\u6709 Pod \u9694\u79bb\u6216\u8005\u662f\u5220\u9664\u6389\u3002\u6240\u4ee5\u76d1\u63a7\u6307\u6807\u5c31\u662f RT \u548c Pod \u6570\uff0c\u6211\u671f\u671b\u7684\u5047\u8bbe\u662f RT \u4f1a\u77ed\u6682\u7684\u5347\u9ad8\uff0c\u4f46\u662f\u5f88\u5feb\u4f1a\u6062\u590d\u3002\u5de6\u4e0b\u89d2\u662f AHAS Chaos \u5e73\u53f0\u9875\u9762\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u5230\uff0c\u901a\u8fc7\u5e73\u53f0\u53ef\u4ee5\u628a\u8fd9\u4e9b\u53c2\u6570\u66b4\u9732\u51fa\u6765\uff0c\u4f60\u53ea\u9700\u8981\u53bb\u505a\u7b80\u5355\u7684\u914d\u7f6e\u5c31\u53ef\u4ee5\u4e86\uff0c\u65e0\u9700\u53bb\u5199 Yaml \u6587\u4ef6\u3002\u5e73\u53f0\u8fd8\u63d0\u4f9b\u4e86\u6f14\u7ec3\u7f16\u6392\u548c\u6f14\u7ec3\u8ba1\u5212\uff0c\u4f60\u53ea\u9700\u8981\u4fdd\u5b58\u8fd9\u4e2a\u5b9e\u9a8c\uff0c\u70b9\u51fb\u7acb\u5373\u8fd0\u884c\uff0c\u5c31\u53ef\u4ee5\u65b9\u4fbf\u7684\u53bb\u6267\u884c\u5b9e\u9a8c\uff0c\u4f60\u53ef\u4ee5\u7ed3\u5408\u67b6\u6784\u611f\u77e5\u9a8c\u8bc1 Pod \u5bb9\u5668\u7684\u53d8\u5316\u3002\u8fd9\u662f\u5bf9 AHAS Chaos \u6545\u969c\u6f14\u7ec3\u5e73\u53f0\u7684\u4ecb\u7ecd\u3002\\n\\n![](/img/blog/chaosblade-Summarize.png)\\n\\n\u53f3\u4e0a\u65b9\u7684\u56fe\u7247\u662f ChaosBlade \u7684\u5f00\u6e90\u8ba8\u8bba\u7fa4\u548c\u5e94\u7528\u9ad8\u53ef\u7528\u670d\u52a1\uff08AHAS\uff09\u7684\u4ea4\u6d41\u7fa4\uff0c\u8fd9\u4e24\u4e2a\u90fd\u662f\u9489\u9489\u7fa4\u3002ChaosBlade \u7684\u4e00\u4e9b\u6280\u672f\u6587\u6863\u4e5f\u90fd\u4f1a\u5728\u7fa4\u91cc\u5206\u4eab\uff0c\u5173\u4e8e AHAS \u7684\u95ee\u9898\u53ef\u4ee5\u5728\u7fa4\u91cc\u54a8\u8be2\u3002\\n\\n\u4ee5\u4e0a\u662f\u6211\u5bf9\u4eca\u5929\u5206\u4eab\u7684\u603b\u7ed3\u3002\u57fa\u4e8e\u5b9e\u9a8c\u6a21\u578b\u5b9e\u73b0\u7684 ChaosBlade \u4e0d\u4ec5\u573a\u666f\u4e30\u5bcc\uff0c\u800c\u4e14\u4f7f\u7528\u7b80\u5355\uff0c\u5f88\u53cb\u597d\u7684\u652f\u6301\u4e91\u539f\u751f\u573a\u666f\u3002\u5982\u679c\u4f01\u4e1a\u60f3\u53bb\u8bd5\u7528\u6216\u8005\u662f\u843d\u5730\u6df7\u6c8c\u5de5\u7a0b\u7684\u8bdd\uff0cAHAS Chaos \u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\\n\\n\u4ee5\u4e0a\u5c31\u662f\u6211\u8fd9\u6b21\u7684\u5206\u4eab\uff0c\u8c22\u8c22\u5927\u5bb6\u3002"},{"id":"/2019/07/03/chaosblade-chaos-engineering-tools","metadata":{"permalink":"/en/blog/2019/07/03/chaosblade-chaos-engineering-tools","editUrl":"https://github.com/chaosblade-io/chaosblade-website/edit/master/blog/2019-07-03-chaosblade-chaos-engineering-tools.md","source":"@site/blog/2019-07-03-chaosblade-chaos-engineering-tools.md","title":"Chaosblade, \u963f\u91cc\u4e00\u4e2a\u8d85\u7ea7\u725b\u903c\u7684\u6df7\u6c8c\u5b9e\u9a8c\u5b9e\u65bd\u5de5\u5177","description":"\u8f6c\u81ea\uff1ahttps://juejin.cn/post/6844903879814053901","date":"2019-07-03T00:00:00.000Z","formattedDate":"July 3, 2019","tags":[{"label":"chaosblade","permalink":"/en/blog/tags/chaosblade"}],"readingTime":13.42,"hasTruncateMarker":true,"authors":[{"name":"1\u70b925","url":"https://juejin.cn/user/4353721774901806","imageURL":"https://p3-passport.byteimg.com/img/user-avatar/023f14b3a5377f09b98af09696e3c6ac~180x180.awebp"}],"frontMatter":{"title":"Chaosblade, \u963f\u91cc\u4e00\u4e2a\u8d85\u7ea7\u725b\u903c\u7684\u6df7\u6c8c\u5b9e\u9a8c\u5b9e\u65bd\u5de5\u5177","tags":["chaosblade"],"author":"1\u70b925","author_url":"https://juejin.cn/user/4353721774901806","author_image_url":"https://p3-passport.byteimg.com/img/user-avatar/023f14b3a5377f09b98af09696e3c6ac~180x180.awebp","hide_table_of_contents":false},"prevItem":{"title":"ChaosBlade\uff1a\u4e91\u539f\u751f\u67b6\u6784\u4e0b\u7684\u6df7\u6c8c\u5de5\u7a0b\u63a2\u7d22\u548c\u5b9e\u8df5","permalink":"/en/blog/2019/10/17/chaosblade-cloud-native"}},"content":"> \u8f6c\u81ea\uff1ahttps://juejin.cn/post/6844903879814053901\\n> \u6765\u6e90\uff1a\u7a00\u571f\u6398\u91d1\\n\\n# Chaosblade\u662f\u4ec0\u4e48\uff1f\\n\\nChaosblade\u662f\u9075\u5faa\u6df7\u6c8c\u5de5\u7a0b\uff08Chaos Engineering\uff09\u539f\u7406\u7684\u5b9e\u9a8c\u5de5\u5177\uff0c\u7528\u4e8e\u6a21\u62df\u5e38\u89c1\u7684\u6545\u969c\u573a\u666f\uff0c\u5e2e\u52a9\u63d0\u5347\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u53ef\u6062\u590d\u6027\u548c\u5bf9\u6545\u969c\u7684\u5bb9\u9519\u6027\u3002\\nChaosblade\u662f\u5efa\u7acb\u5728\u963f\u91cc\u5df4\u5df4\u8fd1\u5341\u5e74\u6545\u969c\u6d4b\u8bd5\u548c\u6f14\u7ec3\u5b9e\u8df5\u57fa\u7840\u4e0a\uff0c\u7ed3\u5408\u4e86\u96c6\u56e2\u5404\u4e1a\u52a1\u7684\u6700\u4f73\u521b\u610f\u548c\u5b9e\u8df5\u3002\\n\u76ee\u524d\u652f\u6301\u7684\u6f14\u7ec3\u573a\u666f\u6709\u64cd\u4f5c\u7cfb\u7edf\u7c7b\u7684 CPU\u3001\u78c1\u76d8\u3001\u8fdb\u7a0b\u3001\u7f51\u7edc\uff0cJava \u5e94\u7528\u7c7b\u7684 Dubbo\u3001MySQL\u3001Servlet \u548c\u81ea\u5b9a\u4e49\u7c7b\u65b9\u6cd5\u5ef6\u8fdf\u6216\u629b\u5f02\u5e38\u7b49\u4ee5\u53ca\u6740\u5bb9\u5668\u3001\u6740 Pod\uff0c\u5177\u4f53\u53ef\u6267\u884c blade create -h \u67e5\u770b\u3002\\n\u597d\u4e86\uff0c\u4e0a\u9762\u7684\u4ecb\u7ecd\u662f\u4eceChaosblade\u7684github\u4e3b\u9875\u6284\u7684\u3002\\ngithub\u4e3b\u9875\u5730\u5740\uff1a[chaosblade-github](https://github.com/chaosblade-io/chaosblade)\\n\u8bf4\u767d\u4e86\uff0cChaosblade\u662f\u4e00\u4e2a\u6545\u969c\u6a21\u62df\u5de5\u5177\uff0c\u53ef\u4ee5\u6a21\u62df\u6bd4\u5982\u670d\u52a1\u5668CPU\u6ee1\u4e86\u3001\u78c1\u76d8\u6ee1\u4e86\u3001\u7f51\u7edc\u6162\u3001Dubbo\u67d0\u4e2a\u670d\u52a1\u54cd\u5e94\u65f6\u95f4\u957f\u3001jvm\u4e2d\u67d0\u4e2a\u65b9\u6cd5\u629b\u51fa\u5f02\u5e38\u3001\u8c03\u7528Mysql\u6162\u7b49\u7b49\u3002\u6240\u4ee5\u8fd9\u4e2a\u5de5\u5177\u5bf9\u4e8e\u5927\u516c\u53f8\u6765\u8bf4\u662f\u975e\u5e38\u975e\u5e38\u6709\u7528\u7684\uff0c\u56e0\u4e3a\u53ef\u4ee5\u63d0\u524d\u6a21\u62df\u51fa\u5404\u79cd\u5404\u6837\u7684\u6545\u969c\uff0c\u4ece\u800c\u4fdd\u8bc1\u7cfb\u7edf\u7684\u9ad8\u53ef\u7528\u4e0e\u7a33\u5b9a\u3002\\n\x3c!--truncate--\x3e\\n\\n# Chaosblade\u600e\u4e48\u7528\uff1f\\n\\n\u7528\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u5206\u4e3a\u4e24\u6b65\uff1a\\n\\n1. \u4e0b\u8f7d\u538b\u7f29\u5305\u5e76\u89e3\u538b\uff1agithub.com/chaosblade-\u2026\\n2. \u89e3\u538b\u4e4b\u540e\u7684\u6587\u4ef6\u4e2d\u6709\u4e00\u4e2ablade\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8fd9\u5c31\u662fChaosblade\u63d0\u4f9b\u7684\u5ba2\u6237\u7aef\u5de5\u5177\uff0c\u6211\u4eec\u4e3b\u8981\u4f7f\u7528\u8fd9\u4e2a\u5de5\u5177\u6765\u8fdb\u884c\u6545\u969c\u6a21\u62df\u3002\\n\\n\u5173\u4e8eblade\u7684\u5404\u79cd\u53c2\u6570\u8be6\u89e3\uff0c\u5927\u5bb6\u8fd8\u662f\u53bbgithub\u4e3b\u9875\u4e0a\u53bb\u770b\u5427\uff0c\u8fd9\u91cc\u4e0d\u4ecb\u7ecd\u4e86\uff0c\u6211\u4e3b\u8981\u60f3\u7ed9\u5927\u5bb6\u770b\u4e00\u4e0b\u6545\u969c\u6a21\u62df\u7684\u5177\u4f53\u4f7f\u7528\u4ee5\u53ca\u6548\u679c\u3002\\n\u63a5\u4e0b\u6765\u4f1a\u4ecb\u7ecdChaosblade\u516d\u4e2a\u4f7f\u7528\u573a\u666f\uff1a\\n\\n- \u6a21\u62df\u670d\u52a1\u5668CPU\u7206\u6ee1\\n- \u6a21\u62df\u670d\u52a1\u5668\u78c1\u76d8\u7206\u6ee1\\n- \u6a21\u62df\u8c03\u7528\u67d0\u4e2aDubbo\u670d\u52a1\u8d85\u65f6\\n- \u6a21\u62dfJVM\u4e2d\u67d0\u4e2a\u65b9\u6cd5\u629b\u51fa\u5f02\u5e38\u6216\u8005\u4fee\u6539\u65b9\u6cd5\u8fd4\u56de\u503c\\n- \u6a21\u62df\u8c03\u7528Mysql\u8d85\u65f6\u6216\u51fa\u73b0\u5f02\u5e38\\n- \u6a21\u62df\u670d\u52a1\u5668\u7f51\u7edc\u7f13\u6162\\n\\n## \u573a\u666f\u4e00\uff1a\u670d\u52a1\u5668CPU\u7206\u6ee1\\n\\n\u6545\u969c\u6f14\u7ec3\u524d\u7cfb\u7edf\u7684cpu\u72b6\u6001\uff0c\u76f4\u63a5\u4f7f\u7528 `top -o CPU` \u547d\u4ee4\u67e5\u770b\uff1a\\n\\n![top](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/7/3/16bb7fde31ca7131~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\\n\u8fdb\u884c\u6545\u969c\u6f14\u7ec3\uff1a\\n```\\n$ ./blade create cpu fullload\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"a0682a98d0d7d900\\"}\\n```\\n\\n\u547d\u4ee4\u6267\u884c\u540e\u8fd4\u56de\u6210\u529f\u5219\u8bc1\u660e\u6545\u969c\u6f14\u7ec3\u6210\u529f\uff0c\u518d\u67e5\u770b`top -o CPU` \u547d\u4ee4\uff1a\\n![top](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/7/3/16bb7fde32271a1d~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp)\\n\u6211\u4eec\u901a\u8fc7\u7ed3\u679c\u53ef\u4ee5\u770b\u51fa\u6765Chaosblade\u5e94\u8be5\u5c31\u662f\u8ba9\u81ea\u5df1\u53bb\u5360\u6ee1cpu\u4ece\u800c\u4f7f\u670d\u52a1\u5668\u7684cpu\u7206\u6ee1\u3002\\n## \u573a\u666f\u4e8c\uff1a\u670d\u52a1\u5668\u78c1\u76d8\u7206\u6ee1\\n\\n\u5982\u679c\u8981\u6a21\u62df\u78c1\u76d8\u7206\u6ee1\uff0c\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u5728\u67d0\u4e2a\u6587\u4ef6\u5939\u4e2d\u53bb\u751f\u6210\u4e00\u4e2a\u5f88\u5927\u7684\u6587\u4ef6\u5c31\u884c\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u521b\u5efa\u4e00\u4e2a/bladedisk\u6587\u4ef6\u5939\u3002\\n\u8fdb\u884c\u6545\u969c\u6f14\u7ec3\u524d\uff0c/bladedisk\u6587\u4ef6\u5939\u7684\u5927\u5c0f\u4e3a\uff1a\\n```\\n$ du -sh /bladedisk/\\n  0B\\t/bladedisk/\\n```\\n\u8fdb\u884c\u6545\u969c\u6f14\u7ec3\uff0c\u6267\u884c\u4e00\u4e0b\u547d\u4ee4\uff1a\\n```\\n./blade create disk fill -d --mount-point /bladedisk --size 1024\\n```\\n\u6b63\u5e38\u60c5\u51b5\u4e0b\u4f1a\u5728/bladedisk\u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u4e00\u4e2achaos_filldisk.log.dat\u6587\u4ef6\u3002\u6b64\u6587\u4ef6\u7684\u5927\u5c0f\u4e3a1024\u4e2a\u5b57\u8282\u3002\\n\u6211\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u8bf4\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u56e0\u4e3a\u6211\u7528\u7684\u662fMax OX\u7cfb\u7edf\uff0c\u5728\u6267\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u65f6\u4f1a\u62a5\u9519\u3002\u5177\u4f53\u7684\u9519\u8bef\u5df2\u63d0\u4ea4github issues\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u5173\u6ce8\u4e00\u4e0b\uff0cissue\u5730\u5740\u3002\\n\\n> \u5c0f\u82b1\u7d6e\uff1a\u5728\u63d0\u4ea4issue\u65f6\uff0c\u6211\u7528\u7684\u4e2d\u6587\uff0c\u4f46\u662f\u88abchaosblade-bot\u81ea\u52a8\u7ffb\u8bd1\u4e3a\u4e86\u82f1\u6587\uff0c\u5f88\u5389\u5bb3\u3002\\n\\n\u90a3\u4e48\u5927\u5bb6\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u7cfb\u7edf\u4e2d\u8bd5\u8bd5\uff0c\u8fd9\u4e2aissue\u89e3\u51b3\u540e\uff0c\u6211\u4f1a\u5bf9\u6587\u7ae0\u8fdb\u884c\u66f4\u65b0\u540e\u8865\u5145\u3002\u5927\u5bb6\u8fd9\u91cc\u53ea\u9700\u8981\u77e5\u9053Chaosblade\u53ef\u4ee5\u6a21\u62df\u8fd9\u79cd\u573a\u666f\u4ee5\u53ca\u5bf9\u5e94\u7684\u539f\u7406\u5c31\u884c\u4e86\u3002\\n\\n## \u573a\u666f\u4e09\uff1a\u8c03\u7528\u67d0\u4e2aDubbo\u670d\u52a1\u8d85\u65f6\\n\\n\u5b98\u7f51\u7684Demo\u4e2d\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\uff1a\\n\\n* [dubbo-provider](https://link.juejin.cn/?target=https%3A%2F%2Fchaosblade.oss-cn-hangzhou.aliyuncs.com%2Fdemo%2Fdubbo-provider-1.0-SNAPSHOT.jar)\\n* [dubbo-consumer](https://link.juejin.cn/?target=https%3A%2F%2Fchaosblade.oss-cn-hangzhou.aliyuncs.com%2Fdemo%2Fdubbo-consumer-1.0-SNAPSHOT.jar)\\n\\n\u5927\u5bb6\u628a\u4e0a\u9762\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u548c\u670d\u52a1\u6d88\u8d39\u8005jar\u5305\u4e0b\u8f7d\u4e0b\u6765\u4e4b\u540e\uff0c\u8fdb\u5230\u4e0b\u8f7d\u76ee\u5f55\uff0c\u7136\u540e\u901a\u8fc7\u4e0b\u9762\u547d\u4ee4\u8fd0\u884c\u8d77\u6765\uff1a\\n```\\n# \u542f\u52a8 dubbo-provider\\nnohup java -Djava.net.preferIPv4Stack=true -Dproject.name=dubbo-provider -jar dubbo-provider-1.0-SNAPSHOT.jar > provider.nohup.log 2>&1 &\\n# \u7a0d\u7b49 2 \u79d2\uff0c\u7136\u540e\u542f\u52a8 dubbo-consumer\\nnohup java -Dserver.port=8080 -Djava.net.preferIPv4Stack=true -Dproject.name=dubbo-consumer -jar dubbo-consumer-1.0-SNAPSHOT.jar > consumer.nohup.log 2>&1 &\\n```\\n\\n> nohup\u662flinux\u4e2d\u7684\u547d\u4ee4\uff0c\u53ef\u4ee5\u8ba9java\u547d\u4ee4\u540e\u53f0\u8fd0\u884c\u3002\\n\\n\u8fd0\u884c\u8d77\u6765\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u8fdb\u884c\u670d\u52a1\u8c03\u7528\uff1a\\n```\\nhttp://localhost:8080/hello?msg=world\\n```\\n\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u8be5\u8bf7\u6c42\u4f1a\u5f88\u5feb\u7684\u5b8c\u6210\u5e76\u8fd4\u56de\uff1a\\n```\\n{\\n\\"date\\": \\"Wed Jul 03 16:33:10 CST 2019\\",\\n\\"msg\\": \\"Dubbo Service: Hello world\\"\\n}\\n```\\n\u8fdb\u884c\u6545\u969c\u6f14\u7ec3\uff1a\\n```\\n$ ./blade prepare jvm --process dubbo.consumer\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"5cdbc31f46a3d621\\"}\\n$ ./blade create dubbo delay --time 3000 --service com.alibaba.demo.HelloService --methodname hello --consumer --process dubbo.consumer\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"3e705e8babe8a86c\\"}\\n```\\n\\n\u4e0a\u9762\u7684\u547d\u4ee4\u4f1a\u4f7fconsumer\u5728\u8c03\u7528com.alibaba.demo.HelloService\u670d\u52a1\u7684hello\u65b9\u6cd5\u65f6\u589e\u52a03\u79d2\u7684\u5ef6\u65f6\u3002\u5f53\u6211\u4eec\u8bbf\u95ee\u4e0a\u9762\u8bbf\u95ee\u7684\u8def\u5f84\u65f6\u4f1a\u6bd4\u4e4b\u524d\u7b49\u5f85\u7684\u66f4\u4e45\u4e00\u70b9\u3002\\n\u5728\u5bf9dubbo\u8fdb\u884c\u6545\u969c\u6f14\u7ec3\u65f6\uff0c\u5176\u5b9e\u652f\u6301\u7684\u7ec6\u5206\u573a\u666f\u5f88\u591a\uff0c\u56e0\u4e3a\u5728dubbo\u4e2d\u5206\u4e3aconsumer\u548cprovider\u4e24\u79cd\u89d2\u8272\uff0c\u5f53consumer\u5728\u8c03\u7528provider\u65f6\uff0c\u6211\u4eec\u73b0\u5728\u60f3\u4f7f\u8fd9\u4e2a\u8bf7\u6c42\u589e\u52a0\u5ef6\u65f6\uff0c\u6211\u4eec\u65e2\u53ef\u4ee5\u5728provider\u7aef\u9488\u5bf9\u6307\u5b9a\u7684\u670d\u52a1\u589e\u52a0\u5ef6\u65f6\uff0c\u4e5f\u53ef\u4ee5\u5728consumer\u8c03\u7528\u65f6\u9488\u5bf9\u6307\u5b9a\u7684\u670d\u52a1\u8fdb\u884c\u5ef6\u65f6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7a0d\u5fae\u770b\u4e0b\u4e0a\u9762\u7684\u547d\u4ee4\uff0c\u5b83\u5176\u5b9e\u662f\u5728consumer\u8fdb\u884c\u63a7\u5236\u7684\uff0c\u547d\u4ee4\u4e5f\u662f\u652f\u6301\u5728provider\u7aef\u8fdb\u884c\u63a7\u5236\u7684\uff0c\u6211\u4eec\u8fd0\u884c\u4e00\u4e0b\u4ee5\u4e0b\u547d\u4ee4\uff1a\\n```\\nblade create dubbo delay --help\\n```\\n\u5c06\u770b\u5230\u5e2e\u52a9\u4e2d\u6709\u4e0b\u9762\u7684\u4fe1\u606f\uff1a\\n```\\nFlags:\\n      --appname string          The consumer or provider application name\\n      --consumer                To tag consumer role experiment.\\n      --effect-count string     The count of chaos experiment in effect\\n      --effect-percent string   The percent of chaos experiment in effect\\n  -h, --help                    help for delay\\n      --methodname string       The method name\\n      --offset string           delay offset for the time\\n      --process string          Application process name\\n      --provider                To tag provider experiment\\n      --service string          The service interface\\n      --time string             delay time (required)\\n      --timeout string          set timeout for experiment\\n      --version string          the service version\\n```\\n\u5176\u4e2d\u5c31\u6709`--consumer` \u548c`--provider` \uff0c\u8868\u793a\u7684\u5c31\u662f\u547d\u4ee4\u4e2d\u53ef\u4ee5\u63a7\u5236\u670d\u52a1\u8c03\u7528\u7684\u4e24\u7aef\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u60f3\u63a7\u5236provider\u7aef\uff0c\u60f3\u8ba9\u67d0\u4e2a\u63a5\u53e3\u88ab\u8c03\u7528\u65f6\u8d85\u65f6\u7684\u8bdd\uff0c\u662f\u5b8c\u5168\u53ef\u4ee5\u8fdb\u884c\u6545\u969c\u6f14\u7ec3\u7684\u3002\\n\u90a3\u4e48\u5173\u4e8e\u5e95\u5c42\u539f\u7406\u7684\u8bdd\uff0c\u9700\u8981\u5927\u5bb6\u5bf9Dubbo\u6bd4\u8f83\u4e86\u89e3\uff0cDubbo\u4e2d\u662f\u6709\u52a8\u6001\u914d\u7f6e\u529f\u80fd\u7684\uff0c\u6240\u4ee5Chaosblade\u5e94\u8be5\u4e5f\u662f\u5229\u7528\u4e86dubbo\u7684\u52a8\u6001\u914d\u7f6e\u529f\u80fd\u3002\\n## \u573a\u666f\u56db\uff1aJVM\u4e2d\u67d0\u4e2a\u65b9\u6cd5\u629b\u51fa\u5f02\u5e38\u6216\u8005\u4fee\u6539\u65b9\u6cd5\u8fd4\u56de\u503c\\n\\nChaosblade\u652f\u6301\u76f4\u63a5\u64cd\u4f5cjvm\u4e2d\u7684\u65b9\u6cd5\uff0c\u4f7f\u5b83\u629b\u51fa\u5f02\u5e38\u6216\u4fee\u6539\u5176\u8fd4\u56de\u503c\u3002\\n\u5148\u51c6\u5907\u4e00\u4e2aMockJvm\u7c7b\uff1a\\n```\\npackage com;\\nimport java.util.concurrent.TimeUnit;\\npublic class MockJvm {\\n    public String test() {\\n        return \\"test...\\";\\n    }\\n\\n    public static void main(String[] args) throws InterruptedException {\\n        MockJvm testJVM = new MockJvm();\\n\\n        while (true) {\\n            try {\\n                System.out.println(testJVM.test());\\n            } catch (Exception e) {\\n                System.out.println(e.getMessage());\\n            }\\n            TimeUnit.SECONDS.sleep(3);\\n        }\\n    }\\n}\\n```\\n\u8fd9\u4e2a\u7c7b\u4f1a\u6bcf\u9694\u4e09\u79d2\u8c03\u7528\u4e00\u4e0btest\u65b9\u6cd5\uff0c\u5e76\u6253\u5370\u51fa\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u5e76\u4e14\u5728\u6355\u83b7test\u65b9\u6cd5\u6240\u629b\u51fa\u7684\u5f02\u5e38\u8fdb\u884c\u6253\u5370\uff0ctest\u65b9\u6cd5\u9ed8\u8ba4\u8fd4\u56de\\"test\\"\u3002\u6211\u4eec\u8fd0\u884c\u8fd9\u4e2a\u7c7b\uff0c\u8ba9\u8fd9\u4e2a\u7c7b\u4e00\u76f4\u5728\u8fd0\u884c\u72b6\u6001\uff0c\u6b63\u5e38\u8fd0\u884c\u65f6\uff0c\u63a7\u5236\u53f0\u4f1a\u6253\u5370\u5982\u4e0b\uff1a\\n```\\ntest...\\ntest...\\ntest...\\ntest...\\n```\\n### \u65b9\u6cd5\u629b\u51fa\u5f02\u5e38\\n```\\n$ ./blade prepare jvm --process MockJvm\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"5ff98509d2334906\\"}\\n$ ./blade create jvm throwCustomException --process MockJvm --classname com.MockJvm --methodname test --exception java.lang.Exception\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"f9052478db2f7ffc\\"}\\n```\\n\u4e0a\u9762\u7684\u547d\u4ee4\u6a21\u62df\u4e86MockJvm\u8fdb\u7a0b\u4e0b\u7684com.MockJvm\u7c7b\u4e2d\u7684test\u65b9\u6cd5\u4f1a\u629b\u51fajava.lang.Exception\u5f02\u5e38\u3002\u4e00\u65e6\u8fd9\u4e2a\u547d\u4ee4\u6267\u884c\u6210\u529f\uff0c\u90a3\u4e48\u6211\u4eec\u4e0a\u9762\u4e00\u76f4\u5728\u8fd0\u884c\u7684\u4ee3\u7801\u63a7\u5236\u53f0\u5c06\u629b\u51fa\u5f02\u5e38\uff1a\\n```\\ntest...\\ntest...\\ntest...\\nchaosblade-mock-exception\\nchaosblade-mock-exception\\n```\\n\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u64a4\u56de\u521a\u521a\u7684\u573a\u666f\u6a21\u62df\uff1a\\n```\\n./blade destroy f9052478db2f7ffc // f9052478db2f7ffc\u3002\\n```\\n\u64a4\u56de\u4e4b\u540e\uff0c\u63a7\u5236\u53f0\u5c06\u6062\u590d\u6b63\u5e38\u7684\u6253\u5370\uff1a\\n```\\nchaosblade-mock-exception\\nchaosblade-mock-exception\\nchaosblade-mock-exception\\nchaosblade-mock-exception\\ntest...\\ntest...\\n```\\n### \u4fee\u6539\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\\n\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u4fee\u6539\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff1a\\n```\\n$ ./blade create jvm return --process MockJvm --classname com.MockJvm --methodname test --value hahaha...\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"9ffce12b1fdc2580\\"}\\n```\\n\u63a7\u5236\u53f0\u5c06\u6253\u5370\u51fa\uff1a\\n```\\ntest...\\ntest...\\ntest...\\nhahaha...\\nhahaha...\\nhahaha...\\n```\\n\u53ef\u4ee5\u770b\u5230\u6210\u529f\u4fee\u6539\u4e86test\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u3002\\n## \u573a\u666f\u4e94\uff1a\u8c03\u7528Mysql\u8d85\u65f6\u6216\u51fa\u73b0\u5f02\u5e38\\nChaosblade\u76ee\u524d\u652f\u6301Mysql\u573a\u666f\u5206\u4e3a\u8c03\u7528Mysql\u8d85\u65f6\u6216\u8005\u6267\u884c\u8bed\u53e5\u65f6\u51fa\u73b0\u5f02\u5e38\u3002\u4f46\u662f\u5b83\u662f\u5728JDBC\u8fd9\u4e00\u5c42\u8fdb\u884c\u63a7\u5236\u7684\uff0c\u5e76\u6ca1\u6709\u771f\u6b63\u7684\u53bb\u63a7\u5236mysql\u670d\u52a1\u7aef\u3002\\n\u8fd9\u91cc\u5148\u7528JDBC\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\uff1a\\n\\n```\\npackage com;\\n\\nimport java.sql.Connection;\\nimport java.sql.DriverManager;\\nimport java.sql.ResultSet;\\nimport java.sql.Statement;\\nimport java.time.LocalDateTime;\\nimport java.util.concurrent.TimeUnit;\\n\\npublic class JDBCConnection {\\n    public static String url_encrypt=\\"jdbc:mysql://127.0.0.1:3306/test?useSSL=false\\";\\n    public static String user=\\"root\\";\\n    public static String password=\\"Nice89163\\";\\n\\n    public static void main(String[] args) throws Exception\\n    {\\n        Class.forName(\\"com.mysql.jdbc.Driver\\");\\n        Connection conn  = DriverManager.getConnection(url_encrypt,user,password);\\n        Statement stmt= conn.createStatement();\\n\\n        while (true) {\\n            try {\\n                LocalDateTime before = LocalDateTime.now();\\n                ResultSet rs = stmt.executeQuery(\\"select * from t_test\\");\\n                LocalDateTime after = LocalDateTime.now();\\n                System.out.println(\\"\u6267\u884c\u65f6\u95f4\uff1a\\" + (after.getSecond() - before.getSecond()));\\n            } catch (Exception e) {\\n                System.out.println(e.getMessage());\\n            }\\n            TimeUnit.SECONDS.sleep(3);\\n        }\\n\\n    }\\n}\\n```\\n\u8fd9\u4e2aJDBCConnection\u7c7b\u76f4\u63a5\u4f7f\u7528JDBC\u6765\u6267\u884csql\uff0c\u4f9d\u8d56mysql-connector-java\u5bf9\u5e94\u7684jar\u3002\u8fd9\u91cc\u6211\u5728\u6d4b\u8bd5\u7684\u65f6\u5019\u53d1\u73b0\uff0c\u5982\u679c\u4f7f\u7528mysql-connector-java@5.1.47\u8fd9\u4e2a\u7248\u672c\u53ef\u4ee5\u6b63\u5e38\u7684\u8fdb\u884c\u6545\u969c\u6a21\u62df\uff0c\u5982\u679c\u4f7f\u7528mysql-connector-java@8.0.15\u7248\u672c\u5219\u4e0d\u80fd\u8fdb\u884c\u6b63\u5e38\u7684\u6545\u969c\u6a21\u62df\uff0c\u5177\u4f53\u539f\u56e0\u8fd8\u6ca1\u6709\u53bb\u67e5\u3002\\n\u8fd9\u4e2a\u6d4b\u8bd5\u7684\u529f\u80fd\u662f\u53bb\u8fdb\u884cselect\u67e5\u8be2\uff0c\u5e76\u4e14\u5982\u679c\u5728select\u7684\u65f6\u5019\u5982\u679c\u629b\u51fa\u5f02\u5e38\u4f1a\u88ab\u6355\u83b7\u5e76\u4e14\u8fdb\u884c\u6253\u5370\uff0c\u5e76\u4e14\u8fd8\u4f1a\u8ba1\u7b97select\u8bed\u53e5\u6267\u884c\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u3002\\n\u9996\u5148\u5c06\u4e0a\u9762\u7684\u7c7b\u8fd0\u884c\u8d77\u6765\uff0c\u63a7\u5236\u53f0\u5c06\u4e00\u76f4\u6253\u5370\u5982\u4e0b\uff1a\\n```\\n\u6267\u884c\u65f6\u95f4\uff1a0\\n\u6267\u884c\u65f6\u95f4\uff1a0\\n\u6267\u884c\u65f6\u95f4\uff1a0\\n```\\n### \u8c03\u7528Mysql\u629b\u51fa\u5f02\u5e38\\n\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5f00\u59cb\u6545\u969c\u6a21\u62df\uff1a\\n```\\n$ ./blade prepare jvm --process JDBCConnection\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"f278e66ddb1b4e11\\"}\\n$ ./blade create mysql throwCustomException --database test --host 127.0.0.1 --port 3306 --process JDBCConnection --sqltype select --table t_test --exception java.lang.Exception\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"ddd6799da50f9201\\"}\\n```\\n\u547d\u4ee4\u6267\u884c\u6210\u529f\u540e\uff0c\u63a7\u5236\u53f0\u5c06\u6253\u5370\u51fa\u5f02\u5e38\uff1a\\n```\\n\u6267\u884c\u65f6\u95f4\uff1a0\\n\u6267\u884c\u65f6\u95f4\uff1a0\\n\u6267\u884c\u65f6\u95f4\uff1a0\\nUnexpected exception encountered during query.\\nUnexpected exception encountered during query.\\n```\\n\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u64a4\u56de\u521a\u521a\u7684\u573a\u666f\u6a21\u62df\uff1a\\n```\\n./blade destroy ddd6799da50f9201 \\n```\\n\u64a4\u56de\u4e4b\u540e\uff0c\u63a7\u5236\u53f0\u5c06\u6062\u590d\u6b63\u5e38\u7684\u6253\u5370\uff1a\\n```\\nUnexpected exception encountered during query.\\nUnexpected exception encountered during query.\\nUnexpected exception encountered during query.\\n\u6267\u884c\u65f6\u95f4\uff1a0\\n\u6267\u884c\u65f6\u95f4\uff1a0\\n```\\n### \u8c03\u7528Mysql\u589e\u52a0\u5ef6\u8fdf\\n\u76f4\u63a5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5c06\u4f7f\u5f97\u5728\u6267\u884cselect\u65f6\u589e\u52a04\u79d2\u7684\u5ef6\u65f6\uff0c\u6ce8\u610f\u90fd\u662f\u5728JDBC\u5c42\u63a7\u5236\u7684\u3002\\n```\\n$ ./blade create mysql delay --database test --host 127.0.0.1 --port 3306 --process JDBCConnection --sqltype select --table t_test --time 4000\\n{\\"code\\":200,\\"success\\":true,\\"result\\":\\"8e5b35e76098caab\\"}\\n```\\n\u547d\u4ee4\u6267\u884c\u5b8c\u6210\u540e\uff0c\u63a7\u5236\u53f0\u5c06\u6253\u5370\u51fa\uff1a\\n```\\n\u6267\u884c\u65f6\u95f4\uff1a0\\n\u6267\u884c\u65f6\u95f4\uff1a0\\n\u6267\u884c\u65f6\u95f4\uff1a4\\n\u6267\u884c\u65f6\u95f4\uff1a4\\n\u6267\u884c\u65f6\u95f4\uff1a4\\n```\\n## \u573a\u666f\u516d\uff1a\u670d\u52a1\u5668\u7f51\u7edc\u7f13\u6162\\nChaosblade\u4e5f\u53ef\u4ee5\u5bf9\u7f51\u7edc\u8fdb\u884c\u63a7\u5236\uff0c\u6bd4\u5982\u8fd0\u884c\u4e0b\u9762\u547d\u4ee4\u53ef\u4ee5\u9650\u5236\u7ecf\u8fc7eth0\u7f51\u5361\u7684\u7f51\u7edc\u90fd\u4f1a\u5ef6\u8fdf3\u79d2\uff1a\\n```\\n./blade create network delay --interface eth0 --time 3000\\n```\\n\u4e0d\u8fc7Mac\u7cfb\u7edf\u8fd8\u4e0d\u652f\u6301\u8fd9\u4e2a\u573a\u666f\uff0c\u56e0\u4e3a\u5b83\u5b9e\u9645\u662f\u5229\u7528\u7684linux\u7cfb\u7edf\u4e0b\u7684tc(Traffic Control)\u547d\u4ee4\uff0c\u6240\u4ee5\u8981\u6a21\u62df\u7684\u8bdd\u5c31\u8981\u4f7f\u7528linux\u7cfb\u7edf\uff0c\u8fd9\u91cc\u6211\u5c31\u4e0d\u53bb\u6a21\u62df\u4e86\u3002\\n## \u603b\u7ed3\\n\u672c\u6765\uff0c\u6211\u662f\u6253\u7b97\u5199\u4e00\u7bc7\u5173\u4e8eChaosblade\u5b8c\u6574\u4f7f\u7528\u7684\u6587\u7ae0\u7684\uff0c\u4f46\u662f\u76ee\u524d\u770b\u6765\u5b83\u8fd8\u4e0d\u662f\u5f88\u5b8c\u5584\uff0c\u6240\u4ee5\u8fd9\u6b21\u5c31\u5199\u5230\u8fd9\u91cc\uff0c\u6211\u8981\u53bbgithub\u4e0a\u9762\u63d0issue\u53bb\u4e86\u3002\\n\u4f46\u662f\uff0c\u6211\u76f8\u4fe1\u901a\u8fc7\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5927\u5bb6\u5e94\u8be5\u5bf9Chaosblade\u7684\u4f5c\u7528\u548c\u529f\u80fd\u90fd\u6709\u6240\u4e86\u89e3\u4e86\uff0c\u4f60\u4eec\u6709\u6536\u83b7\u5c31\u662f\u6211\u7684\u76ee\u7684\u3002"}]}')}}]);